/*
Navicat MySQL Data Transfer

Source Server         : exam
Source Server Version : 50520
Source Host           : localhost:3306
Source Database       : ssm

Target Server Type    : MYSQL
Target Server Version : 50520
File Encoding         : 65001

Date: 2018-12-21 10:13:00
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for `class`
-- ----------------------------
DROP TABLE IF EXISTS `class`;
CREATE TABLE `class` (
  `cid` int(11) NOT NULL AUTO_INCREMENT,
  `cname` varchar(50) CHARACTER SET utf8 DEFAULT '',
  `maid` int(11) DEFAULT NULL,
  PRIMARY KEY (`cid`),
  KEY `fk_maid` (`maid`),
  CONSTRAINT `fk_maid` FOREIGN KEY (`maid`) REFERENCES `major` (`maid`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=latin1;

-- ----------------------------
-- Records of class
-- ----------------------------
INSERT INTO `class` VALUES ('1', '1601312', '1');
INSERT INTO `class` VALUES ('2', '1601311', '2');
INSERT INTO `class` VALUES ('3', '1601313', '3');
INSERT INTO `class` VALUES ('6', '1601311', '1');
INSERT INTO `class` VALUES ('7', '1601311', '13');
INSERT INTO `class` VALUES ('8', '1601312', '13');
INSERT INTO `class` VALUES ('9', '1601111', '11');
INSERT INTO `class` VALUES ('10', '1601112', '11');
INSERT INTO `class` VALUES ('11', '1601311', '14');
INSERT INTO `class` VALUES ('12', '1601311', '15');
INSERT INTO `class` VALUES ('13', '1601312', '15');
INSERT INTO `class` VALUES ('14', '1601313', '15');
INSERT INTO `class` VALUES ('15', '2001911', '16');

-- ----------------------------
-- Table structure for `exam_info`
-- ----------------------------
DROP TABLE IF EXISTS `exam_info`;
CREATE TABLE `exam_info` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `examname` varchar(100) NOT NULL,
  `begindate` date DEFAULT NULL,
  `begintime` time DEFAULT NULL,
  `enddate` date DEFAULT NULL,
  `endtime` time DEFAULT NULL,
  `password` varchar(100) DEFAULT NULL,
  `state` varchar(5) NOT NULL,
  `teacher` varchar(50) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of exam_info
-- ----------------------------
INSERT INTO `exam_info` VALUES ('1', '测试', '2018-09-24', '13:00:59', '2018-12-24', '13:00:59', '123456', '0', 'root');

-- ----------------------------
-- Table structure for `major`
-- ----------------------------
DROP TABLE IF EXISTS `major`;
CREATE TABLE `major` (
  `maid` int(11) NOT NULL AUTO_INCREMENT,
  `maname` varchar(50) CHARACTER SET utf8 NOT NULL,
  `seid` int(11) NOT NULL,
  PRIMARY KEY (`maid`),
  KEY `fk_seid` (`seid`),
  KEY `maid` (`maid`),
  CONSTRAINT `fk_seid` FOREIGN KEY (`seid`) REFERENCES `semester` (`seid`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=latin1;

-- ----------------------------
-- Records of major
-- ----------------------------
INSERT INTO `major` VALUES ('1', '软件工程', '1');
INSERT INTO `major` VALUES ('2', '计算机科学与技术', '2');
INSERT INTO `major` VALUES ('3', '大数据', '3');
INSERT INTO `major` VALUES ('4', '软件工程', '3');
INSERT INTO `major` VALUES ('6', '大数据', '1');
INSERT INTO `major` VALUES ('10', '信息管理', '1');
INSERT INTO `major` VALUES ('11', '计算机科学与技术', '1');
INSERT INTO `major` VALUES ('12', '物联网', '1');
INSERT INTO `major` VALUES ('13', '大数据', '5');
INSERT INTO `major` VALUES ('14', '计算机科学与技术', '5');
INSERT INTO `major` VALUES ('15', '软件工程', '4');
INSERT INTO `major` VALUES ('16', '人工智能', '6');

-- ----------------------------
-- Table structure for `point1`
-- ----------------------------
DROP TABLE IF EXISTS `point1`;
CREATE TABLE `point1` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `pointname` varchar(50) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  KEY `id` (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of point1
-- ----------------------------
INSERT INTO `point1` VALUES ('1', '程序设计ABC');
INSERT INTO `point1` VALUES ('2', '数据类型、运算符与表达式');
INSERT INTO `point1` VALUES ('3', '键盘输入与屏幕输出');
INSERT INTO `point1` VALUES ('4', '程序的控制结构');
INSERT INTO `point1` VALUES ('5', '函数');
INSERT INTO `point1` VALUES ('6', '数组');
INSERT INTO `point1` VALUES ('7', '指针');
INSERT INTO `point1` VALUES ('8', '结构体与共用体');
INSERT INTO `point1` VALUES ('9', '文件操作');
INSERT INTO `point1` VALUES ('10', 'C程序设计常见错误与解决方案');

-- ----------------------------
-- Table structure for `point2`
-- ----------------------------
DROP TABLE IF EXISTS `point2`;
CREATE TABLE `point2` (
  `bid` int(11) NOT NULL AUTO_INCREMENT,
  `pname` varchar(50) CHARACTER SET utf8 NOT NULL,
  `aid` int(11) DEFAULT NULL,
  PRIMARY KEY (`bid`) USING BTREE,
  KEY `fk_point_id` (`aid`) USING BTREE,
  CONSTRAINT `point2_ibfk_1` FOREIGN KEY (`aid`) REFERENCES `point1` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=55 DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of point2
-- ----------------------------
INSERT INTO `point2` VALUES ('1', '计算机与人', '1');
INSERT INTO `point2` VALUES ('2', '计算机与程序设计语言', '1');
INSERT INTO `point2` VALUES ('3', '程序设计语言的故事', '1');
INSERT INTO `point2` VALUES ('4', 'C语言的故事', '1');
INSERT INTO `point2` VALUES ('5', '程序设计语言的工作原理', '1');
INSERT INTO `point2` VALUES ('7', 'C程序常见符号分类', '2');
INSERT INTO `point2` VALUES ('8', '数据类型', '2');
INSERT INTO `point2` VALUES ('9', '常量', '2');
INSERT INTO `point2` VALUES ('10', '变量', '2');
INSERT INTO `point2` VALUES ('11', '常用运算符及表达式', '2');
INSERT INTO `point2` VALUES ('12', 'C语句分类', '3');
INSERT INTO `point2` VALUES ('13', '表达式语句', '3');
INSERT INTO `point2` VALUES ('14', '复合语句和空语句', '3');
INSERT INTO `point2` VALUES ('15', '基本的输入/输出操作', '3');
INSERT INTO `point2` VALUES ('16', '算法及其描述方法', '4');
INSERT INTO `point2` VALUES ('17', '顺序结构', '4');
INSERT INTO `point2` VALUES ('18', '选择结构', '4');
INSERT INTO `point2` VALUES ('19', '循环结构', '4');
INSERT INTO `point2` VALUES ('20', '流程转与控制语句', '4');
INSERT INTO `point2` VALUES ('21', '程序调试与排错', '4');
INSERT INTO `point2` VALUES ('22', '结构化程序设计方法简介', '4');
INSERT INTO `point2` VALUES ('23', '程序设计的艺术', '5');
INSERT INTO `point2` VALUES ('24', '函数的定义与使用', '5');
INSERT INTO `point2` VALUES ('25', '变量的作用域和存储类型', '5');
INSERT INTO `point2` VALUES ('26', '函数封装', '5');
INSERT INTO `point2` VALUES ('27', '预处理指令', '5');
INSERT INTO `point2` VALUES ('28', '使用assert（）查错', '5');
INSERT INTO `point2` VALUES ('29', '模块和链接', '5');
INSERT INTO `point2` VALUES ('30', '模块化程序设计方法简介', '5');
INSERT INTO `point2` VALUES ('31', '递归', '5');
INSERT INTO `point2` VALUES ('32', '数组类型的应用场合', '6');
INSERT INTO `point2` VALUES ('33', '数组的定义、引用和初始化', '6');
INSERT INTO `point2` VALUES ('34', '向函数传递一维数组', '6');
INSERT INTO `point2` VALUES ('35', '向函数传递二维数组', '6');
INSERT INTO `point2` VALUES ('36', '字符数组', '6');
INSERT INTO `point2` VALUES ('37', '指针概念', '7');
INSERT INTO `point2` VALUES ('38', '指针和数组间的关系', '7');
INSERT INTO `point2` VALUES ('39', '指针数组', '7');
INSERT INTO `point2` VALUES ('40', '函数指针', '7');
INSERT INTO `point2` VALUES ('41', '带函数的main（）函数', '7');
INSERT INTO `point2` VALUES ('42', '动态数组的实现', '7');
INSERT INTO `point2` VALUES ('43', '使用const的修饰指针变量', '7');
INSERT INTO `point2` VALUES ('44', '代码风格', '7');
INSERT INTO `point2` VALUES ('45', '结构体的应用场合', '8');
INSERT INTO `point2` VALUES ('46', '结构体类型与结构体变量', '8');
INSERT INTO `point2` VALUES ('47', '结构体数组', '8');
INSERT INTO `point2` VALUES ('48', '向函数传递结构体', '8');
INSERT INTO `point2` VALUES ('49', '动态数组结构', '8');
INSERT INTO `point2` VALUES ('50', '共用体', '8');
INSERT INTO `point2` VALUES ('51', '计算机中流', '9');
INSERT INTO `point2` VALUES ('52', '文件', '9');
INSERT INTO `point2` VALUES ('53', '基本文件操作', '9');
INSERT INTO `point2` VALUES ('54', '高级文件操作', '9');

-- ----------------------------
-- Table structure for `semester`
-- ----------------------------
DROP TABLE IF EXISTS `semester`;
CREATE TABLE `semester` (
  `seid` int(11) NOT NULL AUTO_INCREMENT,
  `sename` varchar(50) CHARACTER SET utf8 NOT NULL,
  PRIMARY KEY (`seid`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=latin1;

-- ----------------------------
-- Records of semester
-- ----------------------------
INSERT INTO `semester` VALUES ('1', '2016级');
INSERT INTO `semester` VALUES ('2', '2017级');
INSERT INTO `semester` VALUES ('3', '2018级');
INSERT INTO `semester` VALUES ('4', '测试学年');
INSERT INTO `semester` VALUES ('5', '2019级');
INSERT INTO `semester` VALUES ('6', '2020级');

-- ----------------------------
-- Table structure for `student`
-- ----------------------------
DROP TABLE IF EXISTS `student`;
CREATE TABLE `student` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `username` varchar(16) CHARACTER SET utf8 NOT NULL DEFAULT '',
  `password` varchar(16) NOT NULL,
  `classname` varchar(20) NOT NULL,
  `num` varchar(20) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=40 DEFAULT CHARSET=latin1;

-- ----------------------------
-- Records of student
-- ----------------------------
INSERT INTO `student` VALUES ('2', 'root', 'root', '1601312', '1160131230');
INSERT INTO `student` VALUES ('8', '佩奇', 'lalalala', '1601312', '1160131205');
INSERT INTO `student` VALUES ('17', '苏西', 'qqq', '1601311', '1160131131');
INSERT INTO `student` VALUES ('19', '理查德', '123456', '1601311', '1160131110');
INSERT INTO `student` VALUES ('20', '猪妈妈', 'lalalal', '1601311', '1160131112');
INSERT INTO `student` VALUES ('23', 'ds', '1601311', 'ds', '1601311');
INSERT INTO `student` VALUES ('24', '佩奇', '1601311', '134', '1601311');
INSERT INTO `student` VALUES ('25', '乔治', '1601311', '134', '1601311');
INSERT INTO `student` VALUES ('27', 'luoming', '1601311', '123456', '1601311');
INSERT INTO `student` VALUES ('28', '实现啦', '1601311', 'lalalal', '1601311');
INSERT INTO `student` VALUES ('29', '马化腾', '1601312', 'root', '1601312');
INSERT INTO `student` VALUES ('30', '马云', '1601312', '123', '1601312');
INSERT INTO `student` VALUES ('32', '佩奇', '1160131101', '1601311', '1160131101');
INSERT INTO `student` VALUES ('33', '乔治', '1160131103', '1601311', '1160131103');
INSERT INTO `student` VALUES ('39', '猪爸爸', '1160131125', '1601311', '1160131125');

-- ----------------------------
-- Table structure for `stu_score`
-- ----------------------------
DROP TABLE IF EXISTS `stu_score`;
CREATE TABLE `stu_score` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `examname` varchar(50) NOT NULL,
  `allscore` int(11) NOT NULL,
  `stuid` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of stu_score
-- ----------------------------
INSERT INTO `stu_score` VALUES ('2', '测试', '40', null);
INSERT INTO `stu_score` VALUES ('3', '测试', '20', null);
INSERT INTO `stu_score` VALUES ('4', '测试', '20', null);

-- ----------------------------
-- Table structure for `tb_customer`
-- ----------------------------
DROP TABLE IF EXISTS `tb_customer`;
CREATE TABLE `tb_customer` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) DEFAULT NULL,
  `telephone` varchar(100) DEFAULT NULL,
  `address` varchar(100) DEFAULT NULL,
  `remark` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_customer
-- ----------------------------
INSERT INTO `tb_customer` VALUES ('2', '逗瓜', '123456789', '你猜', '不想写备注');
INSERT INTO `tb_customer` VALUES ('3', '愤青', '123456789', '你猜', '不想写备注');
INSERT INTO `tb_customer` VALUES ('5', '小白', '123456789', '你猜', '不想写备注');
INSERT INTO `tb_customer` VALUES ('6', '菜鸡', '123456789', '你猜', '不想写备注');
INSERT INTO `tb_customer` VALUES ('7', '罗鸣', '1884681325', '啦啦啦', 'student');
INSERT INTO `tb_customer` VALUES ('8', '', '', '', '');
INSERT INTO `tb_customer` VALUES ('9', null, null, null, null);
INSERT INTO `tb_customer` VALUES ('10', null, null, null, null);
INSERT INTO `tb_customer` VALUES ('11', null, null, '', null);

-- ----------------------------
-- Table structure for `tb_user`
-- ----------------------------
DROP TABLE IF EXISTS `tb_user`;
CREATE TABLE `tb_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(100) DEFAULT NULL,
  `password` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_user
-- ----------------------------
INSERT INTO `tb_user` VALUES ('1', 'admin', 'admin');
INSERT INTO `tb_user` VALUES ('2', 'a', 'a');
INSERT INTO `tb_user` VALUES ('3', 'root', 'root');

-- ----------------------------
-- Table structure for `teacher`
-- ----------------------------
DROP TABLE IF EXISTS `teacher`;
CREATE TABLE `teacher` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `username` varchar(16) CHARACTER SET utf8 NOT NULL DEFAULT '',
  `password` varchar(16) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=latin1;

-- ----------------------------
-- Records of teacher
-- ----------------------------
INSERT INTO `teacher` VALUES ('1', 'root', 'root');
INSERT INTO `teacher` VALUES ('2', '方海诺', '123456');
INSERT INTO `teacher` VALUES ('4', 'dds', '123456');
INSERT INTO `teacher` VALUES ('5', '王婧', '123456');

-- ----------------------------
-- Table structure for `tk_blank`
-- ----------------------------
DROP TABLE IF EXISTS `tk_blank`;
CREATE TABLE `tk_blank` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '答题编号',
  `content` longtext NOT NULL COMMENT '试题内容',
  `answer` longtext COMMENT '考试试题答案',
  `analysis` longtext COMMENT '试卷编号',
  `chapter` varchar(255) DEFAULT NULL COMMENT '章节编号',
  `chaptertwo` varchar(255) DEFAULT NULL,
  `difficulty` varchar(255) DEFAULT NULL COMMENT '试题难度',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=57 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of tk_blank
-- ----------------------------
INSERT INTO `tk_blank` VALUES ('1', '在c语言程序中，每一个声明、每个语句都必须以____结尾。', '分号（或 ；）', '有些难', '3', 'C语句分类', '1');
INSERT INTO `tk_blank` VALUES ('2', '在printf函数格式字符中，只能输出一个字符的格式字符是_____ 、用于输出字符串的格式字符是_____ 。', '%c、%s ', '有些难', '2', '常用运算符及表达式', '2');
INSERT INTO `tk_blank` VALUES ('3', '在C语言中规定：标识符只能由字母、________ 和下划线三种字符组成。', '数字', '有些难', '2', '常用运算符及表达式', '5');
INSERT INTO `tk_blank` VALUES ('4', '在C程序运行过程中，值可以被改变的量叫_______ ，在作用域内值不可以被改变的量叫______ 。', '变量、常量 ', '有难度', '2', '变量', '2');
INSERT INTO `tk_blank` VALUES ('5', '函数由_______ 和 _________构成', '函数首部、函数体', '很基础', '5', '函数的定义与使用', '4');
INSERT INTO `tk_blank` VALUES ('6', '在循环语句中，continue 的作用是结束本次循环，break的作用是__________', '跳出整个循环', '基础题', '4', '循环结构', '5');
INSERT INTO `tk_blank` VALUES ('7', '已知x=2.4,y=5.1,a=4,则表达式x+a%3*(int)(x+y)%5/3的值为__________', '3.400000', '很基础', '5', '函数的定义与使用', '2');
INSERT INTO `tk_blank` VALUES ('8', '设a=4，b=5，c=6。各逻辑表达式独立运算，f=a>b>c，f值为：______；a||b+c&&b-c，逻辑值为：_______；!(a+b)+c-1&&b+c/2，逻辑值为：_______.', '0、1、1', '有些难', '5', '函数的定义与使用', '2');
INSERT INTO `tk_blank` VALUES ('9', 'C语言中，程序设计的三种基本结构为：________,________,_________.', '顺序、选择、循环', '有难度', '4', '顺序结构', '1');
INSERT INTO `tk_blank` VALUES ('10', '从变量值的生存期角度来分，变量可以分为______和________.', '静态、动态 ', '难度上升', '5', '变量的作用域和存储类型', '4');
INSERT INTO `tk_blank` VALUES ('11', '指针是变量的________；整型属于基本数据类型，结构体属于________数据类型。', '.地址、构造', '难度上升', '7', '指针和数组间的关系', '1');
INSERT INTO `tk_blank` VALUES ('12', 'C语言中没有逻辑量，在给出逻辑运算结果时，以________代表\"真\"，用______代表\"假\"。', '1、0 ', '有些难', '2', 'C程序常见符号分类', '1');
INSERT INTO `tk_blank` VALUES ('13', '设int x=17,y=5； 执行语句x*=x++/--y后x的值为_________', '69 ', '难度上升', '2', '一个简单的C程序列子', '5');
INSERT INTO `tk_blank` VALUES ('14', '.C语言源程序文件的后缀是_______，经过编译后，生成文件的后缀是_______，经过连接后，生成文件的后缀是________.', '.c、.obj、.exe', '基础题', '2', '一个简单的C程序列子', '2');
INSERT INTO `tk_blank` VALUES ('15', '复合语句是由一对_______括起来的若干语句的组合,其在语法上与一个_______相同。', '{}、语句', '难度上升', '3', '复合语句和空语句', '3');
INSERT INTO `tk_blank` VALUES ('16', '若x为int型变量x=6，则执行以下语句后， x+=x-=x*x;的值为________.', '-12', '有难度', '2', '一个简单的C程序列子', '3');
INSERT INTO `tk_blank` VALUES ('17', '为表示关系x>=y>=z,应用C语言表达式__________', '（x>=y）&&(y<=z)', '很基础', '3', '表达式语句', '3');
INSERT INTO `tk_blank` VALUES ('18', '已知int a=3,b=4,c=5；则表达式a>b&&!c||1的值为__________', '1 ', '有些难', '2', '常用运算符及表达式', '2');
INSERT INTO `tk_blank` VALUES ('19', '设X、Y和Z均为int型变量，则以下语句：Z=X；X=Y；Y=Z；的功能是_________', '交换', '基础题', '3', '表达式语句', '5');
INSERT INTO `tk_blank` VALUES ('20', 'C程序是由_______构成的，C程序的执行是从_______开始的。', '函数 、主函数', '这很容易', '2', '一个简单的C程序列子', '4');
INSERT INTO `tk_blank` VALUES ('21', '.设有语句“int a=3;”,执行语句“printf(“%d”,a++);”后，输出结果是_________，变量a的值是_______.', '3、4', '很基础', '3', '表达式语句', '4');
INSERT INTO `tk_blank` VALUES ('22', 'C语言中，逻辑运算包括：_________,_________,_________.', '与、或、非', '有难度', '2', '常用运算符及表达式', '1');
INSERT INTO `tk_blank` VALUES ('23', '.在循环语句中，break作用是结束整个循环，continue作用是_______.', '结束本次循环 ', '有难度', '4', '循环结构', '5');
INSERT INTO `tk_blank` VALUES ('24', '当执行完以下语句i=15；j=14；m=++i；n=j--；后，i=______,j=_______,m=_______,n=_________.', '16、13、16、14', '难度上升', '5', '函数的定义与使用', '2');
INSERT INTO `tk_blank` VALUES ('25', '写出下面表达式运算后的值，设原来a=12。设a已定义为整形变量。各表达式独立运算。a+=a的值为：________ ；a*=2+3的值为：________；a-=2的值为：__________；a/=a+a的值为：___________.', '24、60、10、0', '难度上升', '5', '函数的定义与使用', '2');
INSERT INTO `tk_blank` VALUES ('26', 'C语言的基本数据类型分别为 _________,___________,__________和枚举类型', '整型、实型（浮点型）、字符型 ', '有点难', '2', '数据类型', '2');
INSERT INTO `tk_blank` VALUES ('27', ' 若a,b和c均是int型变量,则计算表达式 a=(b=4)+(c=2) 后，a值为_______，b值为_______，c值为_________.', ' 6、4、2', '难度上升', '3', '表达式语句', '2');
INSERT INTO `tk_blank` VALUES ('28', 'feof(fp)函数用来判断文件是否结束，如果遇到文件结束，函数值为_________， 否则为_________.', '非0值、0', '基础题', '5', '函数的定义与使用', '2');
INSERT INTO `tk_blank` VALUES ('29', '设变量定义为\"int x=3， *p=&x;\"，设变量x的地址为2000，则*p=________，&(*p)=________(填数字)。', '3、2000', '有些难', '2', '变量', '2');
INSERT INTO `tk_blank` VALUES ('30', '若x和n均是int型变量，且x和n的初值均为5，则计算表达式 x+=n++后x的值为________，n的值为_________.', '10、6', '基础题', '5', '函数的定义与使用', '3');
INSERT INTO `tk_blank` VALUES ('31', '一个函数由两部分组成，它们是_______和________.', '函数首部、函数体', '基础题', '1', '程序设计语言的工作原理', '5');
INSERT INTO `tk_blank` VALUES ('32', '一个C源程序至少包含一个_________,即_________.', '主函数、main函数', '有难度', '1', '程序设计语言的工作原理', '5');
INSERT INTO `tk_blank` VALUES ('33', '设int a=12; 则表达式a/=a+a的值是__________.', '0', '有些难', '5', '函数的定义与使用', '5');
INSERT INTO `tk_blank` VALUES ('34', '表达式x=(a=3,6*a)和表达式x=a=3,6*a分别是________表达式和_______表达式，两个表达式执行完的结果分别是______和______，x值分别是________和____________.', '赋值、逗号、18、18、18、3', '基础题', '3', '表达式语句', '4');
INSERT INTO `tk_blank` VALUES ('35', '在C语言中，实数有两种表示形式，即__________和__________.', '浮点型、指数型', '基础题', '2', '数据类型', '2');
INSERT INTO `tk_blank` VALUES ('36', 'C语言中，运算符的优先级最小的是_________运算符.', '逗号', '有些难', '2', '常用运算符及表达式', '1');
INSERT INTO `tk_blank` VALUES ('37', '在C语言中，字符型数据和整型数据之间可以通用，一个字符数据既能以________输出，也能以_________输出。', '字符,整数', '难度上升', '6', '字符数组', '2');
INSERT INTO `tk_blank` VALUES ('38', '\"%-ms\"表示如果串长小于m，则在m列范围内，字符串向_____靠，_____补空格.', '左，右', '基础题', '6', '字符数组', '3');
INSERT INTO `tk_blank` VALUES ('39', 'printf函数的“格式控制”包括两部分，它们是______和________.', '格式说明,普通字符', '有难度', '3', '基本的输入/输出操作', '3');
INSERT INTO `tk_blank` VALUES ('40', '若a=5，b=6，c=7，d=8,则表达式d=a/2&&b==c||!a的值为_________', '0', '基础题', '2', '常用运算符及表达式', '5');
INSERT INTO `tk_blank` VALUES ('41', '定义  int x=10,y,z;执行y=z=x;x=y==z后,变量x的值为 ________', '1', '有难度', '5', '函数的定义与使用', '4');
INSERT INTO `tk_blank` VALUES ('42', 'break语句只能用于_________语句和_________语句中。', 'switch、循环', '有些难', '4', '循环结构', '2');
INSERT INTO `tk_blank` VALUES ('43', '构成数组的各个元素必须具有相同的______________.', '类型', '基础题', '6', '数组的定义、引用和初始化', '2');
INSERT INTO `tk_blank` VALUES ('44', '	一个函数由两部分组成，它们是_____和_________。', '函数首部、函数体', '程序设计和C语言', '1', '计算机与人', '1');
INSERT INTO `tk_blank` VALUES ('45', '2．	一个C源程序至少包含一个______，即_____。', '2．	主函数、main函数', '程序设计和C语言', '1', '程序设计语言的工作原理', '2');
INSERT INTO `tk_blank` VALUES ('46', '3．	设int a=12; 则表达式a/=a+a的值是______。', '0', '程序设计和C语言', '1', '程序设计语言的工作原理', '4');
INSERT INTO `tk_blank` VALUES ('47', '4．	表达式x=(a=3,6*a)和表达式x=a=3,6*a分别是_______表达式和______表达式，两个表达式执行完的结果分别是_______和______,x的值分别是______和______.', '4．	赋值、逗号、18、18、18、3', '程序设计和C语言', '1', '程序设计语言的工作原理', '4');
INSERT INTO `tk_blank` VALUES ('48', '5．	在C语言中，实数有两种表示形式，即_______和______。', '5．	浮点型、指数型', '程序设计和C语言', '1', '程序设计语言的工作原理', '3');
INSERT INTO `tk_blank` VALUES ('49', '6．	在C语言中，运算符的优先级最小的是______运算符。', '6．	逗号', '程序设计和C语言', '1', '程序设计语言的工作原理', '4');
INSERT INTO `tk_blank` VALUES ('50', '1．	在C语言中，字符型数据和整型数据之间可以通用，一个字符数据既能以      输出，也能以______输出。', '1．	字符    整数', '顺序程序设计', '4', '顺序结构', '4');
INSERT INTO `tk_blank` VALUES ('51', '2．	\"%-ms\"表示如果串长小于m，则在m列范围内，字符串向_____靠，____补空格。', '2．	左     右', '顺序程序设计', '4', '顺序结构', '4');
INSERT INTO `tk_blank` VALUES ('52', '3．	printf函数的“格式控制”包括两部分，它们是_____和__________.', '3．	格式说明     普通字符', '顺序程序设计', '4', '顺序结构', '3');
INSERT INTO `tk_blank` VALUES ('53', '1．	若a=5，b=6，c=7，d=8,则表达式d=a/2&&b==c||!a的值为_______。', '0', '选择程序设计', '4', '选择结构', '3');
INSERT INTO `tk_blank` VALUES ('54', '2．	定义  int x=10,y,z;执行y=z=x;x=y==z后,变量x的值为_________。', '1', '选择程序设计', '4', '选择结构', '4');
INSERT INTO `tk_blank` VALUES ('55', '1．	break语句只能用于______语句和_____语句中。', '1．	switch、循环', '循环程序设计', '4', '循环结构', '4');
INSERT INTO `tk_blank` VALUES ('56', '构成数组的各个元素必须具有相同的_______。', '类型', '数  组', '1', '数组类型的应用场合', '3');

-- ----------------------------
-- Table structure for `tk_choice`
-- ----------------------------
DROP TABLE IF EXISTS `tk_choice`;
CREATE TABLE `tk_choice` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '答题编号',
  `content` longtext NOT NULL COMMENT '试题内容',
  `aoption` longtext COMMENT '选项A',
  `boption` longtext COMMENT '选项B',
  `coption` longtext COMMENT '选项C',
  `doption` longtext COMMENT '选项D',
  `answer` longtext COMMENT '试题答案',
  `analysis` longtext COMMENT '试题解析',
  `chapter` varchar(255) DEFAULT NULL COMMENT '章节编号',
  `chaptertwo` varchar(255) DEFAULT NULL,
  `difficulty` varchar(255) DEFAULT NULL COMMENT '试题难度',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=116 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of tk_choice
-- ----------------------------
INSERT INTO `tk_choice` VALUES ('1', 'C语言的基本构成单位是:__________。', '函数', '函数和过程', '超文本过程', '子程序', 'A', '基础题', '2', '常量', '4');
INSERT INTO `tk_choice` VALUES ('2', '一个C语言程序总是从_________开始执行。', '主过程', '主函数', '子程序', '主程序', 'B', '题目有些难', '1', '程序设计语言的工作原理', '3');
INSERT INTO `tk_choice` VALUES ('3', 'C语言的程序一行写不下时，可以___________。', '用逗号换行', ' 用分号换行', '在任意一空格处换行', '用回车符换行', 'C', '还是基础', '1', '程序设计语言的工作原理', '2');
INSERT INTO `tk_choice` VALUES ('4', '以下叙述不正确的是：_________。', '在C程序中，语句之间必须要用分号\";\"分隔', '若a是实型变量，C程序中a=10是正确的，因为实型变量中允许存放整型数', '在C程序中，无论是整数还是实数都能正确无误地表示', '在C程序中，%是只能用于整数运算的运算符', 'C', '运算符', '1', '程序设计语言的工作原理', '4');
INSERT INTO `tk_choice` VALUES ('5', '以下不正确的C语言标识符是________。', 'ABC', 'abc', 'a_bc', 'ab.c', 'D', '基础题', '2', '常用运算符及表达式', '5');
INSERT INTO `tk_choice` VALUES ('6', '下列字符串是标识符的是：_________。', '_HJ', '9_student', 'long', 'LINE 1', 'A', '难度上升', '2', '常用运算符及表达式', '1');
INSERT INTO `tk_choice` VALUES ('7', '以下说法中正确的是：________。', 'C语言程序总是从第一个定义的函数开始执行', '在C语言程序中，要调用的函数必须放在main()函数中定义', 'C语言程序总是从main()函数开始执行', 'C语言程序中的main()函数必须放在程序的开始部分', 'C', '难度上升', '2', '常用运算符及表达式', '5');
INSERT INTO `tk_choice` VALUES ('8', '不合法的常量是：_______。', '‘\\2’', ' \"    \"', '‘3’', ' ‘\\483’', 'D', '基础题', '2', '常用运算符及表达式', '4');
INSERT INTO `tk_choice` VALUES ('9', '已知各变量的类型说明如下，则以下不符合C语言语法的表达式是：________。int k,a,b;\r\nunsigned long w=5;\r\ndouble x=1.422;', 'x%(-3)', 'w+=-2', ' k=(a=2,b=3,a+b)', 'a+=a=+(b=4)*(a=3)', 'A', '难度上升', '2', '常用运算符及表达式', '1');
INSERT INTO `tk_choice` VALUES ('10', '在C语言中，字符型数据在内存中以________形式存放。', '原码', 'BCD码', '反码', 'ASCII码', 'D', '难度上升', '2', '常用运算符及表达式', '2');
INSERT INTO `tk_choice` VALUES ('11', '若有定义：int a=7; float x=2.5; y=4.7;\r\n则表达式x+a%3*(int)(x+y)%2/4的值是：_________。', ' 2.500000', '2.750000', '3.500000', '0.000000', 'A', '难度上升', '2', '数据类型', '5');
INSERT INTO `tk_choice` VALUES ('12', '设有说明：char w; int x; float y; double z;\r\n则表达式w*x+z-y值的数据类型为:_________。', 'float', 'char', 'int', 'double', 'D', '基础题', '2', '数据类型', '3');
INSERT INTO `tk_choice` VALUES ('13', '以下_______是不正确的转义字符。', ' \'\\\\\'', '\'\\\'', '\'081\'', ' \'\\0\'', 'BC', '难度上升', '2', '常用运算符及表达式', '4');
INSERT INTO `tk_choice` VALUES ('14', '若x为int型变量,则执行以下语句后,x的值为___________。\r\n    		x=6; x+=x-=x*x;', '36', '-60', '60', '-24', 'B', '题目有些难', '2', '数据类型', '3');
INSERT INTO `tk_choice` VALUES ('15', '字符串\"\\\\\\\"ABC\\\"\\\\\"的长度是__________ 。', '11', '7', '5', '3', 'B', '题目有些难', '2', '数据类型', '2');
INSERT INTO `tk_choice` VALUES ('16', '若x,y,z均为int型变量,则执行以下语句后的输出为__________。\r\n    		x=(y=(z=10)+5)-5;\r\n    		printf(\"x=%d,y=%d,z=%d\\n\",x,y,z);\r\n    		y=(z=x=0,x+10);\r\n    		printf(\"x=%d,y=%d,z=%d\\n\",x,y,z);', 'X=10,Y=15,Z=10<回车> X=0, Y=10, Z=0', 'X=10, Y=10,Z=10<回车> X=0,Y =10, Z=10', 'X=10,Y=15,Z=10 <回车>X=10, Y=10, Z=0', 'X=10,Y=10,Z=10 <回车>X=0, Y=10, Z=0', 'A', '题目有些难', '2', '常用运算符及表达式', '2');
INSERT INTO `tk_choice` VALUES ('17', '若x是int型变量,y是float型变量,所用的scanf调用语句格式为:scanf(\"x=%d,y=%f\",&x,&y);则为了将数据10和66.6分别赋给x和y,正确的输入应是:________________。', 'x=10,y=66.6<回车>', '10 66.6<回车>', '10<回车>66.6<回车>', 'x=10<回车>y=66.6<回车>', 'A', '难度上升', '2', '数据类型', '3');
INSERT INTO `tk_choice` VALUES ('18', '已知有变量定义：int a;char c;用scanf(“%d%c”,&a,&c);语句给a和c输入数据，使30存入a，字符‘b’存入c，则正确的输入是：________________。', '30’b’<回车>', ' 30  b<回车>', '30<回车>b<回车>', '30b<回车>', 'D', '难度上升', '2', '数据类型', '4');
INSERT INTO `tk_choice` VALUES ('19', '已知有变量定义：double x;long a; 要给a和x输入数据，正确的输入语句是___________。若要输出a和x的值，正确的输出语句_____________。', 'scanf(“%d%f”,&a,&x);   printf(“%d,%f”,a,x);', 'scanf(“%ld%f”,&a,&x);     printf(“%ld,%f”,a,x);', 'scanf(“%ld%lf”,&a,&x);     printf(“%ld,%lf”,a,x);', 'scanf(“%ld%lf”,&a,&x);     printf(“%ld,%f”,a,x);', 'C', '难度上升', '2', '数据类型', '5');
INSERT INTO `tk_choice` VALUES ('20', '若有定义double x=1，y；则以下的语句执行的结果是_____________。\r\ny=x+3/2; printf(“%f”,y); ', '2.500000', '2.5', '2.000000', '2', 'C', '难度上升', '2', '数据类型', '2');
INSERT INTO `tk_choice` VALUES ('21', '若a为整型变量，则以下语句____________。\r\na=-2L;  printf(\"%d\\n\",a);', ' 赋值不合法', '输出为不确定的值', '输出值为-2', '输出值为2', 'C', '基础题', '2', '常用运算符及表达式', '1');
INSERT INTO `tk_choice` VALUES ('22', '若x=0，y=3，z=3,以下表达式值为0的是___________。', '!x', 'x<y? 1:0', 'x%2&&y==z', 'y=x||z/3', 'C', '题目有些难', '2', '数据类型', '3');
INSERT INTO `tk_choice` VALUES ('23', '若w=1,x=2,y=3,z=4,则条件表达式w<x?w:y<z?y:z的结果为__________。', '4', '3', '2', '1', 'D', '题目有些难', '2', '常用运算符及表达式', '4');
INSERT INTO `tk_choice` VALUES ('24', '分析以下程序, 下列说法正确的是___________。\r\nmain()\r\n  { int x=5,a=0,b=0;\r\nif(x=a+b) printf(\"* * * *\\n\");\r\nelse   printf(\"# # # #\\n\");\r\n  }', '有语法错，不能通过编译', '通过编译，但不能连接', '输出* * * *', '输出# # # #', 'D', '难度上升', '3', '表达式语句', '4');
INSERT INTO `tk_choice` VALUES ('25', '分析以下程序, 下列说法正确的是       。\r\nmain()\r\n  { int x=5,a=0,b=3;\r\nif(x=a+b) printf(\"* * * *\\n\");\r\nelse   printf(\"# # # #\\n\");\r\n			  }', '有语法错，不能通过编译', '通过编译，但不能连接', '输出* * * *', '输出# # # #', 'C', '基础题', '3', '表达式语句', '5');
INSERT INTO `tk_choice` VALUES ('26', '程序段如下：则以下说法中正确的是_________。\r\nint k=5;\r\ndo{\r\n    k--;\r\n}while(k<=0);', '循环执行5次 ', '循环是无限循环', '循环体语句一次也不执行', '循环体语句执行一次', 'D', '题目有些难', '3', '表达式语句', '2');
INSERT INTO `tk_choice` VALUES ('27', '设i和x都是int类型，则for循环语句____________。for(i=0,x=0;i<=9&&x!=876;i++) scanf(\"%d\",&x);', '最多执行10次', '最多执行9次', '是无限循环', '循环体一次也不执行', 'A', '题目有些难', '3', 'C语句分类', '3');
INSERT INTO `tk_choice` VALUES ('28', '下述for循环语句__________。int i,k;\r\nfor(i=0,k=-1;k=1;i++,k++)  printf(\"* * * *\");', '判断循环结束的条件非法', '是无限循环', '只循环一次', ' 一次也不循环', 'B', '难度上升', '3', 'C语句分类', '1');
INSERT INTO `tk_choice` VALUES ('29', '程序段如下：则以下说法中正确的是：__________。int k=-20;\r\nwhile(k=0) k=k+1;', 'while循环执行20次', '循环是无限循环', '循环体语句一次也不执行', '循环体语句执行一次', 'C', '难度上升', '3', 'C语句分类', '3');
INSERT INTO `tk_choice` VALUES ('30', '下列程序段执行后k值为_____________。int k=0,i,j;\r\nfor(i=0;i<5;i++)\r\nfor(j=0;j<3;j++)\r\n   k=k+1 ;', '15', '3', '5', '8', 'A', '难度上升', '3', '表达式语句', '3');
INSERT INTO `tk_choice` VALUES ('31', '程序段如下：则以下说法中不正确的是：___________。#include <stdio.h>\r\nmain()\r\n{\r\nint k=2,;\r\nwhile(k<7) \r\n{\r\nif(k%2) {k=k+3; printf(“k=%d\\n”,k);continue;}\r\nk=k+1;\r\nprintf(“k=%d\\n”,k);\r\n}\r\n}', 'k=k+3;执行一次', 'k=k+1;执行2次', '执行后k值为7', '循环体只执行一次', 'D', '难度上升', '3', 'C语句分类', '1');
INSERT INTO `tk_choice` VALUES ('32', '以下关于数组的描述正确的是_______________。', '数组的大小是固定的，但可以有不同的类型的数组元素。', '数组的大小是可变的，但所有数组元素的类型必须相同。', '数组的大小是固定的，但所有数组元素的类型必须相同。', '数组的大小是可变的，但可以有不同的类型的数组元素。C', 'C', '基础题', '3', 'C语句分类', '5');
INSERT INTO `tk_choice` VALUES ('33', '在定义int a[10];之后，对a的引用正确的是___________。', 'a[10]', 'a[6.3]', 'a(6)', 'a[10-10]', 'D', '题目有些难', '3', 'C语句分类', '1');
INSERT INTO `tk_choice` VALUES ('34', '以下能正确定义数组并正确赋初值的语句是____________。', 'int n=5,b[n][n];', 'int a[1][2]={{1},{3}};', 'int c[2][]={{1,2},{3,4}}', ' int a[3][2]={{1,2},{3,4}}', 'D', '难度上升', '3', '表达式语句', '2');
INSERT INTO `tk_choice` VALUES ('35', '以下不能正确赋值的是_____________。', 'char s1[10];s1=\"test\";', 'char s2[]={’t’,’e’,’s’,’t’}', 'char s3[20]= \"test\";', 'char s4[4]={ ’t’,’e’,’s’,’t’}', 'A', '难度上升', '3', 'C语句分类', '3');
INSERT INTO `tk_choice` VALUES ('36', '下面程序段运行时输出结果是______________。char s[18]= \"a book! \";\r\nprintf(\"%.4s\",s);', 'a book!', '     a book!', 'a bo', '格式描述不正确，没有确定输出', 'C', '题目有些难', '3', 'C语句分类', '3');
INSERT INTO `tk_choice` VALUES ('37', '下面程序段运行时输出结果是__________。char s[12]= \"A book\";\r\nprintf(\"%d\\n\",strlen(s));', '12', '8', '7', '6', 'D', '难度上升', '3', 'C语句分类', '4');
INSERT INTO `tk_choice` VALUES ('38', '在执行int a[][3]={1,2,3,4,5,6};语句后，a[1][0]的值是_________。', '4', '1', '2', '5', 'A', '难度上升', '3', '表达式语句', '2');
INSERT INTO `tk_choice` VALUES ('39', '在C语言中，当函数调用时____________。', '实参和形参各占一个独立的存储单元', '实参和形参共用存储单元', '可以由用户指定实参和形参是否共用存储单元', '由系统自动确定实参和形参是否共用存储单元', 'A', '基础题', '3', 'C语句分类', '3');
INSERT INTO `tk_choice` VALUES ('40', '以下函数调用语句中实参的个数为_________。exce((v1,v2),(v3,v4,v5),v6);', '3', '4', '5', '6', 'A', '难度上升', '3', '表达式语句', '2');
INSERT INTO `tk_choice` VALUES ('41', '如果在一个函数的复合语句中定义了一个变量，则该变量___________。', '只在该符合语句中有效，在该符合语句外无效', '在该函数中任何位置都有效', '在本程序的原文件范围内均有效', ' 此定义方法错误，其变量为非法变量', 'A', '难度上升', '3', '表达式语句', '1');
INSERT INTO `tk_choice` VALUES ('42', 'C语言允许函数值类型缺省定义，此时该函数值隐含的类型是____________。', 'float型', 'int型', 'long型', 'double型', 'B', '题目有些难', '3', '表达式语句', '5');
INSERT INTO `tk_choice` VALUES ('43', 'C语言规定，函数返回值的类型是由______________.', ' return语句中的表达式类型所决定', '调用该函数时的主调函数类型所决定', '调用该函数时系统临时决定', '在定义该函数时所指定的函数类型决定', 'D', '难度上升', '3', '表达式语句', '5');
INSERT INTO `tk_choice` VALUES ('44', '在C语言程序中，以下描述正确的是___________。', '函数的定义可以嵌套，但函数的调用不可以嵌套', '函数的定义不可以嵌套，但函数的调用可以嵌套', '函数的定义和函数的调用均不可以嵌套', '函数的定义和函数的调用均可以嵌套', 'B', '难度上升', '3', '表达式语句', '4');
INSERT INTO `tk_choice` VALUES ('45', '#include<stdio_h>\r\nvoid sub(int s[]，int y)\r\n{ static int t=3；\r\ny=s[t]；t--；\r\n}\r\nmain()\r\n{ int a[]={1,2，3，4}，i，x=0；\r\nfor(i=0；i<4；i++){\r\nsub(a,x)；printf(＂％d＂，x)；}\r\nprintf(＂＼n＂)；\r\n}', '1234', '4321', '0000', '4444', 'C', '基础题', '3', '表达式语句', '1');
INSERT INTO `tk_choice` VALUES ('46', '以下程序的运行结果是：__________。main()\r\n{ int w=5；fun(w)；printf(＂＼n＂)；}\r\nfun(int k)\r\n{ if(k>O) fun(k-1)；\r\nprintf(＂ %d＂，k)；\r\n}', '5 4 3 2 1', '0 1 2 3 4 5', '1 2 3 4 5', '5 4 3 2 1 0', 'B', '难度上升', '2', '数据类型', '3');
INSERT INTO `tk_choice` VALUES ('47', '以下所列的各函数首部中，正确的是_______。', 'void play(vat a：Integer,var b：Integer)', 'void play(int a,b)', 'void play(int a,int b', 'Sub play(a as integer,b as integer)', 'C', '题目有些难', '2', '数据类型', '2');
INSERT INTO `tk_choice` VALUES ('48', '当调用函数时，实参是一个数组名，则向函数传送的是_______。', '数组的长度 ', '数组的首地址', '数组每一个元素的地址', '数组每个元素中的值', 'B', '难度上升', '2', '数据类型', '4');
INSERT INTO `tk_choice` VALUES ('49', '在调用函数时，如果实参是简单变量，它与对应形参之间的数据传递方式是_______。', '地址传递', '单向值传递', '由实参传给形，再由形参传回实参 	', '传递方式由用户指定', 'B', '题目有些难', '3', '数据类型', '5');
INSERT INTO `tk_choice` VALUES ('50', '以下函数值的类型是_______。fun(float x)\r\n{ float y；\r\ny=3*x-4；\r\nreturn y；\r\n}', 'int', '不确定', 'void', 'float', 'A', '难度上升', '3', '变量', '2');
INSERT INTO `tk_choice` VALUES ('51', '以下选项中不是常量的是__________。', '15', '0xff', '\'\\t\'', 'x', 'D', '题目有些难', '3', '数据类型', '3');
INSERT INTO `tk_choice` VALUES ('52', '以下各组标识符中都为合法标识符的一组是____________。', 'int		xy		    hello!		    bye', ' Abc		No		    _china		    Char', 'hh		22	    	H_2			    2_H	', 's-t		sit		    s_t			    s*t', 'B', '难度上升', '2', '变量', '3');
INSERT INTO `tk_choice` VALUES ('53', '能正确表示逻辑关系：“a≥10或a≤0”的C语言表达式是___________。', ' a>=10 or a<=0', ' a>=0|a<=10', ' a>=10 &&a<=0', ' a>=10‖a<=0', 'D', '基础题', '2', '变量', '3');
INSERT INTO `tk_choice` VALUES ('54', '以下初始化操作正确的是_________。', ' int a=b=5;', 'char c=“a”;', ' float b[]={1.1};', 'int *p=5;', 'C', '难度上升', '2', '数据类型', '4');
INSERT INTO `tk_choice` VALUES ('55', '设a=0,b=2,c=3,则表达式a+=b*3/c计算的结果是__________。', '6', '4', '2', '0', 'C', '题目有些难', '2', '变量', '1');
INSERT INTO `tk_choice` VALUES ('56', '以下数组定义不正确的是____________。', ' int a[2][3]; ', 'int b[][3]={1,2,3,4};', ' int c[10][10]={0};', 'int d[3][]={{1,2},{1,2,3},{1,2,4,5}};', 'D', '难度上升', '2', '数据类型', '4');
INSERT INTO `tk_choice` VALUES ('57', '设有如下程序段，若要求输出c1=M,c2=N ,则正确的输入是__________。char c1,c2;\r\nscanf(“%c%c”,&c1,&c2);\r\nprintf(“c1=%c,c2=%c\\n”,c1,c2);', 'MN', 'M<回车>N', '. M<空格>N', 'M<Tab>N', 'B', '难度上升', '2', '变量', '2');
INSERT INTO `tk_choice` VALUES ('58', '设x 和y均为 int 型变量，则执行下面的循环后，x的值为_____________。for (y=1,x=1;y<=20;y++)  \r\n{  if (y>5 ) break; \r\n   x+=3; \r\n}', '1', '6', '16', ' 不能确定', 'C', '难度上升', '2', '数据类型', '2');
INSERT INTO `tk_choice` VALUES ('59', ' 有如下程序，该程序的执行结果是____________。main() \r\n{  int x=3; \r\ndo { printf(“%d”,x--);}while(!x); \r\n} ', '陷入死循环', '3', '32', '321', 'B', '基础题', '2', '常用运算符及表达式', '3');
INSERT INTO `tk_choice` VALUES ('60', '以下对 C语言函数调用时实参与形参的值传递有关描述中，正确的是__________。', '值的传递与对应位置有关，与变量名无关', '值的传递与对应位置无关，与变量名有关', '值的传递与对应位置有关，也与变量名有关', '无法传递', 'A', '难度上升', '2', '数据类型', '2');
INSERT INTO `tk_choice` VALUES ('61', '以下说法中正确的是___________。', 'C语言程序总是从第一个函数开始执行', 'C语言程序中，要调用的函数必须在main()函数中定义', 'C语言程序总是从main( )函数开始执行', 'C语言程序中的main( )函数必须放在程序的开始部分', 'C', '题目有些难', '2', '常用运算符及表达式', '2');
INSERT INTO `tk_choice` VALUES ('62', '下列为字符常量的是______________。', '“a”', '‘ab’ ', '‘\\n’', '‘\\084’', 'D', '难度上升', '2', '数据类型', '1');
INSERT INTO `tk_choice` VALUES ('63', '在C语言中运算对象必须是整型的运算符是____________。', '%', '/', '==', '<=', 'A', '题目有些难', '2', '数据类型', '2');
INSERT INTO `tk_choice` VALUES ('64', '设a=1,b=2,c=3,则表达式a+b>c&&b==c计算的结果是__________。', '3', '2', '1', '0', 'D', '难度上升', '5', '程序设计的艺术', '5');
INSERT INTO `tk_choice` VALUES ('65', '设int类型的数据长度为2字节，则int类型数据的取值范围是________________。', ' 0～255', '-32768～32767', '-256～255', '0～65535', 'B', '基础题', '5', '程序设计的艺术', '4');
INSERT INTO `tk_choice` VALUES ('66', '能够判断字符变量c是大写字母的表达式是____________。', ' c>=’A’&&c<=’Z \'', 'c>=’A’||c<=’Z’', '’A’<=c<=’Z’', '’A’>=c>=’Z’', 'A', '难度上升', '5', '程序设计的艺术', '2');
INSERT INTO `tk_choice` VALUES ('67', '下面程序的输出结果是_______。main（）\r\n{ int i=10；\r\n switch（i）\r\n{\r\ncase 9：i+=1；\r\n case 10：i+=1；\r\n case 11：i+=1；\r\n case 12：i+=1；\r\n } \r\nprintf（“i=%d\\n”，i）；\r\n }', '10', '11', '12', '13', 'D', '难度上升', '5', '程序设计的艺术', '1');
INSERT INTO `tk_choice` VALUES ('68', '语句int i=3;k=(i++)+ (i++)+ (++i);则执行过后k,i的值是___________。', '12,6', '12,5', '18,6', '15,5', 'A', '难度上升', '5', '程序设计的艺术', '3');
INSERT INTO `tk_choice` VALUES ('69', 'C 语言中，有关函数的说法，以下正确的是___________。', '函数可嵌套定义，也可嵌套调用 ', '函数可嵌套定义，但不可嵌套调用', '函数不可嵌套定义，但可嵌套调用', '函数不可嵌套定义，也不可嵌套调用', 'C', '题目有些难', '5', '程序设计的艺术', '2');
INSERT INTO `tk_choice` VALUES ('70', '以下不正确的定义语句是__________。', 'double x[5]={2.0,4.0,6.0,8.0,10.0};', ' int y[5]={0,1,3,5,7};', 'char c1[]={‘1’,‘2’,‘3’,‘4’,‘5’};', ' char c2[3]={‘\\x10’, ‘\\xa’, ‘\\x8’ ,‘\\x8’};', 'D', '难度上升', '2', '常用运算符及表达式', '4');
INSERT INTO `tk_choice` VALUES ('71', '下列说法中错误的是___________。', ' 程序可以从任何非主函数开始执行', '主函数可以调用任何非主函数的其他函数', '任何非主函数可以调用其他任何非主函数 ', '函数可以分为两个部分：函数说明部分和函数体', 'A', '基础题', '5', '程序设计的艺术', '2');
INSERT INTO `tk_choice` VALUES ('72', '标识符和关键字间，要用__________隔开。', '回车符', '冒号', '空格', '分好', 'C', '难度上升', '5', '程序设计的艺术', '1');
INSERT INTO `tk_choice` VALUES ('73', '下列运算符中优先级最高的是___________。', '<', '+', '&&', '!=', 'B', '难度上升', '5', '程序设计的艺术', '1');
INSERT INTO `tk_choice` VALUES ('74', '若int x=2,y=3,z=4 则表达式x<z?y:z的结果是______________。', '3', '2', '1', '0', 'A', '难度上升', '5', '程序设计的艺术', '3');
INSERT INTO `tk_choice` VALUES ('75', '语句printf(\"%c,%d\",\'c\', \'c\')；的输出结果是__________。', ' c,c', 'c,99', ' 99,c', '99,99', 'B', '题目有些难', '2', '常用运算符及表达式', '5');
INSERT INTO `tk_choice` VALUES ('76', '用数组名作为函数的实参时，传递给形参的是__________。', '数组的首地址', '数组的第一个元素', '数组中的全部元素', '数组的元素个数', 'A', '难度上升', '2', '常用运算符及表达式', '2');
INSERT INTO `tk_choice` VALUES ('77', '下列各语句序列中，能够且仅输出整型变量a、b 中最小值的是__________。', ' if(a<b) printf(\"%d\\n\",a); printf(\"%d\\n\",b);', ' if(a<b) printf(\"%d\\n\",a); else printf(\"%d\\n\",b);', 'if(a>b) printf(\"%d\\n\",a); printf(\"%d\\n\",b);', ' if(a>b) printf(\"%d\\n\",a); else printf(\"%d\\n\",b);', 'B', '题目有些难', '2', '常用运算符及表达式', '3');
INSERT INTO `tk_choice` VALUES ('78', '执行完循环 for(i=1;i<10;i++){}后，i 的值为___________。', '9', '10', '11', '12', 'B', '基础题', '5', '函数的定义与使用', '4');
INSERT INTO `tk_choice` VALUES ('79', '复合语句中定义的变量的作用范围是________。', '整个源文件', '整个函数', '整个程序', '所定义的复合语句', 'D', '难度上升', '5', '函数的定义与使用', '1');
INSERT INTO `tk_choice` VALUES ('80', '在函数调用时，以下说法正确的是____________。', '函数调用后必须带回返回值', '实际参数和形式参数可以同名 ', '函数间的数据传递不可以使用全局变量', '主调函数和被调函数总是在同一个文件里', 'B', '难度上升', '5', '函数的定义与使用', '2');
INSERT INTO `tk_choice` VALUES ('81', '若m为float型变量,则执行以下语句后的输出为__________。m=1234.123;\r\n    		printf(\"%-8.3f\\n\",m);\r\n    		printf(\"%10.3f\\n\",m);', '1234.123<回车>1234.123', '     1234.123<回车>1234.123', '1234.123<回车>     1234.123', '-1234.123<回车>001234.123', 'C', '题目有些难', '5', '函数的定义与使用', '2');
INSERT INTO `tk_choice` VALUES ('82', '若w,x,z均为int型变量,则执行以下语句后的输出为__________。w=3;z=7;x=10;\r\n    		printf(\"%d\\n\",x>10?x+100:x-10);\r\n    		printf(\"%d\\n\",w++||z++);\r\n    		printf(\"%d\\n\",!w>z);\r\n    		printf(\"%d\\n\",w&&z);', '0<回车>1<回车>1<回车>1<回车>1', '1<回车>1<回车>1<回车>1<回车>1', '0<回车>1<回车>0<回车>1', '0<回车>1<回车>0<回车>0', 'C', '难度上升', '5', '函数的定义与使用', '1');
INSERT INTO `tk_choice` VALUES ('83', '这是实验试题', '实验一', '实验二', '实验三', '实验四', 'C', '非常难', '5', '函数的定义与使用', '4');
INSERT INTO `tk_choice` VALUES ('84', '执行以下程序段后，输出结果和a的值是____。int a=10;printf=(\"%d\",a++);', '11和10', '11和11', '10和11', '10和10', 'C', '难度上升', '5', '函数的定义与使用', '2');
INSERT INTO `tk_choice` VALUES ('85', '相同结构体类型的变量之间，可以____。', '比较大小', '地址相同', '赋值', '相加', 'C', '难度上升', '5', '函数的定义与使用', '3');
INSERT INTO `tk_choice` VALUES ('86', 'int a[10];合法的数组元素的最小下标值为____。', '1', '0', '10', '9', 'B', '基础题', '5', '函数的定义与使用', '3');
INSERT INTO `tk_choice` VALUES ('87', '能正确表示逻辑关系:\"a>=10或a<=0\"的C语言表达式是', 'a>=10||a<=0', 'a>=0|a<=10', 'a>=10 or a<=0', 'a>=10&&a<=0', 'A', '题目有些难', '2', '常用运算符及表达式', '2');
INSERT INTO `tk_choice` VALUES ('88', '若有char c=\'\\72\';则变量C', '说明不合法，C的值不确定', '包含3个字符', '包含1个字符', '包含2个字符', 'C', '难度上升', '2', '常用运算符及表达式', '5');
INSERT INTO `tk_choice` VALUES ('89', '下列定义变量的语句错误的是_____。', 'int_int', 'double int__', 'char for', 'float US$', 'D', '常量，变量和标识符', '2', '常用运算符及表达式', '5');
INSERT INTO `tk_choice` VALUES ('90', '以下不合法的用户标识符是_____。', 'j2_KEY', 'Double', '4d', '_8_', 'C', '常量，变量和标识符', '2', '常用运算符及表达式', '5');
INSERT INTO `tk_choice` VALUES ('91', '以下4组用户定义标识符中，全部合法的一组是___。', '_main enclud sin', 'if -max turbo', 'txt REAL 3COM', 'int k_2_001???', 'A', '常量，变量和标识符', '2', '常用运算符及表达式', '5');
INSERT INTO `tk_choice` VALUES ('92', 'C语言中最简单的数据类型包括______。', '整型  实型 逻辑型', '整型 实型 字符型', '整型 字符型 逻辑型', '整型 字符型 逻辑型 实型', 'B', '常量，变量和标识符', '2', '常用运算符及表达式', '5');
INSERT INTO `tk_choice` VALUES ('93', '下列选项中，合法的C语言关键字是', 'VAR', 'cher', 'integer', 'default', 'D', '常量，变量和标识符', '2', '常用运算符及表达式', '5');
INSERT INTO `tk_choice` VALUES ('94', '下列叙述中正确的是______。', 'C语言中既有逻辑类型也有集合类型', 'C语言中没有逻辑类型，但有集合类型', 'C语言中有逻辑类型，但没有集合类型', 'C语言中既没有逻辑类型也没有集合类型', 'D', '常量，变量和标识符', '2', '常用运算符及表达式', '5');
INSERT INTO `tk_choice` VALUES ('95', '当C的值不为0时，在下列选项中能正确将C的值赋给变量a,b的是_______。', 'c=b=a', '(a=c)||(b=c)', '(a=c)&&(b=c)', 'a=c=b', 'C', '赋值表达式', '2', '常用运算符及表达式', '5');
INSERT INTO `tk_choice` VALUES ('96', '以下选中非法的表达式是______。', 'x+1=x+1', '0<=x<100', 'i=j==0', '(char 65+3)', 'A', '赋值表达式', '2', '常量', '5');
INSERT INTO `tk_choice` VALUES ('97', '若有以下定义和语句，且0≤i<10则对数组元素的错误引用是        。\r\n	int a[10]={1,2,3,4,5,6,7,8,9,10},*p,i;\r\np=a;', '*(a+i)', 'a[p-a]', 'p+i', '*(&a[i])', 'C', '指针', '7', '函数指针', '5');
INSERT INTO `tk_choice` VALUES ('98', '若有定义：int a[3][4]; ，        不能表示数组元素a[1][1]。', '*(a[1]+1)', '*(&a[1][1])', '(*(a+1)[1])', '*(a+5)', 'D', '指针', '7', '函数指针', '5');
INSERT INTO `tk_choice` VALUES ('99', '对如下定义，以下说法中正确的是____。', 'char *a[2]={ \"abcd\",\"ABCD\"};', '数组a的元素值分别为\"abcd\"和\"ABCD\"', 'a是指针变量，它指向含有两个数组元素的字符型数组', '数组a的两个元素分别存放的是含有4个字符的一维数组的首地址', 'D', '指针', '7', '函数指针', '5');
INSERT INTO `tk_choice` VALUES ('100', '数组a的两个元素中各自存放了字符’a’、’A’的地址，char *s=\"\\t\\\\Name\\\\Address\\n\";指针s所指字符串的长度为______ 。', '说明不合法 ', '19', '18', '15', 'D', '指针', '7', '函数指针', '5');
INSERT INTO `tk_choice` VALUES ('101', '分析下面函数，以下说法正确的是        。\r\n		swap(int *p1,int *p2)\r\n		{ int *p;\r\n		  *p=*p1; *p1=*p2; *p2=*p;\r\n		}\r\n', '交换*p1和*p2的值', '正确，但无法改变*p1和*p2的值', '交换*p1和*p2的地址 ', '可能造成系统故障，因为使用了空指针', 'D', '指针', '7', '函数指针', '5');
INSERT INTO `tk_choice` VALUES ('102', '设有说明int (*ptr)[M]; 其中ptr是          ', 'M个指向整型变量的指针', '指向M个整型变量的函数指针', '一个指向具有M个整型元素的一维数组的指针', '具有M个指针元素的一维指针数组，每个元素都只能指向整型量', 'C', '指针', '7', '函数指针', '5');
INSERT INTO `tk_choice` VALUES ('103', '在说明语句：int *f(); 中，标识符代表的是：         ', '一个用于指向整型数据的指针变量', '一个用于指向一维数组的指针', '一个用于指向函数的指针变量', '一个返回值为指针型的函数名', 'D', '指针', '7', '函数指针', '5');
INSERT INTO `tk_choice` VALUES ('104', '若int x ，*pb； ，则正确的赋值表达式是', 'pb=&x', 'pb=x', '*pb=&x；', '*pb=*x', 'A', '指针', '7', '函数指针', '5');
INSERT INTO `tk_choice` VALUES ('105', '有如下程序段\r\n		int *p ，a=10 ，b=1 ；\r\n		p=&a ； a=*p+b ；\r\n	执行该程序段后，a 的值为\r\n', '12', '11', '10', '编译出错', 'B', '指针', '7', '函数指针', '5');
INSERT INTO `tk_choice` VALUES ('106', '若有以下定义和语句：\r\n		double r=99 ， *p=&r ；\r\n		*p=r ；\r\n	则以下正确的叙述是\r\n', '以下两处的*p 含义相同，都说明给指针变量p 赋值', '在\"double r=99,*p=&r；\"中，把r 的地址赋值给了p 所指的存储单元', '语句\"*p=r；\"把变量r 的值赋给指针变量p', '语句\"*p=r；\"取变量r 的值放回r 中', 'D', '指针', '7', '函数指针', '5');
INSERT INTO `tk_choice` VALUES ('107', '要求函数的功能是交换x 和y 中的值，且通过正确调用返回交换结果.能正确执行\r\n	此功能的函数是\r\n', 'funa （int *x，int *y） { int *p； *p=*x； *x=*y；*y=*p； }', 'fund （int x，int y） { int t； t=x；x=y；y=t； }', 'func （int *x，int *y） { *x=*y；*y=*x；}', 'fund （int *x，int *y） { *x=*x+*y；*y=*x-*y；*x=*x-*y； }', 'D', '指针', '7', '函数指针', '5');
INSERT INTO `tk_choice` VALUES ('108', '若有说明：long *p ，a；则不能通过scanf 语句正确给输入项读入数据的程序段\r\n	是\r\n', '*p=&a； scanf（\"%ld\"，p）;', ' p=（long *）malloc（8）; scanf（\"%ld\"，p）;', 'scanf（\"%ld\"，p=&a）;', 'scanf（\"%ld\"，&a）;', 'A', '指针', '7', '函数指针', '5');
INSERT INTO `tk_choice` VALUES ('109', '若已定义：int a[9] ，*p=a；并在以后的语句中未改变p 的值，不能表示a[1] 地\r\n	址的表达式是\r\n', 'p+1', 'a+1', 'a++', '++p', 'C', '指针', '7', '函数指针', '5');
INSERT INTO `tk_choice` VALUES ('110', '设P1 和P2 是指向同一个int 型一维数组的指针变量，k 为int 型变量，则不能正\r\n	确执行的语句是\r\n', 'k=*P1 * （*P2）;', 'k=*P1+*P2;', 'p2=k;', 'P1=P2;', 'B', '指针', '7', '函数指针', '5');
INSERT INTO `tk_choice` VALUES ('111', '若有以下的定义：\r\n		int a[ ]={1 ，2 ，3 ，4 ，5 ，6 ，7 ，8 ，9 ，10} ， *p=a ；\r\n	则值为3 的表式是\r\n', 'p+=2 ， *（p++）', 'p+=2 ，*++p', 'p+=3 ， *p++', 'p+=2 ，++*p', 'A', '指针', '7', '函数指针', '5');
INSERT INTO `tk_choice` VALUES ('112', '若有以下定义和语句：\r\n		int a[10]={1 ，2 ，3 ，4 ，5 ，6 ，7 ，8 ，9 ，10} ，*p=a ；\r\n	则不能表示a 数组元素的表达式是         \r\n', '*p', 'a[10]', '*a', 'a[p-a]', 'B', '指针', '7', '函数指针', '5');
INSERT INTO `tk_choice` VALUES ('113', '有如下说明\r\n		int a[10]={1，2，3，4，5，6，7，8，9，10}，*p=a；\r\n	则数值为9 的表达式是         \r\n', '*p+9', '*（p+8）', '*p+=9', 'p+8', 'B', '指针', '7', '函数指针', '5');
INSERT INTO `tk_choice` VALUES ('114', '下面各语句行中，不能正确进行字符串赋值操作的语句是         ', 'char ST[5]={\"ABCDE\"}；', 'char S[5]={\'A\'，\'B\'，\'C\'，\'D\'，\'E\'}；', 'char *S； S=\"ABCDE\"；', 'char *S； scanf（\"%S\"，S）；', 'C', '指针', '7', '函数指针', '5');

-- ----------------------------
-- Table structure for `tk_pgdesign`
-- ----------------------------
DROP TABLE IF EXISTS `tk_pgdesign`;
CREATE TABLE `tk_pgdesign` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '答题编号',
  `content` longtext NOT NULL COMMENT '试题内容',
  `answer` longtext COMMENT '考试试题答案',
  `analysis` longtext COMMENT '试卷编号',
  `chapter` varchar(255) DEFAULT NULL COMMENT '章节编号',
  `chaptertwo` varchar(255) DEFAULT NULL,
  `difficulty` varchar(255) DEFAULT NULL COMMENT '试题难度',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of tk_pgdesign
-- ----------------------------
INSERT INTO `tk_pgdesign` VALUES ('1', '输入一个华氏温度，要求输出摄氏温度。公式为C=5/9(F-32),结果取两位小数。', '#include\"stdio.h\"\r\nmain( )\r\n{ float  c,f;\r\nscanf(“%f”,&f);\r\nc=5.0/9*(f-32);\r\nprintf(“c=%.2f\\n”,c);\r\n}\r\n', '根据公式合理使用定义，很简单', '3', '基本的输入/输出操作', '4');
INSERT INTO `tk_pgdesign` VALUES ('2', '编程实现根据自变量x的值，求得y值。\r\n　     1      x<2\r\n  y= 　0     2≤x<7\r\n       -1     x≥7\r\n', ' #include\"stdio.h\"\r\nmain()\r\n{float  x,y;\r\nscanf(“%f”,&x);\r\nif(x<2) y=1;\r\nelse  if(x<7) y=0;\r\nelse  y=-1;\r\nprintf(“x=%f,y=%f\\n”); }\r\n', '利用公式嵌套', '4', '选择结构', '3');
INSERT INTO `tk_pgdesign` VALUES ('3', '输入两个实数，按由大到小的顺序输出这两个数。', '#include “stdio.h”\r\nmain()\r\n{  int a,b,t;\r\n   scanf(“%d,%d”,&a,&b);\r\nif(a<b)\r\n{t=a;a=b;b=t;}\r\nprintf(“%d,%d\\n”,a,b);\r\n}\r\n', 'A,B是最简单的题', '3', '基本的输入/输出操作', '2');
INSERT INTO `tk_pgdesign` VALUES ('4', '将数组a中n个元素按相反顺序存放。', 'void inv(inta[],intn)		 \r\n{	\r\n	intt,i,j,m=(n-1)/2;\r\n	for(i=0;i<=m;i++)\r\n	{\r\n		j=n-1-i;\r\n		t=a[i];\r\n		a[i]=a[j];\r\n		a[j]=t;\r\n	}\r\n}\r\nmain()\r\n{	\r\n      static int i,a[10]={3,7,9,1,0,6,7,5,4,2};\r\n      printf(\"theoriginalarray:\\n\");\r\n      for(i=0;i<10;i++)\r\n        printf(\"%d\",a[i]);\r\n        printf(\"\\n\");\r\n        inv(a,10);\r\n        printf(\"thearrayhasbeeninverted:\\n\");\r\n        for(i=0;i<10;i++)\r\n        printf(\"%d\",a[i]);\r\n        printf(\"\\n\");\r\n}\r\n', '利用数组下标求倒着储存', '6', '向函数传递一维数组', '3');
INSERT INTO `tk_pgdesign` VALUES ('5', '输入10个正整数，用“起泡法”对它们排序（由小到大）。', 'main()\r\n{\r\n        int a[11];\r\n        int i,j,t;\r\n        printf(\"input 10 numbers:\\n\");\r\n        for(i=1;i<11;i++)\r\n          scanf(\"%d\",&a[i]);\r\n        printf(\"\\n\");\r\n        for(j=1;j<=9;j++)\r\n          for(i=1;i<=10-j; i++)\r\n            if (a[i] > a[i+1])\r\n             { t = a[i]; a[i] = a[i+1]; a[i+1] = t; }\r\n        printf(\"the sorted numbers:\\n\");\r\n        for(i=1;i<11;i++)\r\n          printf(\"%d\",a[i]);\r\n}\r\n', 'for循环倒着输出', '6', '向函数传递一维数组', '4');
INSERT INTO `tk_pgdesign` VALUES ('6', '编程求3~100之间的所有素数，按每行4列输出。', 'main()\r\n{\r\n int i,m,k,j=0;\r\n for(m=3;m<=100;m++)\r\n  {k=0;\r\n   for(i=2;i<=m-1;i++)\r\n    if(m%i==0)\r\n     {k=1;break;}\r\n    if(k==0)\r\n     {\r\n      printf(\"%3d\",m);\r\n      j=j+1;\r\n      if(j%4==0)\r\n      printf(\"\\n\");\r\n      }\r\n   }\r\n}\r\n', '根据条件作出判断使用if语句', '4', '选择结构', '5');
INSERT INTO `tk_pgdesign` VALUES ('7', '用近似公式e=1+1/1!+1/2!+……1/n!求自然对数的底e的值，取n为10（n愈大愈接近e的真值），用一层循环实现程序。', ' #include \"stdio.h\"\r\nmain()\r\n{int n,i;\r\nfloat e=1,p=1;\r\nclrscr();\r\nscanf(\"%d\",&n);\r\nfor(i=1;i<=n;i++)\r\n{p=p*i;\r\ne=e+1/p;}\r\nprintf(\"%f\",e);\r\n}\r\n', '公式判断', '3', '基本的输入/输出操作', '4');
INSERT INTO `tk_pgdesign` VALUES ('8', '求1~100的和', '#include \"stdio.h\"\r\nmain()\r\n{int i,s=0;\r\nclrscr();\r\nfor(i=1;i<=100;i++)\r\ns+=i;\r\nprintf(\"s=%d\",s);\r\n}\r\n', '用循环求累计和', '4', '循环结构', '1');
INSERT INTO `tk_pgdesign` VALUES ('9', ' 用函数计算球的体积，公式v=4/3 ，要求计算多个球，半径分别为R=1,3,5,7…99', ' float fac(int k)\r\n{float t=1;int i;\r\n for(i=2;i<=k;i++)\r\n  t=t*i;\r\n   return t;\r\n}\r\nmain()\r\n{float c;\r\nint m,n;\r\nscanf(“%d%d”,&m,&n);\r\nc=fac(n)/(fac(m)*fac(n-m));\r\nprintf(“%.2f\\n”,c);\r\n}\r\n', '实参形参', '5', '函数的定义与使用', '2');
INSERT INTO `tk_pgdesign` VALUES ('10', '猜数游戏：程序随机生成的一个数，然后用户从键盘输入一个数与生成的随机数进行比较，每次比较有大小提示，直到猜对为止。', '#define PI 3.14\r\nfloat volume (int r)\r\n{  float vo;\r\n   vo=4/3*PI*r*r*r;\r\n   return vo;\r\n}\r\nmain()\r\n{  int R;\r\nfloat v;\r\nfor(R=1;R<=99;R=R+2)\r\n{\r\n      v=volume(R);\r\nprintf(\"v=%.2f\\n\",v);\r\n}\r\n}\r\n', 'random的使用及判断if语句的使用', '4', '顺序结构', '5');
INSERT INTO `tk_pgdesign` VALUES ('11', '有30个人，其中有男人、女人和小孩，在一家饭馆里吃饭共花了50先令，每个男人各花3先令，每个女人各花2先令，每个小孩各花1先令，问男人、女人和小孩各有几人？', 'main()\r\n{ \r\n   int x,y,z;\r\n   printf(\"Man \\t Women \\t Childern\\n\");\r\n   for (x=0; x<=16; x++)\r\n      for (y=0; y<=25; y++)\r\n      {\r\n          z = 30 – x - y;\r\n          if (3*x+2*y+z == 50)  \r\n              printf(\"%3d \\t %5d \\t %8d\\n\",x,y,z);\r\n      }\r\n}', 'if语句的使用', '4', '选择结构', '2');
INSERT INTO `tk_pgdesign` VALUES ('12', '编程求一维数组元素中的最大值', 'main()\r\n{\r\n  int a[10],i,max=0;\r\n  for(i=0;i<10;i++)\r\n  {\r\nscanf(“%d”,&a[i]);\r\nif(a[i]>max) max=a[i];\r\n  }\r\n  printf(“Max is %d\\n”,max);\r\n}', '输入到一维数组，用循环比较并输出最大值', '6', '向函数传递一维数组', '1');
INSERT INTO `tk_pgdesign` VALUES ('13', '编程实现输出下面的图形。\r\n		*		\r\n	*	*		\r\n*	*	*		\r\n		*	*	*\r\n		*	*	\r\n		*		', 'main()\r\n{int i,j,k;\r\nclrscr();\r\nfor(i=0;i<3;i++)\r\n  {  for(j=0;j<2-i;j++)\r\n  printf(\" \");\r\n  for(k=0;k<i+1;k++)\r\n  printf(\"*\");\r\n  printf(\"\\n\");  }\r\nfor(i=0;i<3;i++)\r\n  {  printf(\"  \");\r\n  for(k=0;k<3-i;k++)\r\n  printf(\"*\");\r\n  printf(\"\\n\");\r\n  }}', '基本输入输出', '3', '基本的输入/输出操作', '4');
INSERT INTO `tk_pgdesign` VALUES ('14', '在二维数组a中选出各行最大的元素组成一个一维数组b。\r\n', 'main() \r\n{\r\n    	int a[][4]={3,16,87,65,4,32,11,108,10,25,12,27};\r\n    	int b[3],i,j,l;\r\n    	for(i=0;i<=2;i++)\r\n    	{\r\n 		l=a[i][0];\r\n		for(j=1;j<=3;j++)\r\n			if(a[i][j]>l) l=a[i][j];\r\n		b[i]=l;\r\n 	}\r\n    	printf(\"\\narray a:\\n\");\r\nfor(i=0;i<=2;i++)\r\n 	{\r\n 		for(j=0;j<=3;j++)\r\n			printf(\"%5d\",a[i][j]);\r\n		printf(\"\\n\");\r\n 	}\r\n    	printf(\"\\narray b:\\n\");\r\n    	for(i=0;i<=2;i++)\r\n     	printf(\"%5d\",b[i]);\r\n    	printf(\"\\n\");\r\n}', '二维数组嵌套循环', '6', '向函数传递二维数组', '2');
INSERT INTO `tk_pgdesign` VALUES ('15', '“回文串”是一个正读和反读都一样的字符串，比如“level”或者“noon”等等就是回文串。请写一个程序判断读入的字符串是否是“回文”，如果一个字符串是回文串，则输出\"yes\",否则输出\"no\". ', '#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n	int n,i,l,flag;\r\n	char a[100];\r\n	scanf(\"%d\\n\",&n);\r\n		while(n--)\r\n		{\r\n			flag=1;\r\n			gets(a);\r\n			l=strlen(a);\r\n			for(i=0;i<l/2;i++)\r\n			{	\r\n			    if(a[i]!=a[l-1-i])\r\n			flag=0;\r\n			}\r\n			if(flag)\r\n				printf(\"yes\\n\");\r\n			else\r\n				printf(\"no\\n\");\r\n		}\r\n}', '输入到一维数组并比较始末', '6', '向函数传递一维数组', '4');
INSERT INTO `tk_pgdesign` VALUES ('16', '开发一个斐波那契数列f（0）= 0 \r\nf（1）= 1 \r\nf（n）= f（n-1）+ f（n-2） \r\n\r\n您的程序应该能够处理n中的n值范围0到50。', '# include<stdio.h>\r\nint main()\r\n{\r\n    long long n,f[66]={0,1};\r\n    int i;\r\n    while (scanf(\"%lld\",&n)&&n!=-1) {\r\n        for (i=2; i<=n; i++) {\r\n            f[i]=f[i-1]+f[i-2];\r\n                    }\r\n        printf(\"%lld\\n\",f[n]);\r\n\r\n    }\r\n}', '递归的应用', '5', '递归', '2');
INSERT INTO `tk_pgdesign` VALUES ('17', '输入一个十进制数N，将它转换成R进制数输出。输入数据包含多个测试实例，每个测试实例包含两个整数N(32位整数)和R（2<=R<=16, R<>10）。为每个测试实例输出转换后的数，每个输出占一行。如果R大于10，则对应的数字规则参考16进制（比如，10用A表示，等等）。', '#include<stdio.h>\r\nint main(){\r\n	int i,n,r,x;\r\n	char score[1000],num[16]={\'0\',\'1\',\'2\',\'3\',\'4\',\'5\',\'6\',\'7\',\'8\',\'9\',\'A\',\'B\',\'C\',\'D\',\'E\',\'F\'};\r\n	while(~scanf(\"%d%d\",&n,&r))\r\n        {\r\n		if(n<0)\r\n		{\r\n		    x=-1;\r\n		    }\r\n		else\r\n        {\r\n            x=1;\r\n            }\r\n		n*=x;\r\n		for(i=0;i>=0;i++)\r\n            {\r\n			score[i]=num[n%r];\r\n			if(n/r==0)\r\n			{\r\n			    break;\r\n			    }\r\n			n/=r;\r\n		}\r\n		if(x<0)\r\n        {\r\n            score[++i]=\'-\';\r\n        }\r\n		for(;i>=0;i--)\r\n        {\r\n            printf(\"%c\",score[i]);\r\n        }\r\n		printf(\"\\n\");\r\n	}\r\n}', '进制的定义是除法', '6', '向函数传递一维数组', '2');
INSERT INTO `tk_pgdesign` VALUES ('18', '有这样一道智力题：“某商店规定：三个空汽水瓶可以换一瓶汽水。\r\n小张手上有十个空汽水瓶，她最多可以换多少瓶汽水喝？”答案是5瓶，\r\n方法如下：先用9个空瓶子换3瓶汽水，喝掉3瓶满的，喝完以后4个空瓶子，用3个再换一瓶，喝掉这瓶满的，这时候剩2个空瓶子。\r\n然后你让老板先借给你一瓶汽水，喝掉这瓶满的，喝完以后用3个空瓶子换一瓶满的还给老板。\r\n如果小张手上有n个空汽水瓶，最多可以换多少瓶汽水喝？', '#include<stdio.h>\r\nvoid main()\r\n{int n,m=0,sum=0,i=0;\r\nscanf(\"%d\",&n);\r\nwhile(n>=3)\r\n{m=n/3;\r\n n=n-2*m;\r\n sum=sum+m;\r\n}\r\nif(n=2)\r\n sum++;\r\nelse if(n<2)\r\n sum=sum+i;\r\n printf(\"%d\",sum);\r\n}', 'if判断语句', '4', '选择结构', '3');
INSERT INTO `tk_pgdesign` VALUES ('19', '在某食堂门前有n（n<200）个树坑，编号是从0~n-1，开始时是没有树的。每个月，园林工人都会在编号a~b(0<=a<=b<=n-1)之间栽树(包括a,b)，如果树坑原来有树，则不需要从新栽树。请计算4个月后，食堂门前总共有多少棵树。\r\n输入描述：\r\n第一个整数是n ，接下来有 8个整数，分别为每个月栽树的编号。\r\n输出描述描述：\r\n食堂门前树的总数。', '#include<stdio.h>\r\nvoid main()\r\n{\r\n    int n;   \r\n    int a1,b1,a2,b2,a3,b3,a4,b4;\r\n    int result=0;\r\n    int i;\r\n    scanf(\"%d\",&n);\r\n    scanf(\"%d%d\",&a1,&b1);\r\n    scanf(\"%d%d\",&a2,&b2);\r\n    scanf(\"%d%d\",&a3,&b3);\r\n    scanf(\"%d%d\",&a4,&b4);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        if(i>=a1&&i<=b1)\r\n            result++;\r\n        else if(i>=a2&&i<=b2)\r\n            result++;\r\n        else if(i>=a3&&i<=b3)\r\n            result++;\r\n        else if(i>=a4&&i<=b4)\r\n            result++;\r\n    }\r\n    printf(\"%d\",result);\r\n} ', 'if判断语句', '4', '选择结构', '2');
INSERT INTO `tk_pgdesign` VALUES ('20', '某组织欲破获一个外星人的密码，密码由一定长度的字串组成。此组织拥有一些破译此密码的长度不同的钥匙，若两个钥匙的长度之和恰好为此密码的长度，则此密码被成功破译。现在就请你编程找出能破译此密码的两个钥匙。\r\n输入描述：\r\n输入第一行为钥匙的个数N（1≤N≤5000）\r\n输入第二行为密码的长度\r\n以下N行为每个钥匙的长度\r\n输出描述描述：\r\n若无法找到破译此密码的钥匙，则输出仅1行0 。若找到两把破译的钥匙，则输出有两行，分别为两把钥匙的编号。若有多种破译方案，则只输出一种即可。', '#include<stdio.h>\r\nvoid main()\r\n{\r\n	int n,s[5000],l,i,j,sign=1,m=0;\r\n	scanf(\"%d\",&n);\r\n	scanf(\"%d\",&l);\r\n	for(i=0;i<n;i++)\r\n		scanf(\"%d\",&s[i]);\r\n	for(i=0;i<n;i++)\r\n	{\r\n		if(sign==0) break;\r\n		for(j=i+1;j<n;j++)\r\n			if(s[i]+s[j]==l)\r\n			{printf(\"%d\\n%d\",i+1,j+1);sign=0;break;}}\r\n    if(sign) printf(\"%d\",m);\r\n\r\n}', '输入到一维数组进行比较', '6', '向函数传递一维数组', '3');
INSERT INTO `tk_pgdesign` VALUES ('21', '小可可选修了基础生物基因学。教授告诉大家Ｓuper Samuel星球上Kitty猫的基因的长度都是２的正整数次幂 2k (k ≤ 8),全是由两种不同的基因单元组成的。这两种不同的基因单元分别记成 0 和 1，于是Kitty猫的基因可以写成一个 01 串表达式 S 。为了便于分析和降低数据存储量，教授发明了 ABC 编码规则。该编码规则是不断地按照\r\n                A                 (若S串全是0)\r\nT（S）=    　　 B                 (若S串全是1)\r\n　　　　　　　　CT(S1)T(S2)　   (否则把S串分成两个等长的子串S1和S2)\r\n对Kitty猫基因01串表达式S进行改写，直至最终被改写成只含有字符“A”、“B”、“C”的符号串。\r\n例如 T(01001011)\r\n     = CT(0100)T(1011)\r\n     = CCT(01)T(00)CT(10)T(11)\r\n     = CCCT(0)T(1)ACCT(1)T(0)B\r\n     = CCCABACCBAB\r\n请你编写程序帮助小可可求出Kitty猫基因的ABC编码以协助教授开展科研工作。\r\n输入描述：\r\n测试数据以一行的形式存放Kitty猫基因的01串表达式, 字符串长度不超过500\r\n输出描述描述：\r\n对应测试数据，以一行的形式输出这个Kitty猫基因的ABC编码。', '#include <stdio.h>\r\n#include <string.h>\r\nvoid f(char a[],int begin,int end);\r\nint main()\r\n{\r\n    char a[500];\r\n    int length;    \r\n    gets(a);\r\n    length=strlen(a);\r\n    f(a,0,length);\r\n    return 0;\r\n}\r\n\r\nvoid f(char a[],int begin,int end)\r\n{\r\n    int num_A=0,num_B=0;\r\n    int i;\r\n    for(i=begin;i<end;i++)\r\n    {\r\n        if(a[i]==\'0\')\r\n           num_A++;\r\n        else if(a[i]==\'1\')\r\n            num_B++;\r\n    }\r\n    if(num_A==end-begin)\r\n        printf(\"A\");\r\n    else if(num_B==end-begin)\r\n        printf(\"B\");\r\n    else\r\n    {\r\n        printf(\"C\");\r\n        f(a,begin,(end+begin)/2);\r\n        f(a,(end+begin)/2,end);\r\n    }\r\n} ', '一维数组的输入', '6', '向函数传递一维数组', '4');
INSERT INTO `tk_pgdesign` VALUES ('22', '题目描述：\r\n输入两个整数a,b(1≤a,b≤100000)，请编写程序求出他们的最大公约数。\r\n输入描述：\r\n输入两个整数a b，用空格隔开\r\n输出描述描述：\r\n输出对应a,b的最大公约数', '#include<stdio.h>\r\nvoid main()\r\n{long a,b,c,t;\r\nscanf(\"%ld %ld\",&a,&b);\r\nif(a<b)\r\n{\r\n	t=a;\r\n	a=b;\r\n	b=t;\r\n}\r\nwhile(b!=0)\r\n{\r\n	c=a%b;\r\n	a=b;\r\n	b=c;\r\n}\r\nprintf(\"%ld\",a);\r\n}', '循环结构', '4', '循环结构', '3');
INSERT INTO `tk_pgdesign` VALUES ('23', ' a+b这个程序大家都会做，但是如果a和b都比较大时该怎么办呢。其实我们可以把输入一个比较大的数用字符串表示，模拟人工加法方式。如123+23 ,一个字符串是123 另外一个字符串是23，从字符串的最后开始加,得到146. 结果最大是两个字符串最长的那个值加1。\r\n现在请你计算两个不超过30位的十进制的数的和。\r\n知识点：字符串输入，字符的0~9的加法运算。\r\n提示：字符0的ASCII是48,注意进位处理\r\n输入描述：\r\n包行四行，每一行包含不超过30个的由0~9的字符组成字符串。\r\n输出描述描述：\r\n第一行加第二行的和以及第三行加第四行的和。每一个和占一行', '#include <stdio.h>\r\n#include <string.h>\r\nchar *add_high_jd(char *a,char *b)\r\n{\r\n    char *s;\r\n    int lenmax,lenmin,i,key=0,m;\r\n    if(strlen(b)>strlen(a)) {s=a;a=b;b=s;}\r\n    lenmax=strlen(a);\r\n    lenmin=strlen(b);\r\n    for(i=1;i<=lenmin;i++)\r\n        {    \r\n            m=a[lenmax-i]+b[lenmin-i]-96+key;\r\n            if(m>=10) \r\n   {\r\n    a[lenmax-i]=m%10+48;\r\n    key=1;\r\n   }\r\n   else \r\n   {\r\n    a[lenmax-i]=m+48;\r\n    key=0;\r\n   }                \r\n        }\r\n    for(i=1;i<=lenmax-lenmin;i++)\r\n {\r\n         m=a[lenmax-lenmin-i]-48+key;\r\n         if(m>=10) \r\n   {\r\n    a[lenmax-lenmin-i]=m%10+48;\r\n    key=1;\r\n   }\r\n         else {\r\n    a[lenmax-lenmin-i]=m+48;\r\n    key=0;\r\n   }\r\n        }\r\n    if(key) \r\n {\r\n  for(i=lenmax;i>=1;i--)\r\n                a[i]=a[i-1];\r\n  a[0]=\'1\';\r\n  a[lenmax+1]=\'\\0\';\r\n }\r\nreturn a;\r\n}', '一维数组和循环语句的应用', '6', '向函数传递一维数组', '4');
INSERT INTO `tk_pgdesign` VALUES ('24', '有字符串a(长度<=100)，b(长度<=10)，计算b串在a串中出现的次数。\r\n解题思路：\r\n1、用gets语句从键盘输入两个字符串赋予a，b字符数组；\r\n2、建立两层嵌套循环，外循环至a串结束标志为止，内循环至b串结束标志为止；\r\n3、内循环中比对b串与a串的数据，满足条件时计数，否则break；\r\n4、所有循环结束后输出计数值。\r\n输入描述：\r\n输入为两个字符串，第一个字符串长度小于100，第二个字符串长度小于10；\r\n输出描述描述：\r\n输出为一个正整数；', '#include <stdio.h>\r\n#include <string.h>\r\n\r\nvoid main()\r\n{\r\n    char a[100],b[10];\r\n    int i,j,count,result;\r\n    gets(a);\r\n    gets(b);\r\n    result=0;\r\n    for(i=0;i<strlen(a);i++)\r\n    {\r\n        for(j=0,count=0;j<strlen(b);j++)\r\n        {\r\n            if(b[j]==a[i+j])\r\n                count++;\r\n            else\r\n                break;\r\n        }\r\n        if(count==strlen(b))\r\n            result++;\r\n    }\r\n    printf(\"%d\",result);\r\n}  \r\n\r\n}\r\nint main()\r\n{\r\n\r\n char a[40]={\'0\'},b[40]={\'0\'}, c[40]={\'0\'}, d[40]={\'0\'}, e[40]={\'0\'}, f[40]={\'0\'};\r\n while(gets(a)!=NULL&&gets(b)!=NULL&&gets(c)!=NULL&&gets(d)!=NULL)//??????×???0±í???á??\r\n {\r\n  strcpy(e,add_high_jd(a,b));\r\n     strcpy(f,add_high_jd(c,d));\r\n  puts(e);\r\n     puts(f);\r\n }\r\n return 0;\r\n}', '循环结构', '4', '循环结构', '3');
INSERT INTO `tk_pgdesign` VALUES ('25', '有n（n<=100）围成一圈，顺序排号（从1排到n）。\r\n从第一个人开始报数（从1报到m（m<=9))，凡报到m的人退出圈子，\r\n问最后留下的是原来第几号的那位？\r\n解题思路：\r\n1、定义一个长度为100数组a，初始化为0；\r\n2、接收键盘输入值n，m，数组a的前n-1个元素赋值为1~n；\r\n3、建立两层嵌套循环，外循环至退出人数为n-1为止，\r\n内循环中从0循环至n，将a数组中非0的数据逢m置零，同时记录退出人数；\r\n4、循环全部结束后输出最后留下的一个a数组的非零元素的值。\r\n输入描述：\r\n输入为两个正整数，第一个<=100，第二个<=9；\r\n输出描述描述：\r\n输出为一个正整数；', ' #include <stdio.h>\r\n#define N 100\r\nvoid main()\r\n{\r\n    int a[N]={0};\r\n    int n,m;\r\n    int i;\r\n    int k=0,t=0,s;\r\n    scanf(\"%d%d\",&n,&m);\r\n    s=n;\r\n    for(i=0;i<n;++i)\r\n        a[i]=i+1;\r\n    while(n>1)\r\n    {\r\n        if(a[k%s]!=0)\r\n          t++;\r\n        if(t==m)\r\n        {\r\n            n--;\r\n            a[k%s]=0;\r\n            t=0;\r\n        }\r\n        k++;\r\n    }\r\n    for(i=0;i<s;++i)\r\n    {\r\n        if(a[i]!=0)\r\n            printf(\"%d\",a[i]);\r\n    }\r\n} ', '一维数组和循环的应用', '6', '向函数传递一维数组', '3');
INSERT INTO `tk_pgdesign` VALUES ('26', '编一个程序，已知今天是星期几，计算出n天后是星期几。要求使用枚举变量。\r\n提示：枚举变量的赋值只能用枚举常量来表示，但是枚举常量均有一个整形数代表，\r\n可将改整形数存入枚举变量地址以实现外部赋值的目的。\r\n如：enum day{Sun,Mon,Tue,Wed,Thu,Fri,Sat} d1;\r\n    scanf(\"%d\",&d1);\r\n当键盘输入1时，相当于将d1赋值为Mon，即d1=Mon\r\n枚举变量的输出，只能输出其代表的整形数，如需输出其对应的枚举常量，可借助字符串数组的方式处理；\r\n如：char *p[]={“Sun”,“Mon”,“Tue”,\"Wed\",\"Thu\",\"Fri\",\"Sat\"};\r\n    printf(\"%s\",*(p+2));\r\n其输出结果为：Tue\r\n输入描述：\r\n输入为两个正整数，第一个数n(n<=6)表示今天是星期几，\r\n第二个数m(m<=1000)，表示求m天后是星期几；\r\n输出描述描述：\r\n输出为一个长度为3的字符串，表示星期几的名称；', ' #include<stdio.h>\r\nvoid main()\r\n{\r\n    enum day{Sun,Mon,Tue,Wed,Thu,Fri,Sat} d;\r\n\r\n    char *p[]={\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"};\r\n    int m; \r\n    scanf(\"%d %d\",&d,&m);\r\n    printf(\"%s\",*(p+(d+m)%7));\r\n} ', '基本的题', '2', '基本的输入/输出操作', '2');
INSERT INTO `tk_pgdesign` VALUES ('27', '题目描述：\r\n已知abc+cba=1333，其中a,b,c均为一位数，编程求出所有满足条件的a,b,c所有组合。（知识点：控制语句）\r\n输入描述：\r\n无\r\n输出描述描述：\r\n输出数据为多组，每组两个整形数', '#include<stdio.h>\r\n\r\nvoid main()\r\n{\r\n    int a,b,c;\r\n    for(a=0;a<10;a++)\r\n        for(b=0;b<10;b++)\r\n            for(c=0;c<10;c++)\r\n            {\r\n                if((a*100+b*10+c)+(c*100+b*10+a)==1333)\r\n                    printf(\"%d %d\\n\",a*100+b*10+c,c*100+b*10+a);\r\n            }\r\n} ', '判断然后选择', '4', '选择结构', '3');
INSERT INTO `tk_pgdesign` VALUES ('28', '将一个整数中的每一位上为奇数的数依次取出，构成一个新数放在t中。\r\n高位仍在高位，低位仍在低位。\r\n例如，当s中的数为：87653142时，t中的数为：7531。\r\n（知识点：控制语句、函数、指针）\r\n输入描述：\r\n输入数据为一个不大于100000000的整形数；\r\n输出描述描述：\r\n输出数据为一个不大于100000000的整形数；', '#include<stdio.h>\r\nvoid main()\r\n{\r\n    int a;\r\n    int b;\r\n    int sum=0;\r\n    int count=0;\r\n    int base=1;\r\n    scanf(\"%d\",&a);\r\n    while(a!=0)\r\n    {\r\n        b=a%10;\r\n        a=a/10;\r\n        if(1==b%2)\r\n        {    \r\n            sum=sum+base*b;\r\n            base=base*10;\r\n            count++;\r\n        }\r\n    }\r\n    printf(\"%d\",sum);\r\n}', '判断语句', '4', '循环结构', '2');
INSERT INTO `tk_pgdesign` VALUES ('29', '设Ｎ是一个四位数，它的n倍恰好是其反序数（例如：123的反序数是321），\r\n编程，输出一个满足条件的Ｎ。（知识点：控制语句）\r\n输入描述：\r\n输入为一个整形数n(2<=n<=9)\r\n输出描述描述：\r\n输出为一个四位数的整形数', ' #include <stdio.h>\r\n\r\nint number(int n);\r\n\r\nvoid main()\r\n{\r\n    int n,i,t=0;\r\n    scanf(\"%d\",&n);\r\n    for(i=1000;i<10000;i++)\r\n    {    \r\n        if(i*n==number(i))\r\n        {\r\n            t=i;\r\n            break;\r\n        }\r\n    }\r\n    printf(\"%d\",t);\r\n\r\n}\r\n\r\n\r\nint number(int n)\r\n{\r\n    int a1,a2,a3,a4;\r\n    int result;\r\n    a1=n%10;\r\n    a2=n/10%10;\r\n    a3=n/100%10;\r\n    a4=n/1000;\r\n    result=a1*1000+a2*100+a3*10+a4;\r\n    return result;\r\n} ', '判断并选择', '4', '选择结构', '3');
INSERT INTO `tk_pgdesign` VALUES ('30', '编程: 求解下列式中各字母代表的数字并输出\r\n             PEAR-ARA=PEA \r\n(知识点:控制语句)\r\n输入描述：\r\n无\r\n输出描述描述：\r\n输出为四个数字，以空格分开，依次为代表P E A R 的数字', '#include <stdio.h>\r\nvoid main()\r\n{\r\n  int p,e,a,r,d,b,c;\r\n  for(p=1;p<10;p++)\r\n	  for(e=0;e<10;e++)\r\n		  for(a=1;a<10;a++)\r\n			  for(r=0;r<10;r++)\r\n			  {\r\n                  d=p*1000+e*100+a*10+r;\r\n				  b=a*100+r*10+a;\r\n				  c=p*100+e*10+a;\r\n				  if(d-b==c)\r\n					  printf(\"%d %d %d %d\",p,e,a,r);\r\n			  }\r\n}', '循环', '4', '循环结构', '2');
INSERT INTO `tk_pgdesign` VALUES ('31', '有一个字符串，包括n个字符。写一个函数，将此字符串从第m个字符开始的全部字符复制成另一个字符串。\r\n要求在主函数输入字符串及m值并输出复制结果。\r\n（知识点：控制语句、字符串、指针）\r\n输入描述：\r\n输入为一个字符串（长度小于80）及一个整形数（小于字符串的实际长度）\r\n输出描述描述：\r\n输出为一个字符串\r\n#include <stdio.h>\r\n#include <string.h>\r\nvoid main()\r\n{\r\n	int n,m,i;\r\n	char str[80];\r\n	char *p;\r\n	p=str;\r\n	gets(str);\r\n	scanf(\"%d\",&n);\r\n    m=strlen(str);\r\n	for(i=n-1;i<m;i++)\r\n		printf(\"%c\",*(p+i));\r\n}', '#include <stdio.h>\r\n#include <string.h>\r\nvoid main()\r\n{\r\n    int i,j,n;\r\n    char a[80];\r\n    gets(a);\r\n    scanf(\"%d\",&n);\r\n    for(i=n-1;i<strlen(a);++i)\r\n        printf(\"%c\",a[i]);\r\n\r\n} ', '传递一维数组', '6', '向函数传递一维数组', '2');

-- ----------------------------
-- Table structure for `tk_pgfillblank`
-- ----------------------------
DROP TABLE IF EXISTS `tk_pgfillblank`;
CREATE TABLE `tk_pgfillblank` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '答题编号',
  `content` longtext NOT NULL COMMENT '试题内容',
  `answer` longtext COMMENT '考试试题答案',
  `analysis` longtext COMMENT '试卷编号',
  `chapter` varchar(255) DEFAULT NULL COMMENT '章节编号',
  `chaptertwo` varchar(255) DEFAULT NULL,
  `difficulty` varchar(255) DEFAULT NULL COMMENT '试题难度',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=119 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of tk_pgfillblank
-- ----------------------------
INSERT INTO `tk_pgfillblank` VALUES ('1', '以下函数的功能是：求x的y次方，请填空。\r\ndouble fun(double x,int y)\r\n{int i；\r\ndouble z：\r\nfor(i=1，z=x；i<y；i++)z=z*__(1)___；\r\nreturn z：\r\n}\r\n', 'x', 'z=x,看程序', '2', '基本的输入/输出操作', '2');
INSERT INTO `tk_pgfillblank` VALUES ('2', '用递归方法求Ｎ阶勒让德多项式的值，递归公式为\r\n       \r\n\r\n       #include<stdio.h>\r\n       main()\r\n        { float pn();\r\n          float x,lyd;\r\n          int n;\r\n          scanf(\"%d%f\",&n,&x);\r\n          lyd=  (1) \r\n          printf(\"pn=%f\",lyd);\r\n}\r\nfloat pn(float x,int n)\r\n        { float temp;\r\n          if (n==0) temp=  (2) \r\n          else if (n==1) temp=  (3)  \r\n          else temp=  (4)  \r\n          return(temp);\r\n', '3．	(1) pn(x,n);\r\n(2) 1;\r\n(3) x;\r\n(4) ((2*n-1)*x*pn(x,n-1)-(n-1)*pn(x,n-2))/n;\r\n', '看程序得知定义，返回函数', '5', '递归', '1');
INSERT INTO `tk_pgfillblank` VALUES ('3', '将一个数组中的元素按逆序重新存放。例如原来的顺序为：8,5,7,4,1, 要求改为：1,4,7,5,8  。 \r\n#define  N  7\r\nvoid   main()\r\n      {   int a[N]={12,9,16,5,7,2,1},k,s;\r\n        printf(\"\\n初始数组:\\n\");\r\n          for (k=0;k<N;k++)\r\n            printf(\"%4d\",a[k]);\r\n          for (k=0;k<    (1)    ;k++)\r\n         {  s=a[k]; a[k]=    (2)     ;    (3)     =s; }\r\n       printf(\"\\n交换后的数组:\\n\");\r\n         for (k=0;    (4)    ;k++)\r\n           printf(\"%4d\",a[k]);\r\n      }\r\n', '(1) N/2\r\n(2) a[N-1-k]\r\n(3) a[N-1-k] \r\n(4) k<N\r\n', '用数组储存，改变数组下标输出', '6', '向函数传递一维数组', '5');
INSERT INTO `tk_pgfillblank` VALUES ('4', '输出行、列号之和为3的数组元素。\r\nmain() \r\n{	char ss[4][3]={\'A\',\'a\',\'f\',\'c\',\'B\',\'d\',\'e\',\'b\',\r\n                         \'C\',\'g\',\'f\',\'D\'};\r\n        int x,y,z;\r\n        	for (x=0;    (1)    ;x++)\r\n          		for (y=0;    (2)    ;y++)\r\n            {   z=x+y;\r\n    	            if (    (3)    )   printf(\"%c\\n\",ss[x][y]);\r\n        	    }\r\n}\r\n', '(1) x<4\r\n(2) y<3\r\n(3) z==3\r\n', '判断并用for循环嵌套', '6', '向函数传递二维数组', '4');
INSERT INTO `tk_pgfillblank` VALUES ('5', '下面的程序是输出数组中最大元素的下标(p表示最大元素的下标)。\r\nvoid main()\r\n{\r\n		               \r\n		int s[]={1,-3,0,-9,8,5,-20,3};\r\n		for(i=0,p=0;i<8;i++)\r\n			if(s[i]>s[p])               ;\r\n		                    \r\n}\r\n', '(1) int  i,p\r\n(2)  p=i\r\n(3) printf(“%d\\n”,p);\r\n', '由题可知，我们需要定义i和p并且i=p', '4', '顺序结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('6', '准备客票。某铁路线上共10个车站，问需要准备几种车票？\r\n    main()\r\n      { int i,j,station,total=0;\r\n        printf(\"输入车站数:\");\r\n        scanf(\"%d\",&station);\r\n        for (i=1;i<    (1)    ;i++)\r\n          for (j=    (2)    ;j<=station;j++)\r\n       	    total=    (3)     ;\r\n        printf(\"车票种类=%d \\n\",total);\r\n}\r\n', '(1) station\r\n(2) i+1\r\n(3) total+2\r\n', 'for循环的使用', '4', '循环结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('7', '一球从 100米高度自由落下，每次落地后反跳回原来高度的一半，再落下，求它在第十次落地时，共经过多少米？第十次反弹多高？\r\n   main()\r\n    { float Sn=100.0,hn=Sn/2;\r\n      int n;\r\n      for (n=2;n<=    (1)    ;n++) \r\n         {  Sn=    (2)    ;  hn=    (3)    ; }\r\n      printf(\"第10次落地时共经过%f米\\n\",Sn);\r\n      printf(\"第10次反弹%f米\\n\",hn);\r\n}\r\n', '(1) 10\r\n(2) Sn+hn*2\r\n(3) hn/2\r\n', 'for循环的使用', '4', '循环结构', '1');
INSERT INTO `tk_pgfillblank` VALUES ('8', '求 Sn＝a+aa+aaa+...+aa...a之值，其中 a是一个数字。 例如  2+ 22 +222+2222（ 此时n＝4），n由键盘输入。\r\n   main()\r\n     { int a,n,count=1,Sn=0,Tn=0;\r\n       printf(\"请输入 a 和 n 的值:\\n\");\r\n       scanf(\"%d,%d\",&a,&n);\r\n       while (count<=    (1)    )\r\n         {   Tn=    (2)     ;\r\n             Sn=    (3)     ;\r\n             a=a*10;\r\n                 (4)    ;\r\n}\r\nprintf(\"a+aa+aaa+...=%d\\n\",Sn);\r\n}\r\n', '(1)  n\r\n(2) Tn+a\r\n(3) Sn+Tn\r\n(4) count++\r\n', '(1) count要比n小\r\n(2) Tn+a\r\n(3) Sn+Tn\r\n(4) count++\r\n', '4', '循环结构', '5');
INSERT INTO `tk_pgfillblank` VALUES ('9', '计算2+4+6+8+...+98+100\r\nmain()\r\n{\r\nint i,     (1)       ;\r\nfor(i=2;i<=100;      (2)     )\r\n    s+=i;\r\n}\r\n', '(1)s=0\r\n(2)i=i+2\r\n', '循环相加', '4', '循环结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('10', '由键盘输入三个数,计算以这三个数为边长的三角形面积。\r\n    (1)  \r\n  main()\r\n  {\r\n      (2)  ;\r\n    printf(\"Please enter 3 reals:\\n\");\r\n    scanf(\"%f%f%f\",&a,&b,&c);\r\n    if(  (3)  )\r\n      { s=(a+b+c)*0.5;\r\n        s1=s*(s-a)*(s-b)*(s-c);\r\n        s=  (4)  ;\r\n        printf(\"\\nArea of the triangle is %f\\n\",s);\r\n       }\r\n      (5)  \r\n     printf(\"It is not triangle!\\n\");\r\n  }\r\n', '(1) #include “math.h”\r\n(2) float a,b,c,s,s1\r\n(3) (a+b>c)&&(b+c>a)&&(c+a>b)\r\n(4) sqrt(s1)\r\n(5) else\r\n', '1.头文件不能少\r\n2.基础的定义\r\n3.if语句要判断\r\n4.s应该等于什么自己想', '2', '基本的输入/输出操作', '1');
INSERT INTO `tk_pgfillblank` VALUES ('11', '打印出所有“水仙花数”。\r\nmain( )\r\n        { int a, b, c ,n ;\r\n          printf(“水仙花数是：”) ；\r\n          for(n=100 ; n<1000 ;n++)\r\n           {\r\na=          (1)            ;\r\n              b=          (2)            ;\r\n              c=          (3)            ;\r\n         	if(a*100+b*10+c==a*a*a+b*b*b+c*c*c)\r\nprintf(“%5d” , n) ; \r\n} \r\n}', ' (1)n/100	(2) n/10-a*10 (3)n%10', 'for循环的嵌套', '4', '循环结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('12', '以下程序段的功能是输出如下所示的九九乘法表，请将画线部分填充完整。\r\n1*1= 1\r\n1*2= 2	2*2= 4\r\n1*3= 3	2*3= 6	3*3= 9\r\n……\r\n1*9= 9  2*9=18	3*9=27	4*9=36	5*9=45	6*9=54	7*9=63	8*9=72	9*9=81\r\nvoid main()\r\n{	int i,j;\r\nfor(i=1; i<=9 ; i++)\r\n{\r\nfor(j=1;		(1)      ; j++	)\r\n	{\r\n	printf(“%d*%d=%2d”,      (2)       );\r\n}\r\nprintf(“\\n”) ;\r\n}  \r\n}', '(1)j<=i	(2)i,j,i*j	', '循环的使用', '4', '循环结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('13', '计算一组学生的平均成绩和不及格人数\r\nstruct student\r\n{\r\n    int id;\r\n    char name[20];\r\n    char sex;\r\nfloat score;\r\n}stu1[5]=\r\n      {\r\n        {101,\"Li ping\",\'M\',45},\r\n        {102,\"Zhang ping\",\'M\',62.5},\r\n        {103,\"He fang\",\'F\',92.5},\r\n        {104,\"Cheng ling\",\'F\',87},\r\n        {105,\"Wang ming\",\'M\',58},\r\n      };\r\nmain( )\r\n{\r\n   struct student *ps;\r\n   void ave(struct student *ps);\r\n   ps= stu1;\r\n   ave(      (1)     );\r\n}\r\nvoid ave(struct student *ps)\r\n{\r\n   int c=0,i;\r\n   float ave,s=0;\r\n   for(i=0;i<5;i++,     (2)     )\r\n    {\r\n      s+=ps->score;\r\n      if(       (3)      ) c+=1;\r\n     }\r\n      printf(\"s=%f\\n\",s);\r\n      ave=s/5;\r\n     printf(\"average=%f\\ncount=%d\\n\",ave,c);\r\n}', '(1) ps (2)	ps++(3) ps->score<60  ', '基本输出', '3', '基本的输入/输出操作', '2');
INSERT INTO `tk_pgfillblank` VALUES ('14', ' 从10个数中找出其中最大值和最小值，要求不改变元素的排列顺序。 \r\nint  max, min; 		           \r\nvoid  max_min_value(int array[ ], int n)\r\n{	\r\n   int *p, *array_end; 		\r\n   array_end = array + n; 	\r\n   max = min = *array; 	\r\n   for(p=array+1; p<array_end; p++)	\r\n   if (*p > max)       (1)      ;\r\n   else if (       (2)      ) min = *p;\r\n}	\r\nmain()\r\n{	\r\n  int i, number[10];\r\n printf(\"enter 10 data\\n\");\r\n for(i=0;i<10;i++)\r\n scanf(\"%d\",&number[i]);\r\n max_min_value(number,10);\r\n printf(\"\\nmax=%d,min=%d\\n\",max,min);\r\n}', '(1)max = *p(2)*p < min', '循环的使用', '4', '循环结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('15', '把一个整数按大小顺序插入已排好序的数组中\r\nmain()\r\n{  int i,j,p,q,s,n,a[11]={127,3,6,28,54,68,87,105,162,18};\r\n      for(i=0;i<10;i++)\r\n       {  p=i;q=a[i];\r\nfor(j=i+1;j<10;j++)\r\nif(       (1)      ) \r\n            { p=j;\r\nq=a[j];}\r\nif(       (2)      )\r\n{  s=a[i];\r\n	a[i]=a[p];\r\n	a[p]=s;}\r\nprintf(\"%d\",a[i]);\r\n         }\r\nprintf(\"\\ninput number:\\n\");\r\n       scanf(\"%d\",&n);\r\n       for(i=0;i<10;i++)\r\n          if(n>a[i])\r\n           {\r\n 	for(s=9;s>=i;s--)\r\n       (3)      ;\r\n      	break;\r\n            }\r\n        a[i]=n;\r\n        for(i=0;i<=10;i++)\r\n        printf(\"%d\",a[i]);\r\n        printf(\"\\n\");\r\n}', 'q<a[j](2)p!=i  (3)a[s+1]=a[s]', '传递一维数组', '6', '向函数传递一维数组', '3');
INSERT INTO `tk_pgfillblank` VALUES ('16', '输入一组学生成绩，统计出及格和不及格额人数。当输入成绩为-1时结束输入。根据程序的功能，在横线处填写正确的语句和表达式，使程序完整。\r\nmain()\r\n{\r\nint grade,n1,n2;\r\nn1=n2= 0;\r\nprintf(\"输入一组学生成绩：\\n\");\r\n  scanf(\"%d\",&grade); \r\nwhile(       (1)      )\r\n{ if ( grade >= 60) n1++;\r\nelse        (2)      ;\r\nscanf(\"%d\",&grade);\r\n}\r\nprintf (“及格人数为：%d\\n不及格人数为：%d\",n1,n2);\r\n}', '(1)grade != -1; （2） n2++ ; ', 'if语句的判断', '4', '选择结构', '1');
INSERT INTO `tk_pgfillblank` VALUES ('18', '编写程序求矩形的面积和周长，矩形的长和宽由键盘输入，请填空。#include <stdio.h>\r\nvoid main()\r\n{   float l,w;\r\n                      \r\nprintf(“please input length and width of the rectangle\\n”);\r\nscanf(“%f%f”,&l,&w);\r\narea=                  ;\r\ngirth=                  ;\r\n                        \r\n		}', '', '基本输出', '3', '基本的输入/输出操作', '2');
INSERT INTO `tk_pgfillblank` VALUES ('19', '编写程序，输入一个数字字符（‘0’~‘9’）存入变量c，把c转换成它所对应的整数存入n，如：字符‘0’所对应的整数就是0。请填空。\r\n                              \r\nvoid main()\r\n{    char c;\r\n		               ;\r\n		printf(“please input a char:\\n”);\r\n		c=           ;\r\n		n=           ;\r\n		printf(               ,c,n);\r\n}', null, '定义的基本使用', '2', '数据类型', '2');
INSERT INTO `tk_pgfillblank` VALUES ('20', '由键盘输入三个数,计算以这三个数为边长的三角形面积。\r\n    (1)  \r\n  main()\r\n  {\r\n      (2)  ;\r\n    printf(\"Please enter 3 reals:\\n\");\r\n    scanf(\"%f%f%f\",&a,&b,&c);\r\n    if(  (3)  )\r\n      { s=(a+b+c)*0.5;\r\n        s1=s*(s-a)*(s-b)*(s-c);\r\n        s=  (4)  ;\r\n        printf(\"\\nArea of the triangle is %f\\n\",s);\r\n       }\r\n      (5)  \r\n     printf(\"It is not triangle!\\n\");\r\n  }\r\nvoid main()\r\n{    char c;\r\n		               ;\r\n		printf(“please input a char:\\n”);\r\n		c=           ;\r\n		n=           ;\r\n		printf(               ,c,n);\r\n}', null, '根据公式嵌套', '3', '基本的输入/输出操作', '2');
INSERT INTO `tk_pgfillblank` VALUES ('21', '有一方程a+bx+c=0,a,b,c的值由键盘输入,请编程序,打印出以下情况时方程的解。\r\n    		(1) a=0,b≠0\r\n    		(2) a=0,b=0,c=0\r\n    		(3) a=0,b=0,c≠0\r\n    		(4) a≠0,-4ac≥0\r\n    		(5) a≠0,-4ac≤0\r\n#include \"math.h\"\r\nmain()\r\n { float a,b,c,d,pr,pi,x1,x2;\r\n   scanf(\"%f%f%f\",&a,&b,&c);\r\n   printf(\"a=%f,b=%f,c=%f\\n\",a,b,c);\r\n    if(a==0)\r\n       { if(  (1)  )\r\n           printf(\"only one solution x=%f\\n\",-c/b);\r\n         else\r\n           if(  (2)  )printf(\"no solution\\n\");\r\n           else printf(\"x is any value\\n\");\r\n       }\r\n     else\r\n       { d=b*b-4*a*c;\r\n         if(  (3)  )\r\n          { x1=(-b+sqrt(d))/  (4)  ;\r\n            x2=(-b-sqrt(d))/  (5)  ;\r\n            printf(\"x1=%6.2f, x2=%6.2f\\n\",x1,x2);\r\n          }\r\n         else\r\n          { pr=-b/(2*a);  (6)  ;\r\n            printf(\"x1=%6.2f +%6.2fi\\n\",pr,pi);\r\n            printf(\"x2=%6.2f -%6.2fi\\n\",pr,pi);\r\n          }\r\n       }\r\n   }', null, '公式嵌套', '3', '基本的输入/输出操作', '2');
INSERT INTO `tk_pgfillblank` VALUES ('22', '投票表决器： \r\n–输入Y、y，打印agree\r\n–输入N、n，打印disagree\r\n–输入其他，打印lose\r\n        main()\r\n{\r\n    char c;\r\n    scanf(\"%c\",&c);\r\n            (1)           \r\n{\r\n	case ‘Y’:\r\n	case ‘y’: printf(“agree”);       (2)          ;\r\n	case ‘N’:\r\n	case ‘n’: printf(“disagree”);       (3)         ;\r\n	     (4)        :printf(“lose”);\r\n\r\n}', null, 'if表判断', '4', '选择结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('23', '已定义一个含有30个元素的数组s,函数fun1的功能是按\r\n      顺序分别赋予各元素从2开始的偶数,函数fun2则按顺序\r\n      每五个元素求一个平均值, 并将该值存放在数组w中：float s[30],w[6];\r\nfun1(float s[])\r\n{\r\n  int k,i;\r\n  for(k=2,i=0;i<30;i++)\r\n  {\r\n       ________________ ;\r\n     k+=2;\r\n  }\r\n}\r\nfun2(float s[],float w[])\r\n{\r\n  float sum=0.0;\r\n  int k,i;\r\n  for(k=0,i=0;i<30;i++)\r\n  {\r\n     sum+=s[i];\r\n         ________________;\r\n     { \r\n        w[k]=sum/5;\r\n               ________________ ;\r\n        k++;\r\n     }\r\n  }\r\n}\r\nmain()\r\n{\r\n   int i;\r\n   fun1(s);\r\n   ________________;\r\n   for(i=0;i<30;i++)\r\n   {\r\n     if(i%5==0) printf(\"\\n\");\r\n       printf(\"%8.2f\",s[i]);\r\n   }\r\n   printf(\"\\n\");\r\n   for(i=0;i<6;i++)\r\n   printf(\"%8.2f\",w[i]);\r\n}', '【1】 s[i]=k 或 s[i]=(i+1)*2\r\n【2】 if( ( i + 1 )%5 == 0 ) 或 if( ( i + 1 )/5*5 ==i+1)\r\n【3】 sum=0 或 sum=0.0\r\n【4】 fun2(s,w)', '数组的使用', '4', '循环结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('24', '功能：下面的程序是求1!+3!+5!+……+n!的和。\r\nmain()\r\n{\r\n  long int f,s;\r\n  int i,j,n;\r\n  ________________;\r\n  scanf(\"%d\",&n); \r\n   for(i=1;i<=n; ________________) \r\n  { \r\n     f=1;                  \r\n         for(j=1; ________________;j++)\r\n     ________________;\r\n      s=s+f;\r\n  }\r\n  printf(\"n=%d,s=%ld\\n\",n,s);\r\n} ', '【1】 s=0\r\n【2】 i+=2 或 i=i+2 或 i++,i++\r\n【3】 j<=i 或 i>=j 或 j<i+1 或 i+1>j\r\n【4】 f= f * j ', '循环的使用', '4', '循环结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('25', '将一个字符串中下标为m的字符开始的全部字符复制成为另\r\n      一个字符串。\r\n#include<stdio.h>\r\nvoid strcopy(char *str1,char *str2,int m)\r\n{ \r\n   char *p1,*p2; \r\n   ________________;  \r\n   p2=str2;\r\n   while(*p1)\r\n    ________________; \r\n    ________________;\r\n}\r\nmain()\r\n{\r\n   int i,m;\r\n   char str1[80],str2[80];\r\n   gets(str1); \r\n   scanf(\"%d\",&m);\r\n      ________________; \r\n   puts(str1);puts(str2);\r\n}', '【1】 p1= str1 + m\r\n【2】 *p2++=*p1++ 或 *(p2++)=*(p1++) 或 *p2=*p1,p2++,p1++ 或 *p2=*p1++,p2++ 或 *p2++=*p1,p1++\r\n【3】 *p2=\'\\0\' 或 *p2=0 或 *p2=NULL\r\n【4】 strcopy(str1,str2,m)', '定义一个类型', '2', '数据类型', '3');
INSERT INTO `tk_pgfillblank` VALUES ('26', '以下程序是用选择法对10个整数按升序排序。\r\n\r\nmain()\r\n{\r\n  int N=10;\r\n   int i,j,k,t,a[N];\r\n   for(i=0;i<=N-1;i++)\r\n   scanf(\"%d\",&a[i]);\r\n   for(i=0;i<N-1;i++)\r\n   {\r\n     ________________;\r\n     for(j=i+1; ________________;j++)\r\n       if(a[j]<a[k]) k=j;\r\n          if(________________)\r\n     {\r\n       t=a[i];\r\n       a[i]=a[k];\r\n       a[k]=t;\r\n     }\r\n  }\r\n  printf(\"output the sorted array:\\n\");\r\n  for(i=0;i<=N-1;i++)\r\n  printf(\"%5d\",a[i]);\r\n  printf(\"\\n\");\r\n}', '【1】 k=i\r\n【2】 j<N 或 N>j 或 j<=N-1 或 N-1>=j\r\n【3】  k != i ', '循环的使用', '4', '循环结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('27', '从键盘上输入一个字符串, 将该字符串升序排列后输出到\r\n      文件test.txt中，然后从该文件读出字符串并显示出来。\r\n#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n\r\nmain()\r\n{ \r\n   FILE  *fp;\r\n   char t,str[100],str1[100];    int n,i,j;\r\n   if((fp=fopen(\"test.txt\",\"w\"))==NULL)\r\n   { \r\n       printf(\"can\'t open this file.\\n\");\r\n       exit(0);\r\n   }\r\n   printf(\"input a string:\\n\"); gets(str);\r\n   ________________;\r\n   for(i=0; ________________ ;i++)\r\n     for(j=0;j<n-i-1;j++)\r\n     if(________________)\r\n     {\r\n        t=str[j];\r\n        str[j]=str[j+1];\r\n        str[j+1]=t; \r\n      }\r\n  ________________; \r\n   fclose(fp);\r\n   fp=fopen(\"test.txt\",\"r\");\r\n   fgets(str1,100,fp);\r\n   printf(\"%s\\n\",str1);\r\n   fclose(fp);    \r\n}', '【1】 n=strlen(str) 或 for(n=0;str[n]!=\'\\0\';n++) 或 for(n=0;str[n];n++) 或 for(n=0;str[n]!=0;n++)\r\n【2】 i<n 或 n>i 或 i<-1+n 或 i<n-1 或 n-1>i 或 -1+n>i 或 i<=n-1 或 n-1>=i 或 -1+n>=i\r\n【3】 str[j]>str[ j + 1 ] 或 str[ j + 1 ]<str[j] 或 str[j+1]<str[j] 或 str[j+1]<=str[j]\r\n【4】 fputs(str,fp) 或 fprintf(fp,\"%s\\n\",str) 或 fprintf(fp,\"%s\",str)', '根据定义填', '3', '数组的定义、引用和初始化', '3');
INSERT INTO `tk_pgfillblank` VALUES ('28', '以每行5个数来输出300以内能被7或17整除的偶数，并求出\r\n      其和。\r\n#include <stdio.h>\r\n#include <conio.h>\r\nmain()\r\n{\r\n  int i,n,sum;\r\n  sum=0;\r\n    ________________;\r\n  for(i=1; ________________ ;i++)\r\n    if(________________)\r\n      if(i%2==0)\r\n      {\r\n         sum=sum+i;\r\n         n++;\r\n         printf(\"%6d\",i);\r\n              if(________________)  \r\n            printf(\"\\n\");\r\n      }\r\n   printf(\"\\ntotal=%d\",sum);\r\n}', '【1】 n=0\r\n【2】 i<=300 或 i<300 或 300>=i 或 300>i\r\n【3】  i%7 == 0 || i%17 == 0 或 !(i%7)||!(i%17) 或 !(i%17)||!(i%7) 或 !(i%7&&i%17)\r\n【4】  n%5 == 0 或 !(n%5) 或 n/5*5==n', 'if判断判断', '4', '选择结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('29', '功能：产生并输出如下形式的方阵。\r\n1 2 2 2 2 2 1\r\n3 1 2 2 2 1 4\r\n3 3 1 2 1 4 4\r\n3 3 3 1 4 4 4\r\n3 3 1 5 1 4 4\r\n3 1 5 5 5 1 4\r\n1 5 5 5 5 5 1\r\n\r\nmain()\r\n{\r\n int a[7][7];\r\n int i,j;\r\n for (i=0;i<7;i++)\r\n   for (j=0;j<7;j++)\r\n     {\r\n      if (________________) a[i][j]=1;\r\n      else if (i<j&&i+j<6) ________________;\r\n      else if (i>j&&i+j<6) a[i][j]=3;\r\n      else if (________________) a[i][j]=4;\r\n      else a[i][j]=5;\r\n      }\r\n   for (i=0;i<7;i++)\r\n     {\r\n     for (j=0;j<7;j++)\r\n     printf(\"%4d\",a[i][j]);\r\n    ________________;\r\n     }\r\n}', '【1】  i == j || i + j == 6 \r\n【2】 a[i][j]=2\r\n【3】  i<j && i + j>6  或  j>i && i + j>6  或  i<j && i + 6<j  或  j>i && i + 6<j \r\n【4】 printf(\"\\n\")', '二维数组的使用', '6', '向函数传递二维数组', '5');
INSERT INTO `tk_pgfillblank` VALUES ('30', '功能：产生并输出杨辉三角的前七行。\r\n\r\n1\r\n1     1\r\n1     2     1\r\n1     3     3     1\r\n1     4     6     4     1\r\n1     5    10    10     5     1\r\n1     6    15    20    15     6     1\r\n\r\n-------------------------------------------------------*/\r\n\r\nmain ( )\r\n{\r\n  int a[7][7];\r\n  int i,j,k;\r\n  for (i=0;i<7;i++)\r\n  {\r\n     a[i][0]=1;    \r\n     ________________;\r\n  }\r\n  for (i=2;i<7;i++)\r\n    for (j=1;j<________________;j++)\r\n      a[i][j]= ________________;\r\n  for (i=0;i<7;i++)\r\n  {\r\n     for (j=0; ________________;j++)\r\n       printf(\"%6d\",a[i][j]);\r\n       printf(\"\\n\");\r\n   }\r\n}', '【1】 a[i][i]=1\r\n【2】 i\r\n【3】 a[i-1][j]+a[i-1][j-1] 或 a[i-1][j-1]+a[i-1][j]\r\n【4】 j<=i 或 i>=j 或 j<i+1 或 i+1>j 或 j-1<i 或 i>j-1', '二维数组的使用', '6', '向函数传递二维数组', '5');
INSERT INTO `tk_pgfillblank` VALUES ('31', '输出100到1000之间的各位数字之和能被15整除的所有数，\r\n      输出时每10个一行。\r\nmain()\r\n{\r\n  int m,n,k,i=0;\r\n  for(m=100;m<=1000;m++)\r\n  {\r\n    ________________;\r\n    n=m;\r\n    do\r\n    {\r\n       k=k+________________ ;\r\n       n=n/10;\r\n     }\r\n     ________________;\r\n     if (k%15==0)\r\n     {\r\n        printf(\"%5d\",m);i++;\r\n        if(i%10==0) ________________;\r\n      }\r\n   }\r\n}', '【1】 k=0\r\n【2】 n%10 或 n-n/10*10 或 n-10*(n/10)\r\n【3】 while(n>0) 或 while(0<n) 或 while(n!=0) 或 while(0!=n)\r\n【4】 printf(\"\\n\")', '循环', '4', '循环结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('32', '功能：分别求出一批非零整数中的偶数、奇数的平均值，用零作\r\n      为终止标记。\r\nmain()\r\n{\r\n  int x,i=0,j=0;\r\n  float s1=0,s2=0,av1,av2;\r\n  scanf(\"%d\",&x);\r\n  while(________________)\r\n  {\r\n     if(x%2==0) {s1=s1+x;i++;}\r\n      ________________\r\n     {\r\n        s2=s2+x;\r\n        j++;\r\n     }\r\n      ________________;\r\n   }\r\n   if(i!=0) \r\n      av1=s1/i;\r\n   else \r\n       av1=0;\r\n   if(j!=0) \r\n       ________________ ;\r\n   else \r\n     av2=0;\r\n   printf(\"oushujunzhi:%7.2f,jishujunzhi:%7.2f\\n\",av1,av2);\r\n}', '【1】 x != 0 或 x\r\n【2】 else 或 else  if(x%2==1) 或 else  if(x%2!=0) 或 if(x%2)\r\n【3】 scanf(\"%d\",&x)\r\n【4】 av2=s2/j', '循环', '4', '循环结构', '4');
INSERT INTO `tk_pgfillblank` VALUES ('33', '功能：产生10个[30，90]区间上的随机整数，然后对其用选择法\r\n      进行由小到大的排序。\r\n#include \"stdlib.h\"\r\nmain()\r\n{\r\n    ________________;\r\n   int i,j,k;\r\n   int a[10];\r\n   for(i=0;i<10;i++)\r\n     a[i]=random(61)+30;\r\n   for(i=0;i<9;i++)\r\n   {\r\n            ________________;\r\n      for(j=i+1;j<10;j++)\r\n      if(________________) k=j;\r\n      if(k!=i) \r\n      {\r\n           t=a[k];\r\n           a[k]=a[i];\r\n           a[i]=t;\r\n      }\r\n   } \r\n   for(________________ )\r\n     printf(\"%5d\",a[i]);\r\n   printf(\"\\n\");\r\n}', '【1】 int t\r\n【2】 k=i\r\n【3】 a[k]>a[j] 或 a[j]<a[k]\r\n【4】 i=0;i<10;i++ 或 i=0;10>i;i++ 或 i=0;i<=9;i+=1 或 i=0;9>=i;i++ 或 i=0;i<10;i+=1 或 i=0;10>i;i+=1 或 i=0;i<=9;i++ 或 i=0;9>=i;i+=1 或 i=0;i<10;++i 或 i=0;10>i;++i 或 i=0;9>=i;++i 或 i=0;i<=9;++i', '循环', '4', '循环结构', '4');
INSERT INTO `tk_pgfillblank` VALUES ('34', '功能：删除字符串中的指定字符，字符串和要删除的字符均由键盘\r\n      输入。\r\n#include \"stdio.h\"\r\nmain()\r\n{\r\n  char str[80],ch;\r\n  int i,k=0;\r\n  gets(________________);\r\n  ch=getchar();\r\n  for(i=0;________________;i++)\r\n    if(str[i]!=ch) \r\n{\r\n  ________________;\r\n        k++;\r\n    }\r\n  ________________;\r\n  puts(str);\r\n }', '【1】 str\r\n【2】 str[i]!=\'\\0\' 或 str[i]!=NULL 或 str[i]!=0 或 str[i]\r\n【3】 str[k]=str[i] 或 *(str+k)=*(str+i) 或 str[k]=*(str+i) 或 *(str+k)=str[i]\r\n【4】 str[k]=\'\\0\' 或 *(str+k)=\'\\0\' 或 str[k]=NULL 或 str[k]=0 或 *(str+k)=0 或 *(str+k)=NULL', '自己做', '4', '顺序结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('35', '功能：将一个数组中的元素按逆序存放。\r\n#define N 7\r\nmain ()\r\n{\r\n  static int a[N]={12,9,16,5,7,2,1},k,s;\r\n  printf(\"\\n the origanal array:\\n\");\r\n  for (k=0;k<N;k++)\r\n    printf(\"%4d\",a[k]);\r\n  for (k=0;k<N/2; ________________ )\r\n  {\r\n     s=a[k];\r\n  ________________ ;\r\n  ________________ ;\r\n   }\r\n   printf(\"\\n the changed array:\\n\");\r\n   for (k=0;k<N;k++)\r\n   ________________  (\"%4d\",a[k]);\r\n}', '【1】 k++ 或 k= k + 1 或 k+=1 或 ++k\r\n【2】 a[k]=a[N-k-1] 或 a[k]=a[N-1-k] 或 a[k]=a[6-k] 或 *(a+k)=*(a+N-k-1) 或 *(a+k)=*(a+N-1-k] 或 a[k]=a[-1+N-k] 或 a[k]=a[-1-k+N] 或 a[k]=a[-k-1+N] 或 a[k]=a[-k+N-1] 或 *(a+k)=*(a+N-k-1) 或 a[6-k]=s\r\n【3】 a[N-k-1]=s 或 a[N-1-k]=s 或 a[6-k]=s 或 a[N -k -1]=s 或 *(a +N -k -1)=s\r\n【4】 printf', '循环的使用', '4', '循环结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('36', '功能：是将两个字符串连接为一个字符串，不许使用库函数strcat。\r\n#include \"stdio.h\"\r\n#include \"string.h\"\r\nmain ( )\r\n{\r\n  char str1[80],str2[40];\r\n  int i,j,k;\r\n  gets(str1);gets(str2);\r\n  puts(str1);puts(str2);\r\n  ________________;\r\n  puts(str1);\r\n}\r\n\r\nJOIN(s1,s2)\r\nchar s1[80],s2[40];\r\n{\r\n  int i,j;\r\n   ________________;\r\n  for (i=0; ________________\'\\0\';i++)\r\n     s1[i+j]=s2[i];\r\n  s1[i+j]= ________________  ;\r\n}', '【1】 JOIN(str1,str2)\r\n【2】 j=strlen(s1) 或 for(j=0;s1[j]!=\'10\';j++); 或 for(j=0;s1[j];j++);\r\n【3】 s2[i]!= 或 *(s2 + i)!=\r\n【4】 \'\\0\' 或 NULL 或 0', '自己读程序', '4', '顺序结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('37', '功能：求两个非负整数的最大公约数和最小公倍数。\r\n\r\nmain()\r\n{\r\n  int m,n,r,p,gcd,lcm;\r\n  scanf(\"%d%d\",&m,&n);\r\n  if(m<n) {p=m,m=n;n=p;}\r\n  p=m*n;\r\n  r=m%n;\r\n  while(________________ )\r\n  {\r\n    m=n;n=r; ________________;\r\n   }\r\n   gcd=________________; \r\n   lcm=p/gcd;\r\n   printf(\"gcd=%d,lcm=%d\\n\", ________________);\r\n}', '【1】 r != 0 或 r\r\n【2】 r=m%n 或 r=m-m/n*n\r\n【3】 n\r\n【4】 gcd,lcm 或 n,lcm', '自己读程序', '4', '顺序结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('38', '功能：将一个字符串中的前N个字符复制到一个字符数组中去，\r\n      不许使用strcpy函数。\r\nmain ( )\r\n{\r\n  char str1[80],str2[80];\r\n  int i,n;\r\n  gets(________________);\r\n  scanf(\"%d\",&n);\r\n  for (i=0; ________________ ;i++)\r\n    ________________;\r\n  ________________;\r\n  printf(\"%s\\n\",str2);\r\n}', '【1】 str1\r\n【2】 i<n 或 n>i 或 i<=n-1 或 n-1>=i\r\n【3】 str2[i]=str1[i] 或 *(str2+i)=*(str1+i) 或 *(str2+i)=str1[i] 或 str2[i]=*(str1+i)\r\n【4】 str2[n]=\'\\0\' 或 str2[i]=\'\\0\' 或 str2[n]=0 或 str2[i]=0 或 *(str2+n)=\'\\0\' 或 *(str2+i)=\'\\0\' 或 *(str+n)=0 或 *(str2+i)=0', '翻书', '4', '顺序结构', '4');
INSERT INTO `tk_pgfillblank` VALUES ('39', '功能：打印以下图形。\r\n\r\n*****\r\n *****\r\n  *****\r\n   *****\r\n    *****\r\n \r\nmain ( )\r\n{\r\n\r\n  char a[5][9]={\"     \"};\r\n  int i,j;\r\n  for (i=0;i<5;i++)\r\n  for(j=i; ________________;j++)\r\n    a[i][j]=\'*\';\r\n  for(________________;i<5;i++)\r\n  {\r\n    for(j=0;j<9;j++)\r\n    printf(\"%c\", ________________ );\r\n    ________________;\r\n   }\r\n }', '【1】 j< i + 5 或  i + 5 >j 或 j<= i + 4 或  i + 4 >j\r\n【2】 i=0\r\n【3】 a[i][j]\r\n【4】 printf(\"\\n\")', 'for循环注意空格', '4', '循环结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('40', '功能：求一个二维数组中每行的最大值和每行的和。\r\n#include \"stdlib.h\"\r\nmain()\r\n{\r\n  int a[5][5],b[5],c[5],i,j,k,s=0;\r\n  for(i=0;i<5;i++)\r\n    for(j=0;j<5;j++)\r\n      a[i][j]=random(40)+20;\r\n  for(i=0;i<5;i++)\r\n  { \r\nk=a[i][0];\r\n ________________ ;\r\n    for(j=0;j<5;j++)\r\n    {\r\n       if(k<a[i][j]) \r\n________________ ;\r\n       s=s+a[i][j];\r\n    }\r\n    b[i]=k;\r\n    ________________ ;\r\n  }\r\n  for(i=0;i<5;i++)\r\n  {\r\n    for(j=0;j<5;j++)\r\n       printf(\"%5d\", ________________ );\r\n    printf(\"%5d%5d\",b[i],c[i]);\r\n    printf(\"\\n\");\r\n  }\r\n}', '【1】 s=0\r\n【2】 k=a[i][j]\r\n【3】 c[i]=s\r\n【4】 a[i][j]', '循环结构分解', '4', '循环结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('41', '功能：对任一整数N(N≠0),它都可以分解成1(或-1)和一些质数(素\r\n      数)因子的形式。\r\n例如：当N=150时，可分解成1×2×3×5×5；\r\n      当N=-150时，可分解为-1×2×3×5×5。\r\n      下边程序能实现这种分解过程。当N=150，输出以下分解结\r\n      果：N=  1*  2*   3*   5*   5\r\nmain()\r\n{ \r\n  int n,i,j,r;\r\n  scanf(\"%d\",&n);\r\n  if (n==0)\r\n  { \r\n    printf (\"data error \\n\");\r\n    exit(0);\r\n  }\r\n   else if (________________) \r\n    printf(\"n=1\");\r\n  else\r\n  { \r\n    printf(\"n=-1\");\r\n    n=-n;\r\n  }\r\n  for(________________;i<=n;i++)           \r\n  {  \r\n    ________________  ;                  \r\n    while(r==0)\r\n    { \r\n      printf(\"*%d\",i);\r\n      ________________ ;                  \r\n      r=n%i;\r\n    }\r\n  }\r\n  printf(\"\\n\");\r\n}', '【1】 n>0 或 0<n\r\n【2】 i=2\r\n【3】 r=n%i\r\n【4】 n=n/i 或 n/=i', '先判断在选择', '4', '选择结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('42', '功能：删除一个字符串中的所有数字字符。\r\n#include \"stdio.h\"\r\nvoid delnum(char *s)\r\n{\r\n  int i,j;\r\n  for(i=0,j=0; ________________\'\\0\' ;i++)\r\n  if(s[i]<\'0\'________________ s[i]>\'9\')\r\n  {\r\n    ________________;\r\n    j++;\r\n  }\r\n  s[j]=\'\\0\';\r\n}\r\nmain ()\r\n{\r\n  char *item;\r\n  printf(\"\\n input a string:\\n\");\r\n  gets(item);\r\n  ________________;\r\n  printf(\"\\n%s\",item);\r\n}', '【1】 s[i]!= 或 *(s+i)!= 或 *(i+s)!=\r\n【2】 ||\r\n【3】 s[j]=s[i] 或 *(s+j)=*(s+i) 或 s[j]=*(s+i) 或 *(s+j)=s[i]\r\n【4】 delnum(item)', '顺序结构', '4', '顺序结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('43', '功能：统计一个字符串中的字母、数字、空格和其它字符的个数。\r\n#include \"stdio.h\"\r\nmain ()\r\n{\r\n  char s1[80];int a[4]={0};\r\n  int k;\r\n  ________________;\r\n  gets(s1);\r\n  ________________;\r\n  puts(s1);\r\n  for(k=0;k<4;k++)\r\n    printf(\"%4d\",a[k]);\r\n}\r\nvoid fun(char s[],int b[])\r\n{\r\n  int i;\r\n  for (i=0;s[i]!=\'\\0\';i++)\r\n  if (\'a\'<=s[i]&&s[i]<=\'z\'||\'A\'<=s[i]&&s[i]<=\'Z\') \r\n    b[0]++;\r\n   else if (________________) \r\n    b[1]++;\r\n  else if (________________ ) \r\n    b[2]++;\r\n  else\r\n    b[3]++;\r\n}', '【1】 void fun(char s[],int b[])\r\n【2】 fun(s1,a)\r\n【3】 \'0\'<=s[i] && s[i]<=\'9\' 或 s[i]>=\'0\' && s[i]<=\'9\' 或 \'0\'<=s[i] && \'9\'>=s[i] 或 s[i]>=\'0\' && \'9\'>=s[i] 或 48<=s[i] && s[i]<=57 或 s[i]>=48 && s[i]<=57 或 48<=s[i] && 57>=s[i] 或 s[i]>=48 && 57>=s[i] 或 !( x < 48 || x > 57 ) 或 !( x < \'0\' || x > \'9\' )\r\n【4】 s[i] == \' \' 或 s[i] == 32', '不能忘记函数', '4', '循环结构', '4');
INSERT INTO `tk_pgfillblank` VALUES ('44', '功能：将十进制数转换成十六进制数。\r\n#include \"stdio.h\"\r\n#include \"string.h\"\r\nmain ()\r\n{\r\n  int a,i;\r\n  char s[20];\r\n  printf(\"input a integer:\\n\");\r\n  scanf(\"%d\",&a);\r\n  c10_16(s,a);\r\n  for(________________;i>=0;i--)\r\n    printf(\"%c\",s[i]);\r\n  printf(\"\\n\");\r\n}\r\nc10_16(char p[],int b)\r\n{\r\n  int j,i=0;\r\n  while (________________)\r\n  {\r\n    j=b%16;\r\n    if(j>=0&&j<=9) \r\n        ________________;\r\n    else p[i]=j+55;\r\n      b=b/16;\r\n    i++;\r\n  }\r\n  ________________;\r\n}', '【1】 i=strlen(s)-1 或 i=-1+strlen(s)\r\n【2】 b>0 或 0<b 或 b!=0 或 0!=b 或 b\r\n【3】 p[i]= j + \'0\' 或 p[i]= j + 48 或 *(p+i)= j + \'0\' 或 *(p+i)= j + 48\r\n【4】 p[i]=\'\\0\' 或 p[i]=0 或 p[i]=NULL 或 *(p+i)=\'\\0\' 或 *(p+i)=0 或 *(p+i)=NULL', '进制类是除法', '4', '选择结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('45', '功能：下面函数为二分法查找key值。数组中元素已递增排序，\r\n      若找到key则返回对应的下标，否则返回-1。\r\nfun(int a[],int n,int key)\r\n{\r\n  int low,high,mid;\r\n  low=0;\r\n  high=n-1;\r\n  while(________________)\r\n  {\r\n    mid=(low+high)/2;\r\n  if(key<a[mid]) \r\n    ________________;\r\n  else if(key>a[mid]) \r\n  ________________;\r\n  else  \r\n    ________________;\r\n  }\r\n  return -1;\r\n}\r\nmain()\r\n{\r\n  int a[10]={1,2,3,4,5,6,7,8,9,10};\r\n  int b,c;\r\n  b=4;\r\n  c=fun(a,10,b);\r\n  if(c==1) \r\n     printf(\"not found\");\r\n  else \r\n     printf(\"position %d\\n\",c);\r\n}', '【1】 low<=high 或 high>=low\r\n【2】 high=mid-1\r\n【3】 low= mid + 1\r\n【4】 return  mid 或 return  (mid)', '函数的封装', '5', '函数封装', '2');
INSERT INTO `tk_pgfillblank` VALUES ('46', '功能：输入字符串，再输入一个字符，将字符串中与输入字符相\r\n      同的字符删除。\r\n#include \"stdio.h\"\r\nvoid fun(char a[],char c)\r\n{\r\n  int i,j;\r\n  for(i=j=0; ________________;i++)\r\n    if(a[i]!=c) a[j++]=a[i];\r\n  ________________;\r\n}\r\nmain()\r\n{\r\n  char a[20],cc;\r\n  gets(a);\r\n  ________________;\r\n  ________________;\r\n  puts(a);\r\n}', '【1】 a[i] != \'\\0\' 或 a[i] 或 a[i]!=NULL\r\n【2】 a[j]=\'\\0\' 或 a[j]=NULL 或 a[j]=0\r\n【3】 cc=getchar() 或 scanf(\"%c\",&cc)\r\n【4】 fun(a,cc)', '顺序的结构', '4', '顺序结构', '4');
INSERT INTO `tk_pgfillblank` VALUES ('47', '功能：用冒泡法对数组a 进行由小到大的排序。\r\n\r\nvoid fun(int a[],int n)\r\n{\r\n  int i,j,t;\r\n   for (j=0; ________________;j++)\r\n    for (i=0; ________________;i++)\r\n      if(________________)\r\n      {\r\n        t=a[i];\r\n        a[i]=a[i+1];\r\n        a[i+1]=t;\r\n      }\r\n}\r\nmain()\r\n{\r\n  int i,a[10]={3,7,5,1,2,8,6,4,10,9};\r\n  ________________;\r\n  for(i=0;i<10;i++)\r\n    printf(\"%3d\",a[i]);\r\n}', '【1】 j<=n-1 或 n-1>=j 或 j<=-1+n 或 -1+n>=j 或 j<n 或 n>j 或 j<n-1\r\n【2】 i<n-j-1 或 n-j-1>i 或 i<n-1-j 或 n-1-j>i 或 i<=n-j-2 或 i<=n-2-j\r\n【3】 a[i]>a[ i + 1 ] 或 a[ i + 1 ]<a[i]\r\n【4】 fun(a,10)', '函数的封装', '5', '函数封装', '3');
INSERT INTO `tk_pgfillblank` VALUES ('48', '功能：计算并输出500以内最大的10个能被13或17整除的自然数之和。\r\n#include <conio.h>\r\n#include <stdio.h>\r\nint fun(________________ )\r\n{\r\n  int m=0,  mc=0, j, n;\r\n  while (k >= 2 && ________________) \r\n  {\r\n     if (k%13 == 0 || ________________)\r\n    {\r\n       m=m+k;\r\n       mc++; \r\n    }\r\n    k--;\r\n  }\r\n  ________________;\r\n}\r\nmain ( )\r\n{ \r\n  clrscr( );\r\n  printf(\"%d\\n\", fun (500));\r\n}', '【1】 int  k\r\n【2】 mc < 10 或 10 > mc 或 mc <= 9 或 9 >= mc\r\n【3】 k%17  ==  0 或 !(k%17) 或 k/17*17 == k\r\n【4】 return m 或 return (m)', '定义k', '4', '循环结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('49', '功能：计算并输出high以内最大的10个素数之和，high由主函数传\r\n      给fun函数，若high的值为100，则函数的值为732。\r\n#include <conio.h>\r\n#include <stdio.h>\r\n#include <math.h>\r\nint fun( int  high )\r\n{ \r\n  int sum = 0,  n=0,  j,  yes;\r\n  while ((high >= 2) && (________________))\r\n  {  \r\n    yes = 1;\r\n    for (j=2; j<=high/2; j++ )\r\n      if (________________)\r\n      {\r\n        yes=0;\r\n        break;\r\n      }\r\n      if (yes)\r\n      {\r\n        sum +=high; \r\n        n++; \r\n      }\r\n     high--;\r\n  }\r\n  ________________;\r\n}\r\n\r\nmain ( )\r\n{  \r\n   clrscr( );\r\n   printf(\"%d\\n\", fun (100));\r\n}', '【1】 n<10 或 10>n\r\n【2】 high%j == 0 或 !(high%j)\r\n【3】 return  sum 或 return  (sum)', '循环语句', '4', '循环结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('50', '功能：将s所指字符串的正序和反序进行连接，形成一个新串放在t\r\n      所指的数组中。\r\n例如：当s串为\"ABCD\"时，则t串的内容应为\"ABCDDCBA\"。 \r\n\r\n#include  <conio.h>\r\n#include  <stdio.h>\r\n#include  <string.h>\r\nvoid fun (char  *s, char  *t)\r\n{\r\n  int   i, d;\r\n  d = ________________;\r\n  for (i = 0; i<d; ________________)  \r\n    t[i] = s[i];\r\n  for (i = 0; i<d; i++)  \r\n      t[________________] = s[d-1-i];\r\n   t[________________] =\'\\0\';\r\n}\r\nmain()\r\n{\r\n  char  s[100], t[100];\r\n  clrscr();\r\n  printf(\"\\nPlease enter string S:\"); scanf(\"%s\", s);\r\n  fun(s, t);\r\n  printf(\"\\nThe result is: %s\\n\", t);\r\n}', '【1】 strlen(s)\r\n【2】 i++ 或 i=i+1 或 i+=1 或 ++i\r\n【3】 d+i 或 i+d\r\n【4】 2*d 或 d*2 或 i+d 或 d+i', 'strlen的功能', '4', '循环结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('51', '功能：用条件编译方法实现以下功能。输入一行电报文字,可以任\r\n      选两种方式输出，一种为原文输出；另一种将字母变成下\r\n      一个字母（如a变成b，C变成D，其他字符不变）输出。\r\n\r\n#define CHANGE\r\nmain()\r\n{\r\n   char str[80],________________=str;\r\n  int k;\r\n  printf(\"Input string:\");\r\n   gets________________;\r\n  printf(\"Output string:\");\r\n  #ifdef CHANGE\r\n    for(;*s!=\'\\0\';s++)\r\n    {\r\n      if(*s>=\'a\'&&*s<=\'z\'||*s>=\'A\'&&*s<=\'Z\')\r\n      { \r\n        (*s)++;\r\n        if(*s>\'Z\'&&*s<\'Z\'+2) \r\n          ________________;\r\n        if(*s>\'z\')\r\n          *s=________________;\r\n       }\r\n     }\r\n     printf(\"%s\\n\",str);\r\n  #else\r\n    printf(\"%s\\n\",str);\r\n  #endif\r\n}', '【1】 *s\r\n【2】 (str) 或 (s)\r\n【3】 *s=\'A\'\r\n【4】 \'a\'', '基本', '4', '循环结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('52', '功能：输入3个数a,b,c，按从小到大的顺序输出。\r\nmain()\r\n{\r\n  void swap(int *p1, int *p2);\r\n  int n1,n2,n3;\r\n  int *pointer1,*pointer2,*pointer3;\r\n  printf(\"please input 3 number:n1,n2,n3:\");\r\n  scanf(\"%d,%d,%d\",&n1,&n2,&n3);\r\n  pointer1=&n1;\r\n  pointer2=&n2;\r\n  pointer3=&n3;\r\n    if(________________) swap(pointer1,pointer2);\r\n \r\n  if(________________) swap(pointer1,pointer3);\r\n  if(________________) swap(pointer2,pointer3);\r\n  printf(\"the sorted numbers are:%d,%d,%d\\n\",n1,n2,n3);\r\n}\r\nvoid swap(________________)\r\nint *p1,*p2;\r\n{\r\n  int p;\r\n  p=*p1;*p1=*p2;*p2=p;\r\n}', '【1】 n1>n2 或 n2<n1 或 *pointer1>*pointer2 或 *pointer2<*pointer1\r\n【2】 n1>n3 或 n3<n1 或 *pointer1>*pointer3 或 *pointer3<*pointer1\r\n【3】 n2>n3 或 n3<n2 或 *pointer2>*pointer3 或 *pointer3<*pointer2\r\n【4】 p1,p2', '基本', '3', '基本的输入/输出操作', '2');
INSERT INTO `tk_pgfillblank` VALUES ('53', '功能：输入数组，最大的与最后一个元素交换，最小的与第一个元\r\n      素交换，输出数组。\r\n\r\nmain()\r\n{\r\n  int number[10];\r\n  input(number);\r\n  max_min(number);\r\n  output(number);\r\n}\r\n\r\ninput(number)\r\nint number[10];\r\n{\r\n  int i;\r\n  for(i=0;________________;i++)\r\n    scanf(\"%d,\",&number[i]);\r\n    scanf(\"%d\",&number[9]);\r\n}\r\n\r\nmax_min(array)\r\nint array[10];\r\n{\r\n  int *max,*min,k,l;\r\n  int *p,*arr_end;\r\n  arr_end=array+10;\r\n  max=min=array;\r\n  for(p=array+1;p<arr_end;p++)\r\n    if(*p>*max) \r\n      max=p;\r\n  else if(*p<*min) \r\n    ________________;\r\n  k=*max;\r\n  l=*min;\r\n  *p=array[0];\r\n  array[0]=l;\r\n  ________________;\r\n  *p=array[9];\r\n  ________________;\r\n  k=*p;\r\n  return;\r\n}\r\n\r\noutput(array)\r\nint array[10];\r\n{\r\n  int *p;\r\n  for(p=array;p<array+9;p++)\r\n  printf(\"%d,\",*p);\r\n  printf(\"%d\\n\",array[9]);\r\n}', '【1】 i<9 或 9>i\r\n【2】 min=p\r\n【3】 l=*p\r\n【4】 array[9]=k', '判断并且比较', '6', '向函数传递一维数组', '3');
INSERT INTO `tk_pgfillblank` VALUES ('54', '功能：两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙\r\n      队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比\r\n      赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出\r\n      三队赛手的名单。\r\nmain()\r\n{\r\n  char i,j,k;/*i是a的对手，j是b的对手，k是c的对手*/\r\n  for(i=\'x\';i<=\'z\';i++)\r\n    for(j=\'x\';j<=\'z\';j++)\r\n    {\r\n      if(________________)\r\n        for(k=\'x\';________________;k++)\r\n        {\r\n          if(________________)\r\n          {\r\n            if(i!=\'x\'&&k!=________________)\r\n               printf(\"order is a--%c\\tb--%c\\tc--%c\\n\",i,j,k);\r\n          }\r\n        }\r\n    }\r\n}', '【1】 i!=j 或 i != j\r\n【2】 k<=\'z\' 或 \'z\'>=k\r\n【3】 i!=k&&j!=k 或 i != k && j != k\r\n【4】 \'z\'', '循环', '4', '循环结构', '5');
INSERT INTO `tk_pgfillblank` VALUES ('55', '功能：打印出如下图案（菱形）\r\n\r\n   *\r\n  ***\r\n *****\r\n*******\r\n *****\r\n  ***\r\n   *\r\n#include <stdio.h>\r\nmain()\r\n{\r\n  int i,j,k;\r\n    for(i=0;________________;i++) \r\n  {\r\n    for(j=0;j<=4-i;j++)\r\n      printf(\" \");\r\n        for(k=1;k<=________________;k++)\r\n      printf(\"*\");\r\n    printf(\"\\n\");\r\n  }\r\n  for(________________;j<3;j++)\r\n  {\r\n    for(k=0;k<j+3;k++)\r\n      printf(\" \");\r\n    for(k=0;k<5-2*j;k++)\r\n      printf(\"*\");\r\n     printf(\"\\n\");\r\n  }\r\n}', '【1】 i<=3 或 i<4 或 3>=i 或 4>i\r\n【2】 2*i+1 或 i*2+1 或 1+2*i 或 1+i*2\r\n【3】 j=0', '函数的传递', '8', '向函数传递结构体', '4');
INSERT INTO `tk_pgfillblank` VALUES ('56', '功能：用结构体调用的方法编程。要求输入A，B，C，D，E，F五\r\n      个元素的数值，并按从大到小的顺序输出。\r\n\r\n-------------------------------------------------------*/\r\n\r\n#define N sizeof tbl/sizeof tbl[0]  /*取得数组有多少个元素*/\r\nint A,B,C,D,E,F;\r\n\r\nstruct ele\r\n{\r\n  char vn;\r\n  int ________________;  \r\n}tbl[]={{\'A\',&A},{\'B\',&B},{\'C\',&C},{\'D\',&D},{\'E\',&E},{\'F\',&F}},t;\r\n\r\nmain()\r\n{\r\n  int k,j,m;\r\n  for(k=0;k<________________;k++)\r\n  {\r\n    printf(\"Enter data for %c\\n\",tbl[k].vn);\r\n    scanf(\"%d\",tbl[k].vp);\r\n  }\r\n  m=N-1;\r\n  while(m>0)\r\n  {\r\n    for(k=j=0;j<m;j++)\r\n           if(*tbl[j].vp<________________) \r\n      {\r\n        t=tbl[j];\r\n        tbl[j]=tbl[j+1];\r\n        tbl[j+1]=t;\r\n        k=j;\r\n      }\r\n    ________________; \r\n  }\r\n  for(k=0;k<N;k++)\r\n    printf(\"%c(%d)\",tbl[k].vn,*tbl[k].vp);\r\n  printf(\"\\n\");\r\n  getch();\r\n}', '【1】 *vp\r\n【2】 N\r\n【3】 *tbl[j+1].vp 或 *tbl[ j + 1 ].vp\r\n【4】 m=k', '函数的传递', '8', '向函数传递结构体', '3');
INSERT INTO `tk_pgfillblank` VALUES ('57', '功能：输入某年某月某日，判断这一天是这一年的第几天？\r\nmain()\r\n{\r\n  int day,month,year,sum,leap;\r\n  printf(\"\\nplease input year,month,day\\n\");\r\n  scanf(\"%d,%d,%d\",&year,&month,&day);\r\n  switch(month)\r\n  {\r\n    case 1:sum=0;break;\r\n    case 2:sum=31;break;\r\n    case 3:sum=59;break;\r\n      case 4:________________;break;\r\n    case 5:sum=120;break;\r\n    case 6:sum=151;break;\r\n    case 7:sum=181;break;\r\n    case 8:sum=212;break;\r\n    case 9:sum=243;break;\r\n    case 10:sum=273;break;\r\n    case 11:sum=304;break;\r\n    case 12:sum=334;break;\r\n    default:printf(\"data error\");break;\r\n  }\r\n ________________;\r\n  if(year%400==0||(________________)\r\n    leap=1;\r\n  else\r\n    leap=0;\r\n  if(________________)\r\n    sum++;\r\n  printf(\"It is the %dth day.\",sum);\r\n}', '【1】 sum=90\r\n【2】 sum=sum+day 或 sum= sum + day\r\n【3】 year%4==0&&year%100!=0) 或 year%4 == 0 && year%100 != 0\r\n【4】 leap==1&&month>2 或 leap == 1 && month>2 或 leap == 1 && 2<month', '判断并且选择', '4', '选择结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('58', '功能：输入三个整数x,y,z，请把这三个数由小到大输出。\r\nmain()\r\n{\r\n  int x,y,z,t;\r\n  scanf(\"%d%d%d\",&x,&y,&z);\r\n  if (x>y){________________}\r\n  if(x>z){________________}\r\n  if(y>z){________________}\r\n  printf(\"small to big: %d %d %d\\n\",x,y,z);\r\n}', '【1】 t=x;x=y;y=t;\r\n【2】 t=z;z=x;x=t;\r\n【3】 t=y;y=z;z=t;', '判断', '4', '选择结构', '1');
INSERT INTO `tk_pgfillblank` VALUES ('59', '功能：从键盘上输入两个复数的实部与虚部，求出并输出它们的\r\n      和、差、积、商。\r\n#include<stdio.h>\r\nvoid main()\r\n{\r\n  float a,b,c,d,e,f;\r\n  printf(\"输入第一个复数的实部与虚部：\");\r\n  scanf(\"%f, %f\",&a,&b);\r\n  printf(\"输入第二个复数的实部与虚部：\");\r\n  scanf(\"%f, %f\",&c,&d);\r\n  ________________;\r\n  f=b+d;\r\n  printf(\"相加后复数：实部：%f,虚部：%f\\n\",e,f);\r\n  e=a*c-b*d;\r\n  ________________;\r\n  printf(\"相乘后复数：实部：%f,虚部：%f\\n\",e,f);\r\n  e=(a*c+b*d)/(c*c+d*d);\r\n  ________________;\r\n  printf(\"相除后复数：实部：%f,虚部：%f\\n\",e,f);\r\n}', '【1】 e=a+c 或 e=c+a\r\n【2】 f=a*d+b*c 或 f= a*d + b*c 或 f= a * d + b * c\r\n【3】 f=(b*c-a*d)/(c*c+d*d) 或 f=(b*c-a*d) / (c*c+d*d) 或 f=( b * c - a * d ) / ( c * c + d * d )', '基本', '3', '基本的输入/输出操作', '5');
INSERT INTO `tk_pgfillblank` VALUES ('60', '功能：要求输出结果为：\r\n      A，B\r\n      65，66\r\n#include<stdio.h>\r\nvoid main()\r\n{\r\n  char a,________________;\r\n  a=________________;\r\n  b=\'b\';\r\n  a=a-32;\r\n  b=b-________________;\r\n  printf(\"%c, %c\\n%d,%d\\n\",a,b,a,b);\r\n}', '【1】 b\r\n【2】 \'a\' 或 97\r\n【3】 32', '输入', '4', '顺序结构', '1');
INSERT INTO `tk_pgfillblank` VALUES ('61', '功能：从键盘输入一个字符串，将小写字母全部转换成大写字母，\r\n      然后输出到一个磁盘文件“test”中保存。输入的字符串\r\n      以！结束。\r\n#include \"stdio.h\"\r\n#include <string.h>\r\nmain()\r\n{\r\n  FILE *fp;\r\n  char str[100];\r\n  int i=0;\r\n  if((fp=fopen(\"test\",________________))==NULL)\r\n  {\r\n    printf(\"cannot open the file\\n\");\r\n    exit(0);\r\n  }\r\n  printf(\"please input a string:\\n\");\r\n  gets(________________);\r\n  while(str[i]!=\'!\')\r\n  {\r\n    if(str[i]>=\'a\'&&________________)\r\n      str[i]=str[i]-32;\r\n    fputc(str[i],fp);\r\n    i++;\r\n  }\r\n  fclose(________________);\r\n  fp=fopen(\"test\",\"r\");\r\n  fgets(str,strlen(str)+1,fp);\r\n  printf(\"%s\\n\",str);\r\n  fclose(fp);\r\n}', '【1】 \"w\"\r\n【2】 str\r\n【3】 str[i]<=\'z\' 或 \'z\'>=str[i]\r\n【4】 fp', '基本', '3', '基本的输入/输出操作', '3');
INSERT INTO `tk_pgfillblank` VALUES ('62', '功能：有五个学生，每个学生有3门课的成绩，从键盘输入以上数\r\n      据（包括学生号，姓名，三门课成绩），计算出平均成绩，\r\n      设原有的数据和计算出的平均分数存放在磁盘文件\"stud\"\r\n      中。\r\n#include \"stdio.h\"\r\nstruct student\r\n{\r\n  char num[6];\r\n  char name[8];\r\n  int score[3];\r\n  float avr;\r\n} stu[5];\r\n\r\nmain()\r\n{\r\n  int i,j,sum;\r\n  FILE *fp;\r\n  /*input*/\r\n  for(i=0;i<5;i++)\r\n  {\r\n    printf(\"\\n please input No. %d score:\\n\",i);\r\n    printf(\"stuNo:\");\r\n    scanf(\"%s\",stu[i].num);\r\n    printf(\"name:\");\r\n    scanf(\"%s\",stu[i].name);\r\n    sum=0;\r\n       for(j=0;________________;j++)\r\n    { \r\n      printf(\"score %d.\",j+1);\r\n      scanf(\"%d\",&stu[i].score[j]);\r\n          sum+=stu[i].________________;\r\n    }\r\n    stu[i].avr=sum/3.0;\r\n  }\r\n  fp=fopen(\"stud\",\"w\");\r\n  for(i=0;i<5;________________)\r\n    if(fwrite(&stu[i],sizeof(________________),1,fp)!=1)\r\n      printf(\"file write error\\n\");\r\n    fclose(fp);\r\n}', '【1】 j<3 或 3>j\r\n【2】 score[j]\r\n【3】 i++ 或 ++i 或 i=i+1\r\n【4】 struct student', '基本的输出', '4', '顺序结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('63', '功能：输入两个整数，求他们的按位与。\r\n\r\n\r\n#include<stdio.h>\r\nvoid main()\r\n{\r\n  int x,y,z=0,a,b,k=1;\r\n  scanf(\"%d,%d\",&x,&y);\r\n  while(x>0&&y>0)\r\n  {\r\n    a=x%2;\r\n    x=________________;\r\n    b=y%2;\r\n    y=y/2;\r\n    z=z+________________;\r\n    k=k*2;\r\n  }\r\n  ________________(\"z=%d\\n\",z);\r\n}', '【1】 x/2\r\n【2】 a*b*k 或 a * b * k\r\n【3】 printf', '基础', '2', '常用运算符及其表达式', '1');
INSERT INTO `tk_pgfillblank` VALUES ('64', '功能：输入数组，最大的与第一个元素交换，最小的与最后一个\r\n      元素交换，输出数组。\r\nmain()\r\n{\r\n  int number[10];\r\n  input(number);\r\n  max_min(number);\r\n  output(number);\r\n}\r\n\r\ninput(number)\r\nint number[10];\r\n{\r\n  int i;\r\n  for(i=0;i<9;________________)\r\n  scanf(\"%d,\",&number[i]);\r\n  scanf(\"%d\",&number[9]);\r\n}\r\nmax_min(________________)\r\nint array[10];\r\n{\r\n  int *max,*min,k,l;\r\n  int *p,*arr_end;\r\n  arr_end=________________;\r\n  max=min=array;\r\n  for(p=array+1;p<arr_end;p++)\r\n    if(*p>*max) max=p;\r\n    else if(________________) min=p;\r\n  k=*max;\r\n  l=*min; \r\n  *p=array[0];array[0]=l;l=*p;\r\n  *p=array[9];array[9]=k;k=*p;\r\n  return;\r\n}\r\noutput(array)\r\nint array[10];\r\n{\r\n  int *p;\r\n  for(p=array;p<array+9;p++)\r\n  printf(\"%d,\",*p);\r\n  printf(\"%d\\n\",array[9]);\r\n}', '【1】 i++ 或 i=i+1 或 ++i\r\n【2】 array\r\n【3】 array+10 或 10+array\r\n【4】 *p<*min 或 *min>*p', '基础', '6', '向函数传递一维数组', '2');
INSERT INTO `tk_pgfillblank` VALUES ('65', '功能：有n个整数，使其前面各数顺序向后移m个位置，最后m个数\r\n      变成最前面的m个数\r\nmain()\r\n{\r\n  int number[20],n,m,i;\r\n  printf(\"the total numbers is:\");\r\n  scanf(\"%d\",&n);\r\n  printf(\"back m:\");\r\n  scanf(\"%d\",&m);\r\n  for(i=0;i<n-1;i++)\r\n    scanf(\"%d,\",&number[i]);\r\n  scanf(\"%d\",&number[n-1]);\r\n  move(________________);\r\n  for(i=0;i<n-1;i++)\r\n    printf(\"%d,\",number[i]);\r\n  printf(\"%d\",number[n-1]);\r\n}\r\nmove(________________)\r\nint n,m,array[20];\r\n{\r\n  int *p,array_end;\r\n  array_end=*(________________);\r\n  for(p=array+n-1;p>array;p--)\r\n    *p=*(________________);\r\n  *array=array_end;\r\n  m--;\r\n  if(m>0) move(array,n,m);\r\n}', '【1】 number,n,m\r\n【2】 array,n,m\r\n【3】 array+n-1 或 array + n -1\r\n【4】 p-1 或 p -1', '基本', '3', '选择结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('66', '功能：有n个人围成一圈，顺序排号。从第一个人开始报数（从1\r\n      到3报数），凡报到3的人退出圈子，问最后留下的是原来\r\n      第几号的那位。\r\n#define nmax 50\r\nmain()\r\n{\r\n  int i,k,m,n,num[nmax],*p;\r\n  printf(\"please input the total of numbers:\");\r\n  scanf(\"%d\",&n);\r\n  p=num;\r\n  for(i=0;________________;i++)\r\n  *(p+i)=________________;\r\n  i=0;\r\n  k=0;\r\n  m=0;\r\n  while(m<n-1)\r\n  {\r\n    if(________________!=0) k++;\r\n    if(k==3)\r\n    {\r\n      *(p+i)=0;\r\n      k=0;\r\n      m++;\r\n    }\r\n    i++;\r\n    if(i==n) i=0;\r\n  }\r\n  while(________________) p++;\r\n  printf(\"%d is left\\n\",*p);\r\n}', '【1】 i<n 或 n>i\r\n【2】 i+1 或 i + 1\r\n【3】 *(p+i) 或 *( p + i )\r\n【4】 *p==0 或 *p == 0\r\n【1】 i<n 或 n>i\r\n【2】 i+1 或 i + 1\r\n【3】 *(p+i) 或 *( p + i )\r\n【4】 *p==0 或 *p == 0\r\n【1】 i<n 或 n>i\r\n【2】 i+1 或 i + 1\r\n【3】 *(p+i) 或 *( p + i )\r\n【4】 *p==0 或 *p == 0\r\n', '基本', '3', '循环结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('67', '功能：写一个函数，求一个字符串的长度，在main函数中输入字\r\n      符串，并输出其长度。\r\n#include <stdio.h>\r\nmain()\r\n{\r\n  int length(char *p);\r\n  int len;\r\n  char str[20];\r\n  printf(\"please input a string:\\n\");\r\n  scanf(\"%s\",str);\r\n  len=length(________________);\r\n  printf(\"the string has %d characters.\",len);\r\n}\r\n________________(p)\r\nchar *p;\r\n{\r\n  int n;\r\n  n=0;\r\n  while(*p!=\'\\0\')\r\n  {\r\n    ________________;\r\n    ________________;\r\n  }\r\n  return n;\r\n}', '【1】 str\r\n【2】 length 或 int length\r\n【3】 n++ 或 ++n 或 n=n+1 或 n+=1\r\n【4】 p++ 或 ++p 或 p=p+1 或 p+=1', '基本', '5', '函数封装', '2');
INSERT INTO `tk_pgfillblank` VALUES ('68', '功能：通过函数的递归调用计算阶乘。\r\nlong power(int n)\r\n{\r\n  long f;\r\n  if(n>1)\r\n    f=________________;\r\n  else  \r\n     f=1;\r\n  return(f);\r\n}\r\nmain()\r\n{\r\n  int n;\r\n  long y;\r\n  printf(\"input a inteager number:\\n\");\r\n    scanf(\"%d\",________________);\r\n  y=power(n);\r\n  printf(\"%d!=%ld\\n\",n,________________);\r\n  getch();\r\n}', '【1】 power(n-1)*n 或 power( n - 1 ) * n 或 n*power(n-1)\r\n【2】 &n\r\n【3】 power(n) 或 y', '不知道别问我', '5', '递归', '2');
INSERT INTO `tk_pgfillblank` VALUES ('69', '功能：数组名作为函数参数，求平均成绩。\r\nfloat aver(float a[ ])             /*定义求平均值函数，形参为一浮点型数组名*/\r\n{\r\n  int i;\r\n  float av,s=a[0];\r\n  for(i=1;i<5;i++)\r\n  s+=________________[i];\r\n  av=s/5;\r\n  return ________________;\r\n}\r\n\r\nvoid main()\r\n{\r\n  float sco[5],av;\r\n  int i;\r\n  printf(\"\\ninput 5 scores:\\n\");\r\n  for(i=0;i<5;i++)\r\n    scanf(\"%f\",________________);\r\n  av=aver(________________);\r\n  printf(\"average score is %5.2f\\n\",av);\r\n  getch();\r\n}', '【1】 a\r\n【2】 av 或 (av)\r\n【3】 &sco[i] 或 sco+i\r\n【4】 sco', '不知道自己想', '6', '向函数传递一维数组', '2');
INSERT INTO `tk_pgfillblank` VALUES ('70', '功能：计算个人与各科平均成绩及全班平均成绩，并在屏幕上显\r\n      示出来。\r\n#define M 5   /*定义符号常量 人数为5*/\r\n#define N 4   /*定义符号常量 课程为4*/\r\n#include \"stdio.h\"\r\nmain()\r\n{\r\n  int i,j;\r\n  void aver(float sco[M+1][N+1]);\r\n  static float score[M+1][N+1]={{78,85,83,65},{88,91,89,93}, {72,65,54,75},{86,88,75,60},{69,60,50,72}};\r\n  aver(score);              \r\n  clrscr();\r\n  printf(\"学生编号  课程1   课程2   课程3   课程4   个人平均\\n\");\r\n  for(i=0;i<M;i++)\r\n  {\r\n    printf(\"学生%d\\t\",i+1);\r\n       for(j=0;j<________________;j++)\r\n      printf(\"%6.1f\\t\",score[i][j]);\r\n    printf(\"\\n\");\r\n  }\r\n  for(j=0;j<8*(N+2);j++)\r\n    printf(\"-\");    \r\n  printf(\"\\n课程平均\");\r\n  for(j=0;j<N+1;j++)  \r\n    printf(\"%6.1f\\t\",score[i][j]);\r\n  printf(\"\\n\");\r\n  getch();\r\n}\r\n\r\nvoid aver(float sco[][N+1])           \r\n{\r\n  int i,j;\r\n    for(i=0;i<________________;i++)\r\n  {\r\n    for(j=0;j<N;j++)\r\n    {\r\n      sco[i][N] += sco[i][j];\r\n      sco[M][j] += sco[i][j];    \r\n      sco[M][N] += sco[i][j];   \r\n    }\r\n      sco[i][N] ________________ N;\r\n  }\r\n  for(j=0;j<N;j++)  \r\n     sco[M][________________] /= M; \r\n  sco[M][N]=sco[M][N]/M/N;   \r\n}', '【1】 N+1 或 1+N 或 5\r\n【2】 M 或 5\r\n【3】 /=\r\n【4】 j', '不要问我为什么', '6', '向函数传递二维数组', '3');
INSERT INTO `tk_pgfillblank` VALUES ('71', '功能：利用全局变量计算长方体的体积及三个面的面积。\r\nint s1,s2,s3;\r\nint vs(int a,int b,int c)\r\n{\r\n  int v;\r\n  v=________________;\r\n  s1=a*b;\r\n   \r\n  s2=________________;\r\n  s3=a*c;\r\n  return  v;\r\n}\r\nmain()\r\n{\r\n  int v,l,w,h;\r\n  clrscr();\r\n  printf(\"\\ninput length,width and height： \");\r\n  scanf(\"%d%d%d\",________________,&w,&h);\r\n  v=________________;\r\n  printf(\"v=%d    s1=%d    s2=%d    s3=%d\\n\",v,s1,s2,s3);\r\n  getch();\r\n}', '【1】 a*b*c 或 a * b * c\r\n【2】 b*c 或 b * c\r\n【3】 &l\r\n【4】 vs(l,w,h) 或 vs( l , w , h )', '基本', '2', '变量', '3');
INSERT INTO `tk_pgfillblank` VALUES ('72', '功能：用函数调用方式，实现字符串的复制。\r\nvoid string_copy(char *str_from, char *str_to)\r\n{\r\n  int i=0;\r\n   for(; (*(________________)=*(str_from+i))!=\'\\0\'; i++) ;\r\n}\r\nmain()\r\n{\r\n  static char array_str1[20]=\"I am a teacher.\";\r\n  char array_str2[20];\r\n  ________________(array_str1, array_str2);\r\n  ________________(\"array_str2=%s\\n\",array_str2);\r\n}', '【1】 str_to+i 或 i+str_to\r\n【2】 string_copy\r\n【3】 printf', '基础', '2', '函数封装', '2');
INSERT INTO `tk_pgfillblank` VALUES ('73', '功能：seek()函数：判断是否有不合格成绩;形参：1个，指\r\n      向由3个int型元素组成的1维数组的行指针变量返回值：\r\n      (1)有不合格成绩，则返回指向本行首列的一个(列)指针；  \r\n      (2)没有有不合格成绩，返回值为指向下一行的一个\r\n         (列)指针 \r\nint  *seek( int  (*pnt_row)[3] )\r\n{\r\n  int i=0, *pnt_col;             \r\n  ________________=*(pnt_row+1);\r\n  for(; i<3; i++)\r\n    if(*(*pnt_row+i)<60)        \r\n    {\r\n      pnt_col=*pnt_row;       \r\n      break; /*退出循环*/\r\n    }\r\n  return(________________);\r\n}\r\nmain()\r\n{\r\n  static int grade[3][3]={{55,65,75},{65,75,85},{75,80,90}};\r\n  int i,j,*pointer;             \r\n  for(i=0; i<3; i++)             \r\n  {\r\n    pointer=seek(________________);\r\n    if(pointer==*(grade+i))     \r\n    { \r\n       printf(\"No.%d grade list: \", i+1);\r\n       for(j=0; j<3; j++) \r\n         printf(\"%d  \",*(________________));\r\n       printf(\"\\n\");\r\n    }\r\n  }\r\n}', '【1】 pnt_col\r\n【2】 pnt_col\r\n【3】 grade+i 或 i+grade\r\n【4】 pointer+j 或 j+pointer', '翻书', '7', '指针数组', '3');
INSERT INTO `tk_pgfillblank` VALUES ('74', '功能：计算某日是当年的第几天。\r\n#include <stdio.h>\r\nstruct \r\n{\r\n  int year;\r\n  int month;\r\n  int day;\r\n}data;    /* 定义一个结构并声明对象为data */\r\nvoid main()\r\n{\r\n  int days;\r\n  printf(\"请输入日期(年,月,日)：\");\r\n  scanf(\"%d, %d, %d\", &data.year, &data.month, &data.day);\r\n  switch(data.month)\r\n  {\r\n    case 1:days = data.day;\r\n           break;\r\n    case 2:days = data.day+________________;\r\n           break;\r\n    case 3:days = data.day+59;\r\n           break;\r\n    case 4:days = data.day+90;\r\n           break;\r\n    case 5:days = data.day+________________;\r\n           break;\r\n    case 6:days = data.day+151;\r\n           break;\r\n    case 7:days = data.day+181;\r\n           break;\r\n    case 8:days = data.day+212;\r\n           break;\r\n    case 9:days = data.day+243;\r\n           break;\r\n   case 10:days = data.day+273;\r\n           break;\r\n   case 11:days = data.day+304;\r\n           break;\r\n   case 12:days = data.day+334;\r\n           break;\r\n  }\r\n  if(data.year%4==0&&data.year%100!=0________________data.year%400==0)\r\n    if(data.month>=3)\r\n      days =________________;\r\n  printf(\"%d月%d日是%d年的第%d天.\\n\", data.month, data.day, data.year, days);\r\n}', '【1】 31\r\n【2】 120\r\n【3】 ||\r\n【4】 days + 1 或 1+days 或 ++days', '顺序填入', '4', '顺序结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('75', '功能：输入学生成绩并显示。\r\n# include <stdio.h>\r\n\r\nstruct student\r\n{\r\n  char number[6];\r\n  char name[6];\r\n  int  score[3];\r\n} stu[2];\r\nvoid output(struct student stu[2]);\r\nvoid main()\r\n{\r\n  int i, j;\r\n  for(i=0; i<2; ________________)\r\n  {\r\n    printf(\"请输入学生%d的成绩：\\n\", i+1);\r\n    printf(\"学号：\");\r\n    scanf(\"%s\", ________________.number);\r\n    printf(\"姓名：\");\r\n    scanf(\"%s\", stu[i].name);\r\n    for(j=0; j<3; j++)\r\n    {\r\n      printf(\"成绩 %d.  \", j+1);\r\n      scanf(\"%d\", ________________.score[j]);\r\n    }\r\n    printf(\"\\n\");\r\n  }\r\n  output(stu);\r\n}\r\nvoid output(struct student stu[2])\r\n{\r\n  int i, j;\r\n  printf(\"学号  姓名  成绩1  成绩2  成绩3\\n\");\r\n  for(i=0; i<2; i++)\r\n  {\r\n  ________________(\"%-6s%-6s\", stu[i].number, stu[i].name);\r\n  for(j=0; j<3; j++)\r\n    printf(\"%-8d\", stu[i].score[j]);\r\n    printf(\"\\n\");\r\n  }\r\n}', '【1】 i++ 或 ++i 或 i=i+1\r\n【2】 &stu[i]\r\n【3】 &stu[i]\r\n【4】 printf', '多种答案', '3', '基本的输入/输出操作', '3');
INSERT INTO `tk_pgfillblank` VALUES ('76', '功能：考查字符串数组的应用。输出26个英文字母。\r\n#include <stdio.h>\r\nvoid main (void)\r\n{\r\n  char string[256];\r\n  int i;\r\n  for (i = 0; i < 26; ________________)\r\n    string[i] = ________________;\r\n  string[i] = \'\\0\';\r\n  printf (\"the arrary contains %s\\n\",________________);\r\n}', '【1】 i++ 或 ++i 或 i=i+1 或 i+=1\r\n【2】 \'A\' + i 或 i+\'A\' 或 65 + i 或 i+65\r\n【3】 string', '多种答案', '6', '字符数组', '3');
INSERT INTO `tk_pgfillblank` VALUES ('77', '功能：输出结果为：\r\n* * * * *\r\n * * * * *\r\n  * * * * *\r\n   * * * * * \r\nmain()\r\n{\r\n  static char ________________={\'*\',\'*\',\'*\',\'*\',\'*\'};\r\n  int i,j,k;\r\n  char space=\' \';\r\n  for(i=0;i<5;i++)\r\n  {\r\n    printf(\"\\n\");\r\n      for(j=1;j<=3*i;j++)\r\n      printf(\"%1c\",________________);\r\n       for(k=0;k<________________;k++)\r\n      printf(\"%3c\",a[k]);\r\n  }\r\n  printf(\"\\n\");;\r\n}', '【1】 a[5] 或 a[]\r\n【2】 space 或 \' \'\r\n【3】 5 或 =4', '多种答案', '6', '向函数传递二维数组', '3');
INSERT INTO `tk_pgfillblank` VALUES ('78', '功能：当输入“2，5”的时候输出为“2 5 5”\r\n#include <stdio.h>\r\n#define max 100\r\nmain()\r\n{\r\n  int f[max],i,j,k,m;\r\n  scanf(\"%d,%d\",&k,&m);\r\n  for(i=0;i<=________________;i++)f[i]=0;\r\n    f[________________]=1;\r\n  for(i=k;i<=m;i++)\r\n    for(j=i-k;j<=i-1;j++)f[i]________________f[j];\r\n      printf(\"%d%10d%10d\\n\",k,m,f[m]);\r\n}', '【1】 m\r\n【2】 k-1 或 k -1\r\n【3】 += 或 =1+', '多种答案', '4', '顺序结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('79', '功能：百马百担问题：有100匹马，驮100担货，大马驮三担，中\r\n      马驮2担，两匹小马驮一担，求大、中、小马各多少匹？\r\n#include <stdio.h>\r\nmain()\r\n{\r\n  int hb,hm,hl,n=0;\r\n   for(hb=0;hb<=100;hb+=________________)\r\n    for(hm=0;hm<=100-hb;hm+=________________)\r\n    {\r\n      hl=100-hb-________________;\r\n      if(hb/3+hm/2+2*________________==100)\r\n      {\r\n        n++;\r\n        printf(\"hb=%d,hm=%d,hl=%d\\n\",hb/3,hm/2,2*hl);\r\n      }\r\n    }\r\n  printf(\"n=%d\\n\",n);\r\n  getch();\r\n}', '1】 3\r\n【2】 2\r\n【3】 hm\r\n【4】 hl', '根据公式做', '4', '顺序结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('80', '功能：百鸡问题：100元买100只鸡，公鸡一只5元钱，母鸡一只3\r\n      元钱，小鸡一元钱三只，求100元钱能买公鸡、母鸡、小鸡\r\n      各多少只？\r\n#include <stdio.h>\r\nmain()\r\n{\r\n  int cocks,hens,chicks;\r\n  cocks=0;\r\n  while(cocks<=19)\r\n  {\r\n    ________________=0;\r\n\r\n    while(hens<=________________)\r\n    {\r\n      chicks=100.0-cocks-hens;\r\n      if(5.0*cocks+3.0*hens+chicks/3.0==100.0)\r\n         printf(\"%d,%d,%d\\n\",cocks,hens,chicks);\r\n   \r\n     ________________;\r\n    }\r\n    ________________;\r\n  } \r\n}', '【1】 hens\r\n【2】 33\r\n【3】 hens++ 或 ++hens 或 hens=hens+1\r\n【4】 cocks++ 或 ++cocks 或 cocks=cocks+1 或 cocks= cocks + 1', '根据公式做', '4', '顺序结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('81', '功能：输入一个学生的生日（年：y0、月：m0、日：d0），并输\r\n      入当前日期（年：y1、月：m1、日：d1）。求出该学生的\r\n      年龄（实足年龄）。\r\n#include <stdio.h>\r\nmain()\r\n{int age,y0,y1,m0,m1,d0,d1;\r\n printf(\"输入生日日期（年,月,日）\");\r\n ________________(\"%d,%d,%d\",&y0,&m0,&d0);\r\n printf(\"输入当前日期（年,月,日)\");\r\n scanf(\"%d,%d,%d\",&y1,&m1,&d1);\r\n age=y1-y0;\r\n if(m0________________m1)age--;\r\n if((m0________________m1)&&(d0>d1))age--;\r\n printf(\"age=%3d\",age);\r\n}', '【1】 scanf\r\n【2】 >\r\n【3】 ==', '输入输出的基本操作', '4', '顺序结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('82', '功能：从读入的整数数据中，统计大于零的整数个数和小于零的\r\n      整数个数。用输入零来结束输入，程序中用变量i统计大于\r\n      零的整数个数，用变量j统计小于零的整数个数。\r\n#include <stdio.h>\r\nmain()\r\n{\r\n  int k,n,i,j;\r\n  printf(\"Enter INT number,with 0 to end\\n\");\r\n  i=j=0;\r\n  scanf(\"%d\",&n);\r\n  while(n!=0)\r\n {\r\n   if(n>0)i=________________;\r\n   if(n<0)j=________________;\r\n   scanf(\"%d\",________________);\r\n }\r\n  printf(\"i=%4d\\n\",i,j);\r\n}', '【1】 i + 1\r\n【2】 j + 1\r\n【3】 &n', '基本操作', '3', '基本的输入/输出操作', '1');
INSERT INTO `tk_pgfillblank` VALUES ('83', '功能：计算一元二次方程的根。\r\n#include <stdio.h>\r\n#include ________________\r\nmain()\r\n{\r\n  float a,b,c,disc,x1,x2,realpart,imagpart;\r\n  scanf(\"%f%f%f\",&a,&b,&c);\r\n  printf(\"the equation\");\r\n   if(________________<=1e-6)\r\n    printf(\"is not quadratic\\n\");\r\n  else\r\n    disc=b*b-4*a*c;\r\n  if(fabs(disc)<=1e-6)\r\n    printf(\"has two equal roots:%-8.4f\\n\",-b/(2*a));\r\n    else if(________________)\r\n  {\r\n    x1=(-b+sqrt(disc))/(2*a);\r\n    x2=(-b-sqrt(disc))/(2*a);\r\n    printf(\"has distinct real roots:%8.4f and %.4f\\n\",x1,x2);\r\n  }\r\n  else\r\n  {\r\n    realpart=-b/(2*a);\r\n    imagpart=sqrt(-disc)/(2*a);\r\n    printf(\"has complex roots:\\n\");\r\n    printf(\"%8.4f=%.4fi\\n\",realpart,imagpart);\r\n    printf(\"%8.4f-%.4fi\\n\",realpart,imagpart);\r\n  }\r\n}', '【1】 <math.h>\r\n【2】 fabs(a)\r\n【3】 fabs(disc)  > 1e-6 或 1e-6 <fabs(disc)', '基本操作', '3', '基本的输入/输出操作', '3');
INSERT INTO `tk_pgfillblank` VALUES ('84', '功能：计算圆周率的近似值。\r\n#include <stdio.h>\r\n#include <math.h>\r\nmain()\r\n{\r\n  int s;\r\n   float n,________________;\r\n  double t;\r\n  t=1;pi=0;n=1;s=1;\r\n    while(________________>=2e-6)\r\n  {\r\n    pi+=t;n+=2;s=-s;t=s/n;\r\n  }\r\n  \r\n  pi*=________________;\r\n  printf(\"pi=%.6f\\n\",pi);\r\n}', '【1】 pi\r\n【2】 fabs(t)\r\n【3】 4', '基本操作', '3', '基本的输入/输出操作', '2');
INSERT INTO `tk_pgfillblank` VALUES ('85', '功能：计算平均成绩并统计90分以上人数。\r\nmain()\r\n{\r\n  int n,m;float grade,average;\r\n  average=n=m=________________;\r\n  while(1)\r\n  {\r\n   ________________(\"%f\",&grade);\r\n    if(grade<0) break;\r\n    n++;\r\n    average+=grade;\r\n    if(grade<90)________________;\r\n    m++;\r\n  }\r\n  if(n) printf(\"%.2f%d\\n\",average/n,m);\r\n}', '【1】 0\r\n【2】 scanf\r\n【3】 continue', '基础', '3', '基本的输入/输出操作', '2');
INSERT INTO `tk_pgfillblank` VALUES ('86', '功能：将字母转换成密码，转换规则是将当前字母变成其后的第\r\n      四个字母，但W变成A、X变成B、Y变成C、Z变成D。小写字\r\n      母的转换规则同样。\r\n#include <stdio.h>\r\nmain()\r\n{\r\n  char c;\r\n  while((c=________________)!=\'\\n\')\r\n  {\r\n    if((c>=\'a\'&&c<=\'z\')||(c>=\'A\'&&c<=\'Z\'))________________;\r\n    if((c>\'Z\'________________c<=\'Z\'+4)||c>\'z\') c-=26;\r\n    printf(\"%c\",c);\r\n  }\r\n}', '【1】 getchar()\r\n【2】 c+=4 或 c=c+4 或 c=4+c\r\n【3】 &&', 'getchar字符的输入', '5', '函数的定义与使用', '3');
INSERT INTO `tk_pgfillblank` VALUES ('87', '功能：要求输出如下结果：\r\n      b=-1  a=65535\r\n      a=65534\r\n      a=30 b=6 c=5\r\n      按要求在空中填入合适的变量完善程序。\r\nmain()\r\n{\r\n  int b=-1,________________;unsigned a;\r\n  a=________________;\r\n  printf(\"b=%d a=%u\\n\",b,a);\r\n  ________________+=b;\r\n  printf(\"a=%u\\n\",a);\r\n  b=(a=30)/________________;\r\n  printf(\"a=%d b=%d c=%d\\n\",a,b,c);\r\n}', '【1】 c\r\n【2】 b\r\n【3】 a\r\n【4】 (c=5)', '基操', '3', '基本的输入/输出操作', '1');
INSERT INTO `tk_pgfillblank` VALUES ('88', '功能：找出数组中最大值和此元素的下标，数组元素的值由键盘\r\n      输入。\r\n#include \"stdio.h\"\r\nvoid main()\r\n{\r\n  int a[10],*p,*s,i;\r\n  for(i=0;i<10;i++)\r\n     scanf(\"%d\", ________________);\r\n  for(p=a,s=a;________________<10;p++)\r\n    if(*p________________*s) s=p;\r\n  printf(\"max=%d,index=%d\\n\",________________,s-a);\r\n}', '【1】 a + i 或 &a[i]\r\n【2】 p-a 或 -a+p\r\n【3】 >\r\n【4】 *s', '注意下标', '6', '向函数传递二维数组', '3');
INSERT INTO `tk_pgfillblank` VALUES ('89', '#include \"stdio.h\"\r\nvoid main()\r\n{\r\n  int a,b,*p1,*p2;\r\n  p1=________________malloc(sizeof(int));\r\n  p2=(int*)malloc(sizeof(int));\r\n  scanf(\"%d%d\",________________,p2);\r\n  if(*p2>*p1) *p1=*p2;\r\n  free(p2);\r\n  printf(\"max=%d\\n\",________________);\r\n}', '【1】 (int *)\r\n【2】 p1\r\n【3】 *p1', '顺序结构', '4', '顺序结构', '1');
INSERT INTO `tk_pgfillblank` VALUES ('90', '功能：建立一个如下的二维数组，并按以下格式输出。\r\n1 0 0 0 1\r\n0 1 0 1 0\r\n0 0 1 0 0\r\n0 1 0 1 0\r\n1 0 0 0 1\r\n#include \"stdio.h\"\r\nvoid main()\r\n{\r\n int a[5][5]={0},*p[5],i,j;\r\n for(i=0;i<5;i++)\r\n    p[i]=________________;\r\n for(i=0;i<5;i++)\r\n {\r\n       *(________________+i)=1;\r\n      *(p[i]+5-(________________))=1;\r\n  }\r\n  for(i=0;i<5;i++)\r\n  {\r\n    for(j=0;j<5;j++)printf(\"%2d\",p[i][j]);\r\n      ________________;\r\n  }\r\n}', '【1】 &a[i][0]\r\n【2】 p[i]\r\n【3】 i+1 或 1+i\r\n【4】 putchar(\'\\n\');', '略', '6', '向函数传递二维数组', '3');
INSERT INTO `tk_pgfillblank` VALUES ('91', '功能：求出二维数组中的最大元素值。\r\n#include \"stdio.h\"\r\nvoid main()\r\n{\r\n  int a[3][4]={{1,3,5,7},{2,4,6,8},{15,17,34,12}};\r\n  printf(\"max value is %d\\n\",________________);\r\n}\r\n\r\nmax_value(m,n,array)\r\nint m,n,________________;\r\n{\r\n  int i,j,max;\r\n  max=array[0][0];\r\n  for(i=0;i<m;i++)\r\n    for(j=0;j<n;j++)\r\n      if(max<array[i][j])________________;\r\n  return(max);\r\n}', '【1】 max_value(3,4,a)\r\n【2】 array[][4] 或 array[3][4]\r\n【3】 max=array[i][j]', '略', '6', '向函数传递二维数组', '3');
INSERT INTO `tk_pgfillblank` VALUES ('92', '功能：1982年我国第三次人口普查，结果全国人口为10.3亿，假\r\n      如人口增长率为5%。编写一个程序求在公元多少年总人口\r\n      翻了一番。\r\n#include<stdio.h>\r\nvoid main()\r\n{\r\n  double p1=10.3,p2,r=0.05;\r\n  int n=1;\r\n   p2=p1*________________;  \r\n  while(p2<=________________) \r\n  {\r\n    n++;\r\n    p2=p2*________________;  \r\n  }\r\n  n=________________;  \r\n  printf(\"%d年人口总数翻了一番，即为%g亿人\\n\",n,p2);\r\n}', '【1】 (1+r) 或 (r+1)\r\n【2】 2*p1 或 p1*2\r\n【3】 (1+r) 或 (r+1)\r\n【4】 n+1982 或 1982+n', '循环的使用', '4', '循环结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('93', '功能：先将在字符串s中的字符按正序存放到t串中，然后把s中的\r\n      字符按逆序连接到t串的后面。\r\n#include <conio.h>\r\n#include <stdio.h>\r\n#include <string.h> \r\nvoid fun (char *s, char *t)\r\n{ \r\n  int i, sl;\r\n  sl = ________________;  \r\n  for(i=0; i<sl; i++)\r\n    t[i] = s[i];\r\n  for (i=0; i<sl; i++)\r\n    t[sl+i] = ________________; \r\n  t[sl+i]=________________; \r\n}\r\nmain()\r\n{\r\n  char s[100], t[100];\r\n  clrscr();\r\n  printf(\"\\nPlease enter string s:\"); ________________(\"%s\",s);\r\n  fun(s, t);\r\n  printf(\"The result is: %s\\n\", t);\r\n}', '【1】 strlen(s)\r\n【2】 s[sl-i-1] 或 s[ sl -i -1 ]\r\n【3】 \'\\0\' 或 0\r\n【4】 scanf', '结构体的应用', '8', '结构体类型与结构体变量', '3');
INSERT INTO `tk_pgfillblank` VALUES ('94', '功能：从低位开始取出长整型变量s中奇数位上的数，依次构成一\r\n      个新数放在t中。\r\n#include <conio.h>\r\n#include <stdio.h> \r\nvoid fun (long s, long *t)\r\n{\r\n  long sl=10;\r\n  s /= 10;\r\n  *t = s ________________ 10;\r\n  while(s>0)\r\n  { \r\n     s = ________________;\r\n        *t = s%10*sl________________;\r\n    sl = sl ________________10;\r\n  }\r\n}\r\n\r\nmain()\r\n{ long s, t;\r\nclrscr();\r\nprintf(\"\\nPlease enter s:\"); scanf(\"%ld\", &s);\r\nfun(s, &t);\r\nprintf(\"The result is: %ld\\n\", t);\r\n}', '【1】 %\r\n【2】 s/100\r\n【3】 + *t\r\n【4】 *', '结构体的应用', '8', '结构体类型与结构体变量', '3');
INSERT INTO `tk_pgfillblank` VALUES ('95', '功能：将长整型数中每一位上为奇数的数依次取出，构成一个新数\r\n      放在t中。高位仍在高位，低位仍在低位。\r\n#include <conio.h>\r\n#include <stdio.h> \r\n\r\nvoid fun (long s, long *t)\r\n{ \r\n  int d;\r\n  long sl=1;\r\n ________________ = 0;\r\n  while ( s > 0)\r\n  {\r\n    d = ________________;\r\n    if(d%2)\r\n    {   \r\n      *t = ________________ + *t;\r\n      sl ________________ 10;\r\n    }\r\n    s /= 10;\r\n  }\r\n}\r\n\r\nmain()\r\n{\r\n  long s, t;\r\n  clrscr();\r\n  printf(\"\\nPlease enter s:\"); scanf(\"%ld\", &s);\r\n  fun(s, &t);\r\n  printf(\"The result is: %ld\\n\", t);\r\n}', '【1】 *t\r\n【2】 s%10\r\n【3】 d * sl 或 sl * d\r\n【4】 *= 或 =s*', '结构体的应用', '8', '结构体类型与结构体变量', '3');
INSERT INTO `tk_pgfillblank` VALUES ('96', '功能：企业发放的奖金根据利润提成。利润(I)低于或等于10万元\r\n      时，奖金可提10%；利润高于10万元，低于20万元时，低于\r\n      10万元的部分按10%提成，高于10万元的部分，可可提成7.5%\r\n      ；20万到40万之间时，高于20万元的部分，可提成5%；40万\r\n      到60万之间时高于40万元的部分，可提成3%；60万到100万\r\n      之间时，高于60万元的部分，可提成1.5%，高于100万元时，\r\n      超过100万元的部分按1%提成，从键盘输入当月利润I，求\r\n      应发放奖金总数？\r\nmain()\r\n{\r\n  long int i;\r\n  int bonus1,bonus2,bonus4,bonus6,bonus10,bonus;\r\n  scanf(\"%ld\",&i);\r\n  bonus1=100000*0.1;bonus2=bonus1+100000*0.75;\r\n  bonus4=bonus2+200000*0.5;\r\n  bonus6=bonus4+200000*0.3;\r\n  bonus10=bonus6+400000*0.15;\r\n  if(i<=100000)\r\n    bonus=i*0.1;\r\n  else if(________________)                                \r\n    bonus=bonus1+(i-100000)*0.075;\r\n  else if(________________)                                \r\n    bonus=bonus2+(i-200000)*0.05;\r\n  else if(________________)                                \r\n    bonus=bonus4+(i-400000)*0.03;\r\n  else if(i<=1000000)\r\n    bonus=bonus6+(i-600000)*0.015;\r\n  else\r\n    bonus=bonus10+(i-1000000)*0.01;\r\n  ________________(\"bonus=%d\",bonus);\r\n}', '【1】 i<=200000	 或 200000>=i\r\n【2】 i<=600000 或 600000>=i\r\n【3】 i<=1000000 或 1000000>=i\r\n【4】 printf', '顺序结构', '4', '顺序结构', '4');
INSERT INTO `tk_pgfillblank` VALUES ('97', '功能：用指向指针的指针的方法对n个字符串排序并输出。\r\n#include \"string.h\"\r\n#define N 100\r\n\r\nvoid sort();\r\n\r\nmain()\r\n{\r\n  int i,n;\r\n  char **p,*str[N],name[N][20];\r\n  printf(\"n=\");scanf(\"%d\",&n);\r\n  if(n<2________________n>N) exit(0);\r\n  for(i=0;i<n;i++)str[i]=name[i];\r\n  printf(\"Input %d strings:\\n\",n);\r\n  for(i=0;i<n;i++)\r\n  {\r\n    printf(\"name[%d]=\",i);\r\n    scanf(\"%s\",________________);\r\n  }\r\n  printf(\"String arry:\\n\");\r\n  for(i=0;i<n;i++)\r\n  {\r\n    p=str+i;\r\n    printf(\"%s\\n\",*p);\r\n  }\r\n  p=str;\r\n  sort(p,n);\r\n  printf(\"String sort:\\n\");\r\n  for(i=0;i<n;i++)\r\n  {\r\n    p=str+i;\r\n    printf(\"%s\\n\",*p);\r\n  }\r\n  getch();\r\n}\r\nvoid sort(char ________________,int n)\r\n{\r\n  int i,j;\r\n  char *s;\r\n  for(i=0;i<n-1;i++)\r\n    for(j=i+1;j<n;j++)\r\n      if(strcmp(p[i],p[j])>0)\r\n      {\r\n        s=p[i];\r\n  \r\n        ________________;\r\n        p[j]=s;\r\n      }\r\n}', '【1】 ||\r\n【2】 str[i]\r\n【3】 **p\r\n【4】 p[i]=p[j]', '||的使用及注意下标', '7', '指针数组', '4');
INSERT INTO `tk_pgfillblank` VALUES ('98', '功能：编程求任意给定的n个数中的奇数的连乘积，偶数的平方和\r\n      以及0的个数，n通过scanf()函数输入。\r\nmain()\r\n{\r\n  int r=1,s=0,t=0,n,a,i;\r\n  printf(\"n=\");scanf(\"%d\",&n);\r\n  for(i=1;i<=n;i++)\r\n  {\r\n    printf(\"a=\");\r\n    scanf(\"%d\",________________);\r\n    if(________________!=0)\r\n      ________________=a;\r\n    else if(a!=0)\r\n      s+=________________;\r\n    else\r\n      t++;\r\n  }\r\n  printf(\"r=%d,s=%d,t=%d\\n\",r,s,t);\r\n}', '【1】 &a\r\n【2】 a%2\r\n【3】 r*\r\n【4】 a*a', 'if的使用', '4', '选择结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('99', '功能：编程求某年第n天的日期。用数组表示月天数。\r\nmain()\r\n{\r\n  int y,m,f,n;\r\n  int a[12]={31,28,31,30,31,30,31,31,30,31,30,31};\r\n  printf(\"y,n=\");\r\n  scanf(\"%d,%d\",&y,&n);\r\n  f=y%4==0&&y%100!=0________________y%400==0;\r\n  a[1]________________f;\r\n  if(n<1||n>365+f)\r\n  {\r\n    printf(\"error!\\n\");exit(0);\r\n  }\r\n   for(m=1;m________________a[m-1];n-=a[m-1],m++);\r\n    printf(\"y=%d,m=%d,d=%d\\n\",y,m,n);\r\n}', '【1】 ||\r\n【2】 += 或 =a+\r\n【3】 >', '顺序填写', '4', '顺序结构', '1');
INSERT INTO `tk_pgfillblank` VALUES ('100', '功能：已知一个数列，它的头两项分别是0和1，从第三项开始以\r\n      后的每项都是其前两项之和。编程打印此数，直到某项的\r\n      值超过200为止。\r\nmain()\r\n{\r\n  int i,f1=0,f2=1;\r\n    for(________________;;i++)\r\n  {\r\n    printf(\"5%d\",f1);\r\n    if(f1>________________) break;\r\n    printf(\"5%d\",f2);\r\n    if(f2>200) break;\r\n    if(i%2==0) printf(\"\\n\");\r\n    f1+=f2;\r\n        f2+=________________;\r\n  }\r\n  printf(\"\\n\");\r\n}', '【1】 i=1\r\n【2】 200\r\n【3】 f1', '顺序填写', '4', '顺序结构', '1');
INSERT INTO `tk_pgfillblank` VALUES ('101', '功能：已知X、Y、Z分别表示0~9中不同的数字，编程求出使算式\r\n      XXXX+YYYY+ZZZZ=YXXXZ成立时X、Y、Z的值，并要求打印该\r\n      算式。\r\nmain()\r\n{\r\n  int x,y,z;\r\n  for(x=0;________________;x++)\r\n    for(y=0;y<10;y++)\r\n    {\r\n      if(y==x) continue;\r\n      for(z=0;z<10;z++)\r\n      {\r\n      if(z==x________________z==y) continue;\r\n      if(1111*(x+y+z)==________________+1110*x+z)\r\n      {\r\n        printf(\"x=%d,y=%d,z=%d\\n\",x,y,z);\r\n        printf(\"%d+%d+%d=%d\\n\",1111*x,1111*y,1111*z,________________);\r\n        exit(0);\r\n      }\r\n    }\r\n  }\r\n}', '【1】 x<10 或 10>x\r\n【2】 ||\r\n【3】 10000*y 或 y*10000\r\n【4】 10000*y+1110*x+z 或 10000 * y + 1110 * x + z', '顺序填写', '4', '顺序结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('102', '功能：算式：？2*7？=3848中缺少一个十位数和一个个位数。编\r\n      程求出使该算式成立时的这两个数，并输出正确的算式。\r\nmain()\r\n{\r\n  int x,y;\r\n  for(x=1;________________;x++)\r\n    for(________________;y<10;y++)\r\n      if(________________==3848)\r\n      {\r\n        printf(\"%d*%d=3848\\n\",________________);\r\n        exit(0);\r\n      }\r\n}', '【1】 x<10 或 10>x 或 x<=9 或 9>=x\r\n【2】 y=0\r\n【3】 (10*x+2)*(70+y) 或 ( 10 * x + 2 ) * ( 70 + y )\r\n【4】 10*x+2,70+y 或 10 * x + 2 , 70 + y', '循环的使用', '4', '循环结构', '4');
INSERT INTO `tk_pgfillblank` VALUES ('103', '功能：一个40磅重的板碎成4块，每块正好是一个整数磅，且用这\r\n      4块当砝码能称出1~40磅的整数重量的物体。编程求这4块\r\n      的各自重量。\r\nmain()\r\n{\r\n  int i,j,k,l,p,t1,t2,t3,t4;\r\n  for(i=1;i<38;i++)\r\n    for(________________;j<38-i;j++)\r\n      for(k=j;k<________________;k++)\r\n      {\r\n        l=40-i-j-k;\r\n        for(p=1;p<40;p++)\r\n        {\r\n          for(t1=-1;t1<2;t1++)\r\n            for(t2=-1;t2<2;t2++)\r\n              for(t3=-1;t3<2;t3++)\r\n                for(t4=-1;t4<2;t4++)\r\n                  if(________________==p) goto next;\r\n          break;\r\n          next:if(p==________________)\r\n               {\r\n                  printf(\"%d,%d,%d,%d\\n\",i,j,k,l);\r\n                  exit(0);\r\n               }\r\n      }\r\n  }\r\n  printf(\"error.\");\r\n}', '【1】 j=i\r\n【2】 39-i-j 或 39 -i -j\r\n【3】 i*t1+j*t2+k*t3+l*t4 或 i * t1 + j * t2 + k * t3 + l * t4\r\n【4】 39', '循环的使用', '4', '循环结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('104', '功能：编程求任意给两个日期（Y0年M0月DO日和Y1年M1月D1日）\r\n      相差的天数。\r\nmain()\r\n{\r\n  int y1,m1,d1,y2,m2,d2,n,i;\r\n  printf(\"y1,m1,d1=\");\r\n  scanf(\"%d,%d,%d\",&y1,&m1,&d1);\r\n  if(m1<1||m1>12||d1<1||d1>________________) exit(0);\r\n  printf(\"y2,m2,d2=\");scanf(\"%d,%d,%d\",&y2,&m2,&d2);\r\n  if(m2<1||m2>12||d2<1||d2>________________) exit(0);\r\n  if(y1>y2||y1==y2&&m1>m2||y1==y2&&m1==m2&&d1>d2)\r\n  {\r\n    n=y1;\r\n    y1=y2;\r\n    y2=n;\r\n    n=m1;\r\n    m1=m2;\r\n    m2=n;\r\n    n=d1;\r\n    d1=d2;\r\n    d2=n;\r\n  }\r\n  else\r\n  {\r\n        n=yend(y1,m1,d1)+________________;\r\n    for(i=________________;i<y2;i++) n+=365+f(i);\r\n  }\r\n  printf(\"%d.%d.%d--->%d.%d.%d:n=%d\\n\",y1,m1,d1,y2,m2,d2,n);\r\n}\r\n\r\nint f(int y)\r\n{\r\n  return(y%4==0&&y%100!=0||y%400==0);\r\n}\r\n\r\nint mday(int y,int m)\r\n{\r\n  return(31-((m==4)+(m==6)+(m==9)+(m==11))-(3-f(y))*(m==2));\r\n}\r\n\r\nint yday(int y,int m,int d)\r\n{\r\n  return(d+31*((m>1)+(m>3)+(m>5)+(m>7)+(m>8)+(m>10))+30*((m>4)+(m>6)+(m>9)+(m>11))+(28+f(y))*(m>2));\r\n}\r\n\r\nint yend(int y,int m,int d)\r\n{\r\n  return(365+f(y)-yday(y,m,d));\r\n}', '【1】 mday(y1,m1)\r\n【2】 mday(y2,m2)\r\n【3】 yday(y2,m2,d2)\r\n【4】 y1+1 或 1+y1', '基础', '8', '结构体类型与结构体变量', '4');
INSERT INTO `tk_pgfillblank` VALUES ('105', '功能：从键盘输入若干行字符，输入后把他们存储到一磁盘文件\r\n      中。在从该文件中读出这些数据，将其中的小写字母转换\r\n      成大写字母后在屏幕上输出。\r\n#include \"stdio.h\"\r\n#define N 100\r\n\r\nmain()\r\n{\r\n  FILE *fp;\r\n  char c,*p,s[N][20];\r\n  int i,n;\r\n  printf(\"n=\");scanf(\"%d\",&n);\r\n  if(n<1________________n>N) exit(0);\r\n  printf(\"Input%d string:\\n\",n);\r\n  for(i=0;i<n;i++) \r\n    scanf(\"%s\",s[i]);\r\n  fp=fopen(\"text\",________________);\r\n  for(i=0;i<n;i++)\r\n  {\r\n    p=s[i];\r\n    while(*p!=\'\\0\')\r\n      if(!ferror(fp)) fputc(________________,fp);\r\n  }\r\n  fclose(fp);\r\n  printf(\"\\n\");\r\n  fp=fopen(\"text\",________________);\r\n  while((c=fgetc(fp))!=EOF)\r\n  {\r\n    if(c>\'a\'&&c<=\'z\')c-+32;\r\n    putchar(c);\r\n  }\r\n  printf(\"\\n\");\r\n  fclose(fp);\r\n}', '【1】 ||\r\n【2】 \"w\"\r\n【3】 *p++\r\n【4】 \"r\"', '基本', '3', '基本的输入/输出操作', '2');
INSERT INTO `tk_pgfillblank` VALUES ('106', '功能：三角形的面积为：area=sqrt(s*(s-a)*(s-b)*(s-c)).其中\r\n      ，s=(a+b+c)/2,a、b、c为三角形三条边的长。定义两个带\r\n      参数的宏，一个用来求s，另一个用来求area。编写程序，\r\n      在程序中用带参数的宏求面积area。\r\n#include \"math.h\"\r\n\r\n#________________ S(x,y,z)(x+y+z)/2\r\n#define AREA(s,x,y,z)sqrt(s*(s-x)*(s-y)*(s-z))\r\nmain()\r\n{\r\n  float a,b,c,s,area;\r\n  printf(\"a,b,c=\");\r\n  scanf(\"%f,%f,%f\",&a,________________,&c);\r\n  if(a+b>c&&b+c>a&&c+a>b)\r\n  {\r\n      s=________________;\r\n    area=________________;\r\n    printf(\"area=%f\\n\",area);\r\n  }\r\n}', '【1】 define\r\n【2】 &b\r\n【3】 S(a,b,c)\r\n【4】 AREA(s,a,b,c)', '选择结构的使用', '4', '选择结构', '3');
INSERT INTO `tk_pgfillblank` VALUES ('107', '功能：要求输出结果为3。\r\n#include <stdio.h>\r\n\r\nmain() \r\n{\r\n  int m=1,n=1,________________;\r\n  s=akm(m,n);\r\n  printf(\"%d\",s); \r\n} \r\n\r\nakm(________________,int n)\r\n{ \r\n  if(m==0) \r\n   ________________ n+1;\r\n  else if(m!=0&&n==0) \r\n    akm(m-1,1); \r\n  else if(m!=0&&n!=0) \r\n    akm(m-1,akm(m,n-1)); \r\n}', '【1】 s\r\n【2】 int m\r\n【3】 return', '基础', '3', '基本的输入/输出操作', '1');
INSERT INTO `tk_pgfillblank` VALUES ('108', '功能：利用指向结构的指针编写求某年、某月、某日是第\r\n      几天的程序，其中年、月、日和年天数用结构表示。\r\nmain()\r\n{\r\n ________________ date\r\n {\r\n    int y,m,d,n;\r\n  }________________;\r\n \r\n  int k,f,a[12]={31,28,31,30,31,30,31,31,30,31,30,31};\r\n  printf(\"date:y,m,d=\");\r\n  scanf(\"%d,%d,%d\",&x.y,&x.m,&x.d);\r\n  f=x.y%4==0&&x.y%100!=0||x.y%400==0;\r\n  a[1]+=________________;\r\n  if(x.m<1||x.m>12||x.d<1||x.d>a[x.m-1]) exit(0);\r\n  for(x.n=x.d,k=0;k<x.m-1;k++)x.n+=a[k];\r\n    printf(\"n=%d\\n\",________________);\r\n}', '【1】 struct\r\n【2】 x\r\n【3】 f\r\n【4】 x.n', 'struct的使用', '3', '表达式语句', '2');
INSERT INTO `tk_pgfillblank` VALUES ('109', '功能：定义一个结构变量（包括年、月、日）计算给定日\r\n      期是该年的第几天。\r\nmain()\r\n{\r\n  ________________ date\r\n  {\r\n     int y,m,d;\r\n  }da;\r\n  \r\n  int f,n,p,a[12]={31,28,31,30,31,30,31,31,30,31,30,31};\r\n  printf(\"y,m,d=\");\r\n  scanf(\"%d,%d,%d\",&da.y,&da.m,&da.d);\r\n  f=da.y%4==0&&da.y%100________________0||da.y%400==0;\r\n  if(da.m<1________________da.d>12) exit(0);\r\n  a[11]+=f;\r\n  if(da.d<1||da.d>a[da.m-1]) exit(0);\r\n  for(n=________________,p=1;p<da.m;p++)n+=a[p-1];\r\n    printf(\"n=%d\\n\",n);\r\n}', '【1】 struct\r\n【2】 !=\r\n【3】 ||\r\n【4】 da.d', '循环的使用', '4', '循环结构', '2');
INSERT INTO `tk_pgfillblank` VALUES ('110', '功能：用等分法在有序的循环数组中，找到最小元素的位置。\r\nint  cyclic_min(int  x[], int n)\r\n{\r\n  int  left  = 0;\r\n  int  right = n - 1;\r\n  int  mid;\r\n  while (________________) \r\n  {                        \r\n    mid = (left + right)/2;\r\n    if (x[mid] < x[right])\r\n       ________________;                        \r\n    else\r\n      ________________;                        \r\n  }\r\n  return left;\r\n}\r\n\r\n#include  <stdio.h>\r\nvoid  main(void)\r\n{\r\n     int  x[] = { 20, 23, 28, 35, 39, 40, 42, 8, 10, 15, 17, 19};\r\n     int  n   = sizeof(x)/sizeof(int);\r\n     int  loc, i;\r\n\r\n     printf(\"\\nFind Cyclic Minimum\");\r\n     printf(\"\\n===================\");\r\n     printf(\"\\n\\nGiven Array Sorted in Cyclic Fashion :\\n\");\r\n     for (i = 0; i < n; i++)\r\n          printf(\"%3d\", x[i]);\r\n     loc = cyclic_min(x, n);\r\n     printf(\"\\n\\nMinimum is located at x[%d] = %d\", loc, x[loc]);\r\n}', '【1】 left < right 或 right>left\r\n【2】 right = mid\r\n【3】 left  = mid + 1 或 left  = 1+mid', '循环的使用', '4', '循环结构', '4');
INSERT INTO `tk_pgfillblank` VALUES ('111', '功能：在歌星大奖赛中，有10个评委为参赛的选手打分，分数为\r\n      1~100分。选手最后得分为：去掉一个最高分和一个最低分\r\n      后其余8个分数的平均值。请编写一个程序实现。\r\n\r\n#include<stdio.h>\r\n\r\nvoid main()\r\n{\r\n  int score,i,max,min,sum;\r\n  max=-32768;                  \r\n  min=32767;                   \r\n  sum=0;\r\n  for(i=1;i<=10;i++)\r\n  {\r\n    printf(\"Input number %d=\",i);\r\n     scanf(\"%d\",________________);                        \r\n    sum+=score;\r\n    if(________________) max=score;                        \r\n    if(________________)  min=score;                        \r\n  }\r\n  printf(\"Canceled max score:%d\\nCanceled min score:%d\\n\",max,min);\r\n  printf(\"Average score:%d\\n\",________________);                \r\n}', '【1】 &score\r\n【2】 score>max 或 max<score\r\n【3】 score<min 或 min>score\r\n【4】 (sum-max-min)/8 或 (sum -max - min )/8', '循环的使用', '4', '循环结构', '4');
INSERT INTO `tk_pgfillblank` VALUES ('112', '功能：从键盘输入一个字符串，将小写字母全部转换成大写字母，\r\n      然后输出到一个磁盘文件“test”中保存。输入的字符串\r\n      以！结束。\r\n#include \"stdio.h\"\r\n\r\nmain()\r\n{\r\n  FILE *fp;\r\n  char str[100],filename[10];\r\n  int i=0;\r\n  if((fp=fopen(\"test\",\"w\"))==NULL)\r\n  {\r\n    printf(\"cannot open the file\\n\");\r\n    exit(0);\r\n  }\r\n  printf(\"please input a string:\\n\");\r\n  gets(str);\r\n  while(________________)                                \r\n  {\r\n    if(str[i]>=\'a\'&&str[i]<=\'z\')\r\n    ________________;                                \r\n    fputc(str[i],fp);\r\n    i++;\r\n  }\r\n  fclose(fp);\r\n  fp=fopen(\"test\",________________);                        \r\n  fgets(str,strlen(str)+1,fp);\r\n  printf(\"%s\\n\",str);\r\n  fclose(fp);\r\n}', '【1】 str[i] != \'!\'\r\n【2】 str[i]=str[i]-32 或 str[i]= str[i] -32\r\n【3】 \"r\" 或 \"wr\" 或 \"wr+\"', '基本输入', '3', '基本的输入/输出操作', '3');
INSERT INTO `tk_pgfillblank` VALUES ('113', '功能：把字符串中所有的字母改写成该字母的下一个字母，最后\r\n      一个字母z改写成字母a。大字母仍为大写字母，小写字母\r\n      仍为小写字母，其它的字符不变。\r\n例如：原有的字符串为：“Mn.123xyZ”，调用该函数后，串中的\r\n      内容为：“No.123yzA”。\r\n\r\n#include <string.h>\r\n#include <stdio.h>\r\n#include <ctype.h>\r\n#define   N   81\r\n\r\nmain( )\r\n{   \r\n  char   a[N],*s;\r\n  printf ( \"Enter a string :  \" );\r\n  gets ( a );\r\n  printf ( \"The original string is :  \" );\r\n  puts( a );\r\n  ________________;                                                \r\n  while(*s)\r\n  {\r\n    if(*s==\'z\')\r\n      *s=\'a\';\r\n    else if(*s==\'Z\')\r\n      *s=\'A\';\r\n    else if(isalpha(*s))      \r\n      ________________;                        \r\n      ________________;                                        \r\n  }\r\n  printf ( \"The string after modified :  \");\r\n  puts ( a );\r\n}', '【1】 s=a\r\n【2】 *s+=1 或 *s=*s+1 或 (*s)++ 或 ++(*s)\r\n【3】 s++ 或 s=s+1 或 ++s 或 s= s + 1', '字符的使用', '2', '数据类型', '3');
INSERT INTO `tk_pgfillblank` VALUES ('114', '功能：输入一正整数n、打印1-n能够组成的所有自然数集合\r\n     （包含空集）。\r\n\r\n#include  <stdio.h>\r\n#include  <stdlib.h>\r\n\r\n#define   MAXSIZE      20\r\n#define   LOOP          1\r\n\r\nvoid main(void)\r\n{\r\n  int  set[MAXSIZE];\r\n  int  n, i;\r\n  int  position;\r\n  char line[100];\r\n  printf(\"\\nAll Possible Subsets Generation by Lexical Order\");\r\n  printf(\"\\n\");\r\n  printf(\"\\n\\nNumber of Elements in the Set --> \");\r\n  gets(line);\r\n  n = atoi(line);\r\n  printf(\"\\n\");\r\n  position      = 0;\r\n  set[position] = 1;\r\n  while (LOOP) \r\n  {\r\n    printf(\"\\n{%d\", ________________);                        \r\n    for (i = 1; i <= position; i++)\r\n      printf(\",%d\", set[i]);\r\n    printf(\"}\");\r\n    if (set[position] < n) \r\n    {\r\n      set[________________] = set[position] + 1;        \r\n      position++;\r\n    }\r\n    else if (position != 0)\r\n      set[--position]++;\r\n    else\r\n      ________________;\r\n  }                                \r\n}', '【1】 set[0]\r\n【2】 position+1\r\n【3】 break', '数组的定义', '6', '数组的定义、引用和初始化', '3');
INSERT INTO `tk_pgfillblank` VALUES ('115', '这只是个样列', '你要相信我', null, '1', '数据类型', '1');

-- ----------------------------
-- Table structure for `tk_readpg`
-- ----------------------------
DROP TABLE IF EXISTS `tk_readpg`;
CREATE TABLE `tk_readpg` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '答题编号',
  `content` longtext NOT NULL COMMENT '试题内容',
  `answer` longtext COMMENT '考试试题答案',
  `analysis` longtext COMMENT '试卷编号',
  `chaptertwo` varchar(255) DEFAULT NULL,
  `chapter` varchar(255) DEFAULT NULL COMMENT '章节编号',
  `difficulty` varchar(255) DEFAULT NULL COMMENT '试题难度',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=205 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of tk_readpg
-- ----------------------------
INSERT INTO `tk_readpg` VALUES ('1', 'main()\r\n    	     { int x,y;\r\n    	       scanf(\"%2d%*2d%ld\",&x,&y);\r\n    	       printf(\"%d\\n\",x+y);\r\n              }\r\n执行时输入:1234567\r\n', '17', '顺序程序设计', '顺序结构', '4', '1');
INSERT INTO `tk_readpg` VALUES ('2', 'main()\r\n{ int x=4,y=0,z;\r\n  x*=3+2; \r\nprintf(\"%d\",x);\r\nx*=y=z=4; \r\nprintf(\"%d\",x);\r\n }\r\n', '2080', '顺序程序设计', '顺序结构', '4', '2');
INSERT INTO `tk_readpg` VALUES ('3', 'main()\r\n{ float x; int i;\r\n  x=3.6; i=(int)x;\r\n  printf(\"x=%f,i=%d\",x,i);\r\n}\r\n', 'X=3.600000,i=3', '顺序程序设计', '顺序结构', '4', '2');
INSERT INTO `tk_readpg` VALUES ('4', 'main()\r\n{ int a=2;\r\n  a%=4-1; printf(\"%d, \",a);\r\n  a+=a*=a-=a*=3; printf(\"%d\",a);\r\n}\r\n', '2,0', '顺序程序设计', '顺序结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('5', 'main()\r\n{ int x=02,y=3;\r\n  printf(\"x=%d,y=%%d\",x,y);\r\n}\r\n', 'X=2,y=%d', '顺序程序设计', '顺序结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('6', 'main()\r\n{ char c1=’6’,c2=’0’;\r\n  printf(\"%c,%c,%d,%d\\n\",c1,c2,c1-c2,c1+c2);\r\n}\r\n', '6,0,6,102', '顺序程序设计', '顺序结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('7', 'main()\r\n        { int x,y,z;\r\n          x=y=1; z=++x-1;\r\n          printf(\"%d,%d\\n\",x,z);\r\n          z+=y++;\r\n          printf(\"%d,%d\\n\",y,z);\r\n        }\r\n', '2,1;2,2\r\n', '顺序程序设计', '顺序结构', '4', '3');
INSERT INTO `tk_readpg` VALUES ('9', 'main()\r\n{ int x=4,y=0,z;\r\n  x*=3+2; \r\nprintf(\"%d\",x);\r\n  x*=(y==(z=4)); \r\nprintf(\"%d\",x);\r\n }\r\n', '200', '分支程序设计', '选择结构', '4', '1');
INSERT INTO `tk_readpg` VALUES ('10', 'main()\r\n{ int x,y,z;\r\n  x=3; y=z=4;\r\n  printf(\"%d\",(x>=z>=x)?1:0);\r\n  printf(\"%d\",z>=y && y>=x);\r\n}\r\n', '01', '分支程序设计', '选择结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('11', 'main()\r\n         { int x=1,y=1,z=10;\r\n           if(z<0)\r\nif(y>0) x=3;\r\nelse  x=5;\r\nprintf(\"%d\\t\",x);\r\nif(z=y<0) x=3;\r\nelse if(y==0) x=5;\r\nelse x=7;\r\nprintf(\"%d\\t\",x);\r\nprintf(\"%d\\t\",z);\r\n }\r\n', '4．	1	7	0', '分支程序设计', '选择结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('12', 'main()\r\n{ char x=‘B’;\r\n  switch(x)\r\n    { case ‘A’: printf(“It is A.”);\r\n      case ‘B’: printf(“It is B.”);\r\n      case ‘C’: printf(“It is C.”);\r\n      default: printf(“other.”);\r\n    }\r\n  }\r\n', '5．	It is B. It is C.other.', '分支程序设计', '选择结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('13', 'main()\r\n{ int x=1,y=0,a=0,b=0;\r\n  switch(x)\r\n    { case 1: switch(y)\r\n                 { case 0: a++;break;\r\n                   case 1: b++;break;\r\n                 }\r\ncase 2: a++;b++;break;\r\n      case 3: a++;b++;\r\n                 }\r\n                printf(\"a=%d,b=%d\\n\",a,b);\r\n              }\r\n', '6．	a=2,b=1', '分支程序设计', '选择结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('14', '1．	main()\r\n         { int num=0;\r\n           while(num<=2)\r\n{ num++; printf(\"%d\\n\",num);}\r\n          }\r\n', '1 2 3', '循环程序设计', '循环结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('15', '2．	main()\r\n         { int i=0,s=0;\r\n           do\r\n{ s+=i*2+1; printf(\"i=%d,s=%d\\n\",i,s); i++;}\r\nwhile(s<10);\r\n          }\r\n', '2．	i=0,s=1\r\ni=1,s=4\r\ni=2,s=9\r\ni=3,s=16\r\n', '循环程序设计', '循环结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('16', ' #include <stdio.h>\r\n  main()\r\n{ int i,m=1;\r\n  for(i=5;i>=1;i--)\r\n    {\r\nm=(m+1)*2;\r\nprintf(\"m=%d\\n\",m);\r\n    }\r\n  }\r\n', '3．	m=4\r\nm=10\r\nm=22\r\nm=46\r\nm=94\r\n', '循环程序设计', '循环结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('17', '4．	指出下面三个程序的功能，当输入为：\"quert?\"时，它们的执行结果是什么？\r\n⑴  #include <stdio.h>\r\n        main()\r\n          { char c;\r\n            c=getchar();\r\n            while (c!=\'?\')\r\n               {  putchar(c); c=getchar();}\r\n          }\r\n⑵  #include <stdio.h>\r\n        main()\r\n          { char c;\r\n            while ((c=getchar())!=\'?\')  putchar(++c);\r\n          }\r\n 	⑶  #include <stdio.h>\r\n        main()\r\n          { while (putchar(getchar())!=\'?\');\r\n          } \r\n', '4．	(1) quert\r\n(2) rvfsu\r\n(3) quert?\r\n', '循环程序设计', '循环结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('18', ' #include <stdio.h>\r\n  main()\r\n{ int i;\r\n  for(i=1;i<=5;i++)\r\n    { if(i%2)\r\n         putchar(‘<’);\r\n      else\r\n         continue;\r\n      putchar(‘>’);\r\n    }\r\n   putchar(‘#’);\r\n  }\r\n', '5．	<><><>#', '循环程序设计', '循环结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('19', '6．	main()\r\n         { int a,b;\r\n           for(a=1,b=1;a<=100;a++)\r\n{ if(b>10) break;\r\n  if(b%3==1)\r\n    { b+=3; continue;}\r\n}\r\n           printf(\"a=%d\\n\",a);\r\n         }\r\nmain()\r\n     		{ int i=1;\r\n        		  while (i<=15)\r\n          		if (++i%3!=2) continue;\r\n            		else printf(\"%d  \",i);\r\n        		  printf(\"\\n\");\r\n     		}\r\n', '6．	a=5', '循环程序设计', '循环结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('20', 'main()\r\n     		{ int i=1;\r\n        		  while (i<=15)\r\n          		if (++i%3!=2) continue;\r\n            		else printf(\"%d  \",i);\r\n        		  printf(\"\\n\");\r\n     		}\r\n', '7．	2  5  8  11  14', '循环程序设计', '循环结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('21', '#include <stdio.h>\r\n    void main()\r\n{ int i,j;\r\n  for(i=0;i<=3;i++)\r\n    { for(j=0;j<=i;j++)\r\n         printf(\"(%d,%d),\",i,j);\r\n       printf(\"\\n\");\r\n    }\r\n }\r\n', '8．	(0,0),\r\n(1,0),(1,1),\r\n(2,0),(2,1),(2,2),\r\n(3,0),(3,1),(3,2),(3,3),\r\n', '循环程序设计', '循环结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('22', 'main()\r\n     		{ int i,j,k;\r\n        		  char space=\' \';\r\n        		  for (i=0;i<=5;i++)\r\n        		     {  for (j=1;j<=i;j++)  printf(\"%c\",space);\r\n                    for (k=0;k<=5;k++)  printf(\"%c\",\'*\');\r\n                    printf(\"\\n\");\r\n        			}\r\n     		}\r\n', '	 ******\r\n******\r\n   ******\r\n******\r\n ******\r\n  ******\r\n', '循环程序设计', '循环结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('23', '#include <stdio.h>\r\n     	  main()\r\n     		{ int i,j,k=0;\r\n        		  for (j=11;j<=30;j++)\r\n        			{ if (k%10==0)  \r\nprintf(\"\\n\");\r\n            		  for (i=2;i<j;i++)\r\n              		{   if (!(j%i))   break;\r\n               			if (i>=j-1)\r\n          	       			{ printf(\"%d\\t\",j);k++;}\r\n               		}\r\n         		}\r\n      		 }\r\n', '11	13	17	19	23	29', '循环程序设计', '循环结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('24', '1．	#include <stdio.h>\r\nvoid main()\r\n{\r\n		int a[8]={1,0,1,0,1,0,1,0},i;\r\n		for(i=2;i<8;i++)\r\n			a[i]+= a[i-1] + a[i-2];\r\n		for(i=0;i<8;i++)\r\n			printf(“%5d”,a[i]);\r\n}\r\n', '1    0    2    2    5    7   13   20', '数组', '数组类型的应用场合', '6', '5');
INSERT INTO `tk_readpg` VALUES ('25', '2．	#include <stdio.h>\r\nvoid main()\r\n{\r\nfloat b[6]={1.1,2.2,3.3,4.4,5.5,6.6},t;\r\nint i;\r\nt=b[0];\r\nfor(i=0;i<5;i++)\r\nb[i]=b[i+1];\r\nb[5]=t;\r\nfor(i=0;i<6;i++)\r\n		printf(“%6.2f”,b[i]);\r\n		}       \r\n', '2.20  3.30  4.40  5.50  6.60  1.10', '数组', '数组类型的应用场合', '6', '5');
INSERT INTO `tk_readpg` VALUES ('26', '3．	#include <stdio.h>\r\nvoid main()\r\n       {    int p[7]={11,13,14,15,16,17,18},i=0,k=0;\r\nwhile(i<7 && p[i]%2)\r\n{ k=k+p[i]; i++;}\r\nprintf(\"k=%d\\n\",k);\r\n        }\r\n', '3．	k=24', '数组', '数组类型的应用场合', '6', '5');
INSERT INTO `tk_readpg` VALUES ('27', 'void main()\r\n        {   int a[3][3]={1,3,5,7,9,11,13,15,17};\r\n            int sum=0,i,j;\r\n            for (i=0;i<3;i++)\r\n               for (j=0;j<3;j++)\r\n               {  a[i][j]=i+j;\r\n                  if (i==j) \r\nsum=sum+a[i][j];\r\n                }\r\n            printf(\"sum=%d\",sum);\r\n        }         \r\n', '4．	sum=6', '数组', '数组类型的应用场合', '6', '5');
INSERT INTO `tk_readpg` VALUES ('28', '5．	void  main()\r\n       {   int a[4][4],i,j,k;\r\n           for (i=0;i<4;i++)\r\n              for (j=0;j<4;j++)\r\n                 a[i][j]=i-j;\r\n           for (i=0;i<4;i++)\r\n           {  for (j=0;j<=i;j++)\r\n                  printf(\"%4d\",a[i][j]);\r\n               printf(\"\\n\");\r\n            }\r\n        } \r\n', '0\r\n       1   0\r\n       2   1   0\r\n       3   2   1   0\r\n', '数组', '数组类型的应用场合', '6', '5');
INSERT INTO `tk_readpg` VALUES ('29', '#include <stdio.h>\r\n         main()\r\n          { int i,s;\r\n            char s1[100],s2[100];\r\n            printf(\"input string1:\\n\");  gets(s1);\r\n            printf(\"input string2:\\n\");  gets(s2);\r\n            i=0;\r\n            while ((s1[i]==s2[i])&&(s1[i]!=\'\\0\'))\r\n                i++;\r\n            if ((s1[i]==\'\\0\')&&(s2[i]==\'\\0\')) s=0;\r\n            else s=s1[i]-s2[i];\r\n            printf(\"%d\\n\",s);\r\n          }\r\n    输入数据   aid\r\nand　　\r\n', '6．	-5', '数组', '数组类型的应用场合', '6', '5');
INSERT INTO `tk_readpg` VALUES ('30', '7．	void main()\r\n{\r\n			char ch[3][5]={ \"AAAA\",\"BBB\",\"CC\"};\r\nprintf(\"\\\"%s\\\"\\n\",ch[1]);\r\n}\r\n8．	#inlcude <stdio.h>\r\n#include <string.h>\r\nvoid main()\r\n{\r\n		char str[10][80],c[80];\r\n		int i;\r\n		for(i=0;i<10;i++)\r\n			gets(str[i]);\r\n		strcpy(c,str[0]);\r\n		for(i=1;i<10;i++)\r\n			if(strlen(c)<strlen(str[i]))\r\n				strcpy(c,str[i]);\r\n		puts(c);\r\n	}\r\n', '7．	“BBB”', '数组', '数组类型的应用场合', '6', '5');
INSERT INTO `tk_readpg` VALUES ('31', '8．	#inlcude <stdio.h>\r\n#include <string.h>\r\nvoid main()\r\n{\r\n		char str[10][80],c[80];\r\n		int i;\r\n		for(i=0;i<10;i++)\r\n			gets(str[i]);\r\n		strcpy(c,str[0]);\r\n		for(i=1;i<10;i++)\r\n			if(strlen(c)<strlen(str[i]))\r\n				strcpy(c,str[i]);\r\n		puts(c);\r\n	}\r\n', '8．	没有输入数据', '数组', '数组类型的应用场合', '6', '5');
INSERT INTO `tk_readpg` VALUES ('32', '1．	fun1(int a,int b)\r\n         { int c;\r\n           a+=a; b+=b; c=fun2(a,b);\r\n           return  c*c;\r\n         }\r\nfun2(int a,int b)\r\n  { int c;\r\n    c=a*b%3;\r\n    return  c;\r\n  }\r\nmain()\r\n  { int x=11,y=19;\r\n    printf(\"The final result is:%d\\n\",fun1(x,y));\r\n  }\r\n', '1．	The final result is:4', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('33', '2．	int x;\r\nmain()\r\n  { x=5;\r\n    cude();\r\n    printf(\"%d\\n\",x);\r\n  }\r\ncude()\r\n  { x=x*x*x; }\r\n', '125', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('34', '3．	#include <stdio.h>\r\n 	   long fun(int n)\r\n{ long s;\r\nif(n==1||n==2)  \r\ns=2;\r\nelse   \r\ns=n+fun(n-1);\r\nreturn s;\r\n}\r\n	    main()\r\n          { printf(\"%ld\\n\",fun(4)); \r\n}\r\n', '9', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('35', 'main()\r\n          { int i;\r\nfor(i=0;i<2;i++)\r\n   add();\r\n          }\r\n        add()\r\n          { int x=0;\r\nstatic int y=0;\r\nprintf(\"%d,%d\\n\",x,y);\r\nx++; y=y+2;\r\n          }\r\n', '0,0  0,2', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('36', 'main()\r\n          { int k=4,m=1,p;\r\np=func(k,m); printf(\"%d, \",p);\r\np=func(k,m); printf(\"%d\\n\",p);\r\n          }\r\n        func(int a,int b)\r\n          { static int m=0,i=2;\r\ni+=m+1; m=i+a+b;\r\nreturn  m;\r\n          }\r\n', '8,17', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('37', 'int t(int x,int y,int cp,int dp)\r\n{ cp=x*x+y*y；\r\ndp=x*x-y*y；\r\n} \r\nmain()\r\n{ int a=4，b=3，c=5，d=6；\r\nt(a,b,c,d)；\r\nprintf(＂％d％d\\n＂,c,d)；\r\n}\r\n', '5 6', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('38', 'fun(int x,int y,int z)\r\n{z=x*x+y*y；}\r\nmain()\r\n{  int a=31；\r\nfun(5，2,a)；\r\nprintf(＂％d＂，a)；\r\n}\r\n', '31', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('39', 'int a，b；\r\nvoid fun()\r\n{ a=100；b=200； }\r\nmain()\r\n{ int a=5，b=7；\r\nfun()；\r\nprintf(＂％d％d＼n＂，a，b)；\r\n}\r\n', '57', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('40', 'int x=3；\r\nmain()\r\n{int i；\r\nfor(i=1；i<x；i++) incre()；\r\n}\r\nincre()\r\n{static int x=1；\r\nx*=x+l；\r\nprintf(＂％d＂，x)；\r\n}\r\n', '2 6', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('41', 'int func(int a，intb)\r\n{ return(a+b)； }\r\nmain()\r\n{int x=2，y=5，z=8，r；\r\nr=func(func(x,y)，z)；\r\nprintf(＂％d＼n＂，r)；\r\n}\r\n', '15', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('42', 'long fib(int n)\r\n{ if(n>2)return(fib(n-1)+fib(n-2))； \r\nelse return(2)；\r\n}\r\nmain()\r\n{ printf(＂％ld\\n＂,fib(3)}；}\r\n', '4', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('43', '#include <stdio.h>\r\nvoid main( )\r\n{   \r\nint x,y,t;\r\nx=7;y=9;\r\nif(x<y)\r\n{ t=x;x=y;y=t;}\r\nprintf(\"%d,%d\\n\" , x,y );\r\n\r\n}\r\n', '9，7', '选择结构', '选择结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('44', '#include <stdio.h>\r\nvoid main( )\r\n{  \r\n	int x=1,a=2,b=3;\r\n    switch(x)\r\n	{    \r\n		case  1:  a--; break;\r\n    	case  2:  b++; break;\r\n    	case  3:  a++;b++;\r\n    }\r\n    	printf(\"\\na=%d,b=%d\\n\",a,b);\r\n}\r\n', 'a=1,b=3', '选择结构', '选择结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('45', '#include <stdio.h>\r\nvoid main( )\r\n{\r\n    char ch1 = \'E\';\r\n    if(ch1 >= \'A\')\r\n       ch1++;\r\n    else\r\n       ch1+=32;\r\n    printf(\"ch1 = %c\\n\", ch1);\r\n}\r\n', 'ch1= F', '选择结构', '选择结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('46', '#include <stdio.h>\r\nvoid main( )\r\n{   \r\nint x,y,t;\r\nx=5;y=3;\r\nif(x>y)\r\n{ t=x;x=y;y=t;}\r\nprintf(\"%d,%d\\n\" , x,y );\r\n\r\n}\r\n', '3，5', '选择结构', '选择结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('47', '#include <stdio.h>\r\nint main()\r\n{\r\n	int a,b,c,m;\r\n	printf(\"Enter three integers:\");\r\n	scanf(\"%d%d%d\",&a,&b,&c);\r\n	if(a<=b)\r\n		m=a;\r\n	else\r\n		m=b;\r\n	if(c<m)\r\n		m=c;\r\n	printf(\"m=%d\\n\",m);\r\n	return 0;\r\n}\r\n输入：21 22 23<回车>\r\n', 'm=21', '选择结构', '选择结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('48', '#include <stdio.h>\r\nint main()\r\n{\r\n	char ch1=\'a\',ch2=\'B\',ch3=\'E\';\r\n	if(ch1>ch2)\r\n		if(ch2>ch3)\r\n			ch3++;\r\n		else\r\n			--ch3;\r\n	printf(\"ch3=%c\\n\",ch3);\r\n	return 0;\r\n}\r\n', 'ch3=D', '选择结构', '选择结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('49', '#include <stdio.h>\r\nint main()\r\n{\r\n	float x,y;\r\n	scanf(\"%f\",&x);\r\n	switch((int)x/10)\r\n	{\r\n		case 0: y=1.0;\r\n			printf(\"y=%f\\n\",y);break;\r\n		case 1: y=2*x+1;\r\n			printf(\"y=%f\\n\",y);break;\r\n		case 2: y=3*x*x+2;\r\n			printf(\"y=%f\\n\",y);break;\r\n		default:\r\n			printf(\"No definition.\\n\");\r\n	  }\r\n	return 0;\r\n}\r\n', 'y=31.600000', '选择结构', '选择结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('50', '#include <stdio.h>\r\nint main()\r\n{\r\n	char ch1=\'A\',ch2=\'B\';\r\n	switch(ch1)\r\n	{\r\n		case \'A\':\r\n			switch(ch2)\r\n			{\r\n				case \'B\': printf(\"Good!\\n\");break;\r\n				case \'A\': printf(\"Better!\\n\");break;\r\n			}\r\n		case \'B\': printf(\"Best!\\n\"); break;\r\n	}\r\n	return 0;\r\n}\r\n', 'Good!\r\nBest!\r\n', '选择结构', '选择结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('51', '#include <stdio.h>\r\nvoid main()\r\n{   \r\nfloat score;\r\nscore = 100;\r\nif (score<60)   printf(\"E\\n\");\r\n    else\r\n    switch( ( int ) score / 10 )\r\n    {   case 10:                         \r\n        case 9: printf(\"A\\n\");  \r\n        case 8: printf(\"B\\n\");  \r\n        case 7: printf(\"C\\n\");  break;        \r\n        case 6: printf(\"D\\n\");  break;\r\n        default: printf(\"Error\\n\");\r\n    }\r\n}\r\n', 'A B C', '选择结构', '选择结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('52', '#include <stdio.h>\r\nvoid main()\r\n{\r\nint i=0，a=2；\r\nif(i==0)\r\nprintf(“**”)；\r\nelse\r\nprintf(“$$”)；\r\nprintf(“*”)；\r\n}\r\n', '***', '选择结构', '选择结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('53', '#include<stdio.h> \r\nvoid main()\r\n{\r\nint m=10,n=0,p=4,q=20;\r\nif (m) \r\nif (n) \r\nq=15-m;\r\nelse \r\nq=25+m;\r\nelse if (p)\r\n  		q=q+p;\r\nprintf(“q=%d\\n”,q);\r\n}  	\r\n', 'q=35', '选择结构', '选择结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('54', '#include<stdio.h>\r\nvoid main()\r\n{\r\nint a=1,b=0;\r\nswitch(a)\r\n{\r\ncase 1: switch (b)\r\n{\r\ncase 0: printf(“**0**”); break;\r\n         	case 1:printf(“**1**”);break;\r\n}\r\ncase 2: printf(“**2**”);break;\r\n}\r\n}\r\n', '**0****2**', '选择结构', '选择结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('55', '#include<stdio.h>\r\nint main( )\r\n{   \r\nint a=2,b=7,c=5;\r\n    switch (a>0){\r\n        case 1: switch (b<0){\r\n            case 1: printf(\"@\"); break ;\r\n            case 2: printf(\"!\"); break ;\r\n        }\r\n        case 0: switch (c==5){\r\n            case 1: printf(\"*\") ; break ;\r\n            default : printf(\"#\") ; break ;\r\n        }\r\n        default : printf(\"&\");\r\n    }\r\n    printf(\"\\n\");\r\n    return 0;\r\n}\r\n', '*&', '选择结构', '选择结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('56', '#include<stdio.h>\r\nint main()\r\n{   \r\nint a=0,b=1,c=0,d=20;\r\n    if(a) d=d-10;\r\n    else if (!b)\r\n        if(!c) d=15;\r\n        else d=25;\r\n    printf(\"d=%d\\n\",d);\r\n    return 0;\r\n}\r\n', 'd=20', '选择结构', '选择结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('57', '#include<stdio.h>\r\nint main()\r\n{   int a=1;\r\n    switch(a){\r\n        case 0: printf(\"**0**\");break;\r\n        case 1:printf(\"**1**\");break;\r\n        case 2:printf(\"**2**\");break;\r\n    }\r\n    return 0;\r\n}\r\n', '**1**', '选择结构', '选择结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('58', '#include <stdio.h>\r\nint main()\r\n{   int x, y;\r\n    scanf(\"%d\",&x);\r\n    y = x>12 ? x + 10 : x - 12;\r\n    printf(\"%d\\n\", y);\r\n    return 0;\r\n}\r\n输入：12<回车>\r\n', '0', '选择结构', '选择结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('59', '#include <stdio.h>\r\nint main()\r\n{\r\n    float x, y;\r\n    char op;\r\n    double r;\r\n    scanf(\"%c%f%f\",&op,&x,&y);\r\n    switch(op)\r\n    {   case \'+\': r = x + y; break;\r\n        case \'-\': r = x - y; break;\r\n        case \'*\': r = x * y; break;\r\n        case \'/\': r = x / y; break;\r\n    }\r\n    \r\n    printf(\"%.1f\", r);\r\n    return 0;\r\n}\r\n输入：3.5<回车>\r\n', '0.6', '选择结构', '选择结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('60', '#include \"stdio.h\"\r\nvoid main( )\r\n{   \r\n	int a=7;\r\n    if(a>9 || a<10)\r\n       a=a/3;\r\n    else\r\n       a=a%3;\r\n    printf(\"a=%d\", a);\r\n}\r\n', 'a=2', '选择结构', '选择结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('61', '#include<stdio.h>\r\nvoid main()\r\n{   \r\nint a=20;\r\n    switch(a%3)\r\n    {  \r\n       case 0: printf(\"0\");\r\n       case 1: printf(\"1\");\r\n       case 2: printf(\"2\");\r\n       default: printf(\"3\"); \r\n    }\r\n    printf(\"4\");\r\n}\r\n', '234', '选择结构', '选择结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('62', '#include <stdio.h>\r\nvoid main()\r\n{\r\n	int a=2,b=5,c=8,t;\r\n	if ( a < b ) { t = a; a = b; b = t; }\r\n	if ( b < c ) { t = b; b = c; c = t; }\r\n	if ( a < b ) { t = a; a = b; b = t; }\r\n	printf( \"%d,%d\\n\", a++, --c );\r\n}\r\n', '8,1', '选择结构', '选择结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('63', '#include <stdio.h>\r\nvoid main()\r\n{\r\n    int  number , digit;\r\n    number = 1234;\r\n    while ( number != 0 )\r\n	{ \r\n		digit = number%10 ;\r\n		printf( \"%d\" , digit ) ;\r\n		number = number / 10 ;\r\n	}\r\n}\r\n', '4321', '循环结构', '循环结构', '4', '3');
INSERT INTO `tk_readpg` VALUES ('64', '#include <stdio.h>\r\n#define N 5\r\nvoid main( )\r\n{\r\nint i;\r\n    for(i=1;i<N;i++)\r\n        printf(\"%d\\n\",i*i);\r\n}\r\n', '1 4 9 16', '循环结构', '循环结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('65', '#include<stdio.h>\r\nvoid main( )\r\n{  \r\nint i,s,x;\r\n   	s=0;\r\n   	x=15;\r\n   	for(i=1;i<=5;i++)\r\n   		if (x%i==0)\r\ns= s + i;\r\n   printf(\"i=%d,s=%d\\n\",i,s);\r\n}\r\n', 'i=6,s=9', '循环结构', '循环结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('66', '#include <stdio.h>\r\nvoid main()\r\n{\r\nint counter=1;\r\n  	while(counter <= 5)\r\n  	{\r\n    	printf(\"%d \\n\", counter );\r\n	    counter++;\r\n}\r\n}\r\n', '1 2 3 4 5', '循环结构', '循环结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('67', '#include<stdio.h>\r\nint main()\r\n{\r\n	int i,sum,m,a;\r\n	sum=0;\r\n	m=5;\r\n	for(i=0;i<=3;i++)\r\n	{\r\n		scanf(\"%d\",&a);\r\n        if(a>m)\r\n			sum+=a;\r\n	}\r\n	printf(\"sum=%d\\n\",sum);\r\n	return 0;\r\n}\r\n', 'sum=18', '循环结构', '循环结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('68', '#include<stdio.h>\r\nint main()\r\n{\r\n	int i,j,k;\r\n	for(i=1;i<=4;i++)\r\n	{\r\n		for (j=1;j<5-i;j++)\r\n			printf(\" \");\r\n		for(k=1;k<=i;k++)\r\n			printf(\"*\");\r\n		printf(\"\\n\");\r\n	}\r\n	return 0;\r\n}\r\n', '*\r\n  **\r\n ***\r\n****\r\n', '循环结构', '循环结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('69', '#include <stdio.h>\r\nint main()\r\n{\r\n	int i,j;\r\n	i=1;\r\n	while(i<5)\r\n	{\r\n		for(j=1;j<2*i+1;j++)\r\n			printf(\"%c\",\'#\');\r\n		printf(\"\\n\");\r\n		i++;\r\n	}\r\n	return 0;\r\n}\r\n', '##\r\n####\r\n######\r\n########\r\n', '循环结构', '循环结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('70', '#include <stdio.h>\r\nint main()\r\n{\r\n	int i=10,m=0,n=0;\r\n	do\r\n	{\r\n		if(i%2!=0)\r\n			m=m+i;\r\n		else\r\n			n=n+i;\r\n		i--;\r\n	}while(i>=0);\r\n	printf(\"m=%d,n=%d\\n\",m,n);\r\n	return 0;\r\n}\r\n', 'm=25,n=30', '循环结构', '循环结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('71', '#include <stdio.h>\r\nvoid  main()\r\n{ \r\n	int sum=0,n;\r\n    scanf(\"%d\",&n);\r\n    while(n<=5)\r\n	{  \r\n		sum+=n;\r\n        n++;\r\n	}\r\n	printf(\"sum=%d\",sum);\r\n}\r\n输入：1<回车>\r\n', 'sum=15', '循环结构', '循环结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('72', '#include <stdio.h>\r\nvoid main()\r\n{\r\n	int i, j;\r\n	for(i=2;i>=0;i--)\r\n	{\r\n		for(j=1;j<=i;j++)\r\n			printf(\"*\");\r\n		for(j=0;j<=2-i;j++)\r\n			printf(\"!\");\r\n		printf(\"\\n\");\r\n	}\r\n}\r\n', '**!\r\n*!!\r\n!!!\r\n', '循环结构', '循环结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('73', '#include <stdio.h>\r\nvoid main()\r\n{\r\n	int a,b;\r\n	for(a=1,b=1;a<=100;a++)\r\n	{\r\n		if(b>20) break;\r\n			if(b%4==1)\r\n			{\r\n				b=b+4;\r\n				continue;\r\n			}\r\n		b=b-5;\r\n	}\r\n	printf(\"a=%d\\n\",a);\r\n}\r\n', 'a=6', '循环结构', '循环结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('74', '#include <stdio.h>\r\nvoid main( )\r\n{\r\n	char k;\r\n    int i;\r\n    for(i=1;i<3;i++)\r\n    {\r\n		scanf(\"%c\",&k);\r\n        switch(k)\r\n        {\r\n			case \'0\': printf(\"another\\n\");\r\n			case \'1\': printf(\"number\\n\");\r\n		}\r\n	}\r\n}\r\n输入：01<回车>\r\n', 'another\r\nnumber\r\nnumber\r\n', '循环结构', '循环结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('75', '#include <stdio.h>\r\nint main()\r\n{\r\n    int i, s = 0;\r\n    for(i = 1; i < 10; i++)\r\n    {\r\n        s += i * i;\r\n        if(s > 10) break;\r\n    }\r\n    printf(\"i=%d, s=%d\\n\", i, s);\r\n	return 0;\r\n}  \r\n', 'i=3, s=14', '循环结构', '循环结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('76', '#include <stdio.h>\r\nvoid main()\r\n{\r\n	char ch;\r\n	while((ch=getchar())!=\'\\n\')\r\n	{ \r\n		if (ch>=\'A\'&&ch<=\'Z\')\r\n			ch=ch+32;\r\n		else if (ch>=\'a\'&&ch<=\'z\')\r\n			ch=ch-32;\r\n		printf(\"%c\",ch);\r\n	}\r\n}\r\n输入：ABCdef<回车>\r\n', 'abcDEF', '循环结构', '循环结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('77', '#include <stdio.h>\r\nint main ()\r\n{\r\n    int a, b;\r\n    for (a = 1, b = 1 ; a <= 100 ; a++)\r\n    {\r\n        if (b >= 9) break;\r\n        if (b % 3 == 1)\r\n        {\r\n            b += 3 ;\r\n            continue ;\r\n        }\r\n        b -= 5;\r\n    }\r\n    printf(\"%d,%d\\n\", a, b);\r\n    return 0;\r\n}\r\n', '4,10', '循环结构', '循环结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('78', '#include<stdio.h>\r\nint main ()\r\n{\r\n    int i = 0,j = 0;\r\n    while (i < 10) i++;\r\n    while (j++ < 10) ;\r\n    printf(\"i=%d,j=%d\\n\",i,j);\r\n	return 0;\r\n}\r\n', 'i=10,j=11', '循环结构', '循环结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('79', '\r\n#include \"stdio.h\"\r\nvoid main( )\r\n{\r\n    int i,j,t;\r\n    for(i=1,j=10;i<3;i++,j--)\r\n        t=i+j;\r\n    t++;\r\n	printf(\"%d,%d\",j,t);\r\n}\r\n', '8,12', '循环结构', '循环结构', '4', '5');
INSERT INTO `tk_readpg` VALUES ('80', '#include \"stdio.h\"\r\nvoid main()\r\n{\r\n    int i=10,j; \r\n    do\r\n	{  \r\n		j = i%2;\r\n		printf( \"%d\",j );\r\n		i--;\r\n    } while ( i> 4 );\r\n }\r\n', '010101', '循环结构', '循环结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('81', '#include \"stdio.h\"\r\nvoid main()\r\n{\r\n    int i=7,j; \r\n    while ( i> 2)\r\n	{  \r\n		j = i%2;\r\n		printf( \"%d\",j );\r\n		i--;\r\n    } \r\n	printf( \"%d\",i );\r\n }\r\n', '101012', '循环结构', '循环结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('82', '#include <stdio.h>\r\nvoid main()\r\n{\r\n	int i,j,t=0;\r\n	for(i=3;i>0;i--)\r\n		for(j=0;j<4;j++)\r\n			t+=j;\r\n	printf(\"t=%d\",t);\r\n}\r\n', 't=18', '循环结构', '循环结构', '4', '4');
INSERT INTO `tk_readpg` VALUES ('83', '#include <stdio.h>\r\nlong fun(int x,int n);\r\nint main()\r\n{\r\n	int x=3,n=3;\r\n	long p;\r\n	p=fun(x,n);\r\n	printf(\"p=%ld\\n\",p);\r\n	return 0;\r\n}\r\nlong fun(int x,int n)\r\n{\r\n	int i;\r\n	long p=1;\r\n    for(i=0;i<n;i++)\r\n		p*=x;\r\n    return p;\r\n}\r\n', 'p=27', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('84', '#include <stdio.h>\r\nint isDigit(char ch);\r\nint main()\r\n{\r\n	char ch;\r\n	while((ch=getchar())!=\'\\n\')\r\n	{\r\n		if(isDigit(ch))\r\n			putchar(ch);\r\n	}\r\n	printf(\"\\n\");\r\n	return 0;\r\n}\r\nint isDigit(char ch)\r\n{\r\n	if(ch>=\'0\' && ch<=\'9\')\r\n		return 1;\r\n	else\r\n		return 0;\r\n}\r\n输入：Abc1d23eF45g<回车>\r\n', '12345', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('85', '#include <stdio.h>\r\nvoid odddivisor(int n);\r\nint main()\r\n{\r\n	int n;\r\n	scanf(\"%d\",&n);\r\n	odddivisor(n);\r\n	return 0;\r\n}\r\nvoid odddivisor(int n)\r\n{\r\n	int i;\r\n	for(i=3;i<=n/2;i=i+2)\r\n		if(n%i==0)\r\n			printf(\"%5d\",i);\r\n	printf(\"\\n\");\r\n}\r\n输入：15<回车>\r\n', '3    5', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('86', '#include <stdio.h> \r\nvoid print();\r\nint a=5;\r\nint main()\r\n{\r\n	int a=1,b=2;\r\n	a=a+b;\r\n	print();\r\n	printf(\"%d %d\\n\",a,b);\r\n	return 0;\r\n}\r\nvoid print()\r\n{\r\n	int b=3;\r\n	printf(\"%d %d\\n\",a,b);\r\n}\r\n', '5 3\r\n3 2\r\n', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('87', '#include <stdio.h> \r\nint fun1(int x);\r\nvoid fun2(int x);\r\nint main()\r\n{\r\n	int x=1;\r\n	x=fun1(x);\r\n	printf(\"%d\\n\",x);\r\n	return 0;\r\n}\r\nint fun1(int x)\r\n{\r\n	x++;\r\n	fun2(x);\r\n	return x;\r\n}\r\nvoid fun2(int x)\r\n{\r\n	x++;\r\n}\r\n', '2', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('88', '#include <stdio.h> \r\nint fun1(int a,int b,int c);\r\nint main()\r\n{\r\n	int a=11,b=21,c=31;\r\n	fun1(a,b,c);\r\n	printf(\"%d %d %d\\n\",a,b,c);\r\n	return 0;\r\n}\r\nint fun1(int a,int b,int c)\r\n{\r\n	a=a+10;\r\n	b=b+10;\r\n	c=c+10;\r\n	return c;\r\n}\r\n', '11 21 31', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('89', '#include<stdio.h>\r\nvoid fun(int x);\r\nint main()\r\n{\r\n	fun(7);\r\n	printf(\"\\n\");\r\n	return 0;\r\n}\r\nvoid fun(int x)\r\n{\r\n	if(x/2>1)\r\n		fun(x/2);\r\n	printf(\"%5d\",x);\r\n}\r\n', '3    7', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('90', '#include <stdio.h> \r\nvoid fun(int a[]);\r\nint main()\r\n{\r\n	int i,a[5]={1,2,3};\r\n	fun(a);\r\n	for(i=0;i<5;i++)\r\n		printf(\"%5d\",a[i]);\r\n	printf(\"\\n\");\r\n	return 0;\r\n}\r\nvoid fun(int a[])\r\n{\r\n	int i;\r\n	for(i=0;i<5;i++)\r\n		a[i]+=5;\r\n}\r\n', '6    7    8    5    5', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('91', '#include <stdio.h>\r\nvoid fun ( int k ) ;\r\nvoid main ( )\r\n{\r\n	  int w = 5 ;\r\n	  fun ( w ) ;\r\n	  printf ( \"\\n\" ) ;\r\n}\r\nvoid fun ( int k )\r\n{\r\n	  if ( k>0 )\r\n		  fun ( k-1 ) ;\r\n	  printf ( \"%d\" , k ) ;\r\n}\r\n', '012345', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('92', '#include<stdio.h>\r\nvoid f1(void);\r\nint a=1;\r\nvoid main( )\r\n{\r\n	int a=2;\r\n	f1();\r\n	{\r\n		int a=3;\r\n		printf(\"a2=%d\\n\",a);\r\n}\r\nprintf(\"a3=%d\\n\",a);\r\n}\r\nvoid f1(void)\r\n{\r\nprintf(\"a1=%d\\n\",a);\r\n}\r\n', 'a1=1\r\na2=3\r\na3=2\r\n', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('93', '#include<stdio.h>\r\nvoid f(int a, int b, int *c)\r\n{\r\na=20; b=10;                      \r\n  	*c=a+b;                  \r\n}\r\nvoid main()\r\n{\r\nint a=10,b=20,c=30,d=40;\r\n  	f(a,b,&c);           \r\n  	printf(\"%d,%d,%d\\n\",a,b,c);\r\n}\r\n', '10,20,30', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('94', '#include<stdio.h>\r\nvoid swap(int a,int b);\r\nvoid main()\r\n{	\r\nint a=2,b=3;\r\n	printf(\"a=%d,b=%d\\n\",a,b);\r\n	swap(a,b);\r\n	printf(\"a=%d,b=%d\\n\",a,b);\r\n}\r\nvoid swap(int a,int b)\r\n{\r\n	int c;\r\n	c=a;\r\n	a=b;\r\n	b=c;\r\n}\r\n', 'a=2,b=3\r\na=2,b=3\r\n', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('95', '#include <stdio.h>\r\nvoid fun(int a,int b,int c);\r\nvoid main()\r\n{\r\n	int x=10,y=20,z=30;   \r\n	fun(x,y,z);\r\n	printf(\"%d,%d,%d\\n\",x,y,z);\r\n}\r\nvoid fun(int a,int b,int c)\r\n{\r\n	a=456;b=567;c=678;\r\n}\r\n', '10,20,30', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('96', '#include <stdio.h>\r\nfloat f(int n)\r\n{\r\n  int i;float s=0.0;\r\n  for(i=1;i<n;i++)\r\n  	s=s+(float)1.0/i;\r\n  return s;\r\n}\r\nvoid main()\r\n{\r\nint i;float a=0.0;\r\n  	for(i=1;i<3;i++)\r\n    	a=a+f(i);\r\n  	printf(\"a=%.4f\\n\", a);\r\n}\r\n', '#include <stdio.h>\r\nint f(int a);\r\nvoid main()\r\n{\r\n	int a=2,i;\r\n	for(i=0;i<3;i++)\r\nprintf(\"%d\",f(i));\r\n}\r\nint f(int a)\r\n{\r\n	int b=0,c=3;\r\n	b++;\r\n	c++;\r\n	return(a+b+c);\r\n}\r\n567', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('97', '#include<stdio.h>\r\nint fun();\r\nvoid main()\r\n {\r\n	 int i,x;\r\n	 for(i=0;i<=2;i++)                         \r\n		 x=fun();\r\n	 printf(\"%d\\n\",x);  \r\n }\r\n int fun()\r\n{\r\n	int x=3;\r\n	x++;\r\n	return x;\r\n}\r\n', '4', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('98', '#include <stdio.h>\r\nfloat add(float x,float y);                                    \r\nvoid main( )\r\n{\r\n      float a,b,c;\r\n      a=1.0;\r\n      b=2.0;\r\n      c=add(a,b);\r\n      printf(\"%f\\n\",c);\r\n}\r\nfloat add(float x,float y)\r\n{\r\nfloat z;\r\nz=x+y;\r\nreturn(z);\r\n}\r\n', '3.000000', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('99', '#include<stdio.h>\r\nvoid fun(int x, int  cp, int  dp)                          \r\n{ \r\ncp=x++; \r\ndp=++x; \r\n}\r\nvoid main(void)\r\n{ \r\nint a,c=80, d=-20;\r\na=30; \r\nfun(a,c,d);\r\nprintf(\"%d,%d\\n\", c,d);\r\n}\r\n', '80,-20', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('100', '#include <stdio.h>\r\nint f(int a,int b);\r\nvoid main()\r\n{\r\n	int i=2,p;\r\n	p=f(i,i+1);\r\n	printf(\"%d\\n\",p);\r\n}\r\nint f(int a,int b)\r\n{\r\n	int c;\r\n	if(a>b)\r\n		c=1;\r\n	else if (a==b)\r\n		c=0;\r\n		else \r\n			c=-1;\r\n	return (c);\r\n}\r\n', '-1', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('101', '#include <stdio.h>\r\nint fun(int n)\r\n{\r\nif(n= =1) return 1;\r\nelse return fun(n-1)+3;\r\n}\r\nvoid main()\r\n{\r\nint i,j=0;\r\nfor(i=1;i<4;i++)\r\nj=j+fun(i);\r\nprintf(\"j=%d\\n\",j);\r\n}\r\n', 'j=12', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('102', '#include <stdio.h>\r\nvoid f(int x,int y)\r\n{\r\nint t;\r\nif(x<y)\r\n{t=x;x=y;y=t;}\r\n}\r\nvoid main()\r\n{\r\nint a=4,b=3,c=5;\r\n 	f(a,b);\r\n 	f(a,c); \r\nf(b,c);\r\nprintf(\"%d,%d,%d\",a,b,c);\r\n}\r\n', '4，3，5', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('103', '#include<stdio.h>\r\nint age(int n)\r\n{\r\nint c;                                            \r\nif(n==1) \r\nc=10;\r\nelse                                              \r\nc=age(n-1)+2;\r\nreturn(c);\r\n}\r\nvoid main()\r\n{\r\nprintf(\"%d\",age(5));\r\n}\r\n', '18', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('104', '#include <stdio.h>\r\nvoid hello_world(void)\r\n{\r\nprintf(\"Hello, world!\\n\");\r\n}\r\nvoid three_hellos(void)\r\n{\r\nint counter;\r\nfor (counter =1;counter <= 3;counter++)\r\nhello_world();\r\n}\r\nvoid main(void)\r\n{\r\nthree_hellos();\r\n}\r\n', 'Hello, world!\r\nHello, world!\r\nHello, world!\r\n', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('105', '#include <stdio.h>\r\nint f(int a,int b);  \r\nvoid main() \r\n{ \r\n 	int x,i=1,k=3;\r\n 	x=f(i,k); \r\n 	printf(\"x=%d \\n\",x); \r\n}\r\nint f(int a,int b)\r\n{ \r\nint M=0; \r\n 	while(b!=0)\r\n 	{\r\n		M=M+a;\r\n     	b--;\r\n 	}\r\nreturn M; \r\n}\r\n', 'x=3;', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('106', '#include<stdio.h>\r\nf(int b[ ],int m,int n)\r\n{\r\n    int i,s = 0;\r\n    for(i = m;i < n;i++)\r\n         s += b[i];\r\n     return s;\r\n }\r\nint main()\r\n{\r\n    int x,a[ ] = {1,2,3,4,5,6,7,8,9}, *p = a;\r\n    x = f(p,3,7);\r\n    printf(\"x=%d\\n\",x);\r\n    return 0;\r\n}\r\n', 'x=22', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('107', '#include <stdio.h>\r\nvoid fun(int i, int j)\r\n{\r\n    int x = 7;\r\n    printf(\"i = %d; j = %d; x = %d\\n\", i, j, x);\r\n}\r\nint main()\r\n{\r\n    int i = 2, x = 5, j = 7;\r\n    fun(j, 6);\r\n    printf(\"i = %d; j = %d; x = %d\\n\", i, j, x);\r\n    return 0;\r\n}\r\n', 'i = 7; j = 6; x = 7\r\ni = 2; j = 7; x = 5\r\n', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('108', '#include <stdio.h> void f(int a[]) {     int i=0;     while(a[i]<=10)\r\n{     	printf(\"%d\",a[i]);         i++;     } } int main() {     int a[]={1,7,17,9,11,34};     f(a+1); }', '7', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('109', '#include <stdio.h>\r\nvoid add(int x, int y, int z)\r\n{\r\n    z = x + y;\r\n    x = x * x;\r\n    y = y * y;\r\n    printf(\"(2) x = %d y = %d z = %d\\n\", x, y, z);\r\n}\r\n\r\nint main()\r\n{\r\n    int x = 2, y = 3, z = 0;\r\n    printf(\"(1) x = %d y = %d z = %d\\n\", x, y, z);\r\n    add(x, y, z);\r\n    printf(\"(3) x = %d y = %d z = %d\\n\", x, y, z);\r\n    return 0;\r\n}\r\n', '(1) x = 2 y = 3 z = 0\r\n(2) x = 4 y = 9 z = 5\r\n(3) x = 2 y = 3 z = 0\r\n', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('110', '#include <stdio.h>\r\nint x1 = 30, x2 = 40;\r\nvoid sub(int x, int y)\r\n{\r\n    x1 = x;\r\n    x = y;\r\n    y = x1;\r\n}\r\n\r\nint main()\r\n{\r\n    int x3 = 10, x4 = 20;\r\n    sub(x3, x4);\r\n    sub(x2, x1);\r\n    printf(\" %d, %d, %d, %d\\n\", x3, x4, x1, x2);\r\n    return 0;\r\n}\r\n', '10, 20, 40, 40', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('111', '#include<stdio.h>\r\nint x;\r\nvoid cube()\r\n{\r\n    x = x * x * x;\r\n}\r\n\r\nint main()\r\n{\r\n    x = 5;\r\n    cube();\r\n    printf(\" %d\\n\", x);\r\n    return 0;\r\n}\r\n', '125', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('112', '#include <stdio.h>\r\ninvert(int *s, int i, int j)\r\n{\r\n    int t;\r\n    if(i < j)\r\n    {\r\n        invert(s, i + 1,j - 1);\r\n        t = *(s + i);\r\n        *(s + i) = *(s + j);\r\n        *(s + j) = t;\r\n    }\r\n}  \r\nvoid main( )\r\n{\r\n    int a[6] = {10, 6, 23, -90, 0, 3}, i;\r\n    invert(a, 0, 5);\r\n    for(i = 0; i < 6; i++)  printf(\"%d, \", a[i]);\r\n    printf(\"\\n\");\r\n}\r\n', '3,0,-90,23,6,10', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('113', 'int func(int a[][3]) {     int i,j,sum=0;     for(i=0;i<3;i++)         for(j=0;j<3;j++){             a[i][j]=i+j;             if(i==j)                 sum = sum+a[i][j];         }     return sum; } int main() {     int a[3][3]={1,3,5,7,9,11,13,15,17};     int sum;     sum=func(a);     printf(\"sum=%d\",sum);     return 0; }', 'sum=6', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('114', '# include <stdio.h>       \r\nint i=10;\r\nvoid fun();\r\nvoid main( )\r\n{   int i;\r\n    for(i=2; i>0; i--)  \r\n		fun( );\r\n}\r\nvoid fun()\r\n{   \r\n    i*=2;\r\n    printf(\"i=%d\\n\", i);\r\n}\r\n', 'i=20\r\ni=40\r\n', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('115', '#include <stdio.h>\r\nint fun(int n)\r\n{  \r\n	if(n<=1) \r\n		return 1;\r\n	else \r\n	   return fun(n-1)*n;\r\n}\r\nvoid main()\r\n{  \r\n	int i,j=0;\r\n    for(i=1;i<=3;i++)\r\n        j+=fun(i);\r\n	printf(\"j=%d\\n\",j);\r\n}\r\n', 'j=9', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('116', '#include <stdio.h>\r\nint funa(int a, int b)\r\n{ \r\n	 int t; \r\n	 if (a > b) 	  \r\n		 t = a/b; \r\n	 else\r\n		 t = a%22;\r\n	 return t;\r\n}\r\nvoid main()\r\n{\r\n	int a=33, b=22,c;\r\n	c=funa(a,b);\r\n	printf(\"c=%d\\n\", c);\r\n}\r\n', 'c=1', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('117', '# include <stdio.h>\r\nvoid fun(int i);\r\nvoid main( )\r\n{   int i;\r\n    for(i=2; i>0; i--)  \r\n		fun(i);\r\n}\r\nvoid fun(int i)\r\n{   \r\n    i*=2;\r\n    printf(\"+%d+\", i);\r\n}\r\n', '+4++2+', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('118', '# include <stdio.h>\r\nvoid fun(int n);\r\nvoid main( )\r\n{   \r\n	int x=879;\r\n    fun(x);\r\n}\r\nvoid fun(int n)\r\n{   \r\n	int a,b,c,t;\r\n    a = n % 10;\r\n	b = (n/10) % 10;\r\n	c = (n/100) % 10;\r\n	if ( a < b ) { t = a; a = b; b = t; }\r\n	if ( b < c ) { t = b; b = c; c = t; }\r\n	if ( a < b ) { t = a; a = b; b = t; }\r\n	printf( \"%d\", b );\r\n\r\n}\r\n', '8', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('119', '#include <stdio.h>\r\nint funa(int a, int b)\r\n{ \r\n	 int t; \r\n	 if (a > b) \r\n	 { \r\n		 t = a; \r\n		 a = b; \r\n		 b = t; \r\n	 }\r\n	 return t;\r\n}\r\nvoid main()\r\n{\r\n	int a=33, b=22,c;\r\n	c=funa(a,b);\r\n	printf(\"c=%d\\n\", c);\r\n}\r\n', 'c=33', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('120', '#include <stdio.h> int swap(int x, int y) {  	 int z;  	 z=x%10;  	 x=y%10;  	 y=z; 	 z=x; 	 return z; } void main() { 	int a=38, b=29,c; 	c=swap(a,b); 	printf(\"%d%d\\n\", a,c); } ', '389', '函数', '函数的定义与使用', '5', '5');
INSERT INTO `tk_readpg` VALUES ('121', '#include <stdio.h> void fun(int n) {   	if(n==1)  		printf(\"*\\n\"); 	else  	{	 		printf(\"-\"); 		fun(n-1); 	} } void main() {   	int i,j=0;     for(i=1;i<4;i++)         fun(i); 	printf(\"XiaoXin!\"); } ', '* -* --* XiaoXin!', '函数', '函数的定义与使用', '5', '4');
INSERT INTO `tk_readpg` VALUES ('122', '#include <stdio.h> \r\nvoid main()\r\n{ \r\n	int a[2][3]={{3,2,7},{4,8,6}};\r\n	int  i,j,m=0;\r\n	for(i=1;i<=1;i++)\r\n		for(j=0;j<=i;j++)\r\n			m=m+a[i][j];\r\n	printf(\"m=%d\",m);\r\n}\r\n', 'm=12', '数组', '数组的定义、引用和初始化', '6', '5');
INSERT INTO `tk_readpg` VALUES ('123', '#include <stdio.h>                                   \r\nvoid main(void)            \r\n{     \r\n	int array[10] = {1, 2, 4, 5, 6, 0, 0, 0, 0, 0}, i;\r\n    printf(\"\\n\"); \r\n    for (i=0; i<10; i++)  \r\n		printf(\"%3d \", array[i]); \r\n	printf(\"\\n\");\r\n	for (i=9; i>=2; i--) \r\n		array[i] = array[i-1]; \r\n	array[2] = 3;\r\n	for (i=0; i<10; i++) \r\n		printf(\"%3d \", array[i]);\r\n	printf(\"\\n\");\r\n}\r\n', '1   2   4   5   6   0   0   0   0   0\r\n  1   2   3   4   5   6   0   0   0   0\r\n', '数组', '数组的定义、引用和初始化', '6', '5');
INSERT INTO `tk_readpg` VALUES ('124', '#include <stdio.h>\r\nvoid main(void)\r\n{ \r\n	char a[]=\"ABCDEFGH\",b[]=\"abCDefGh\";              \r\n	char *p1,*p2;\r\n	int k;\r\n	p1=a; p2=b;\r\n	for(k=0;k<=7;k++)\r\n		if (*(p1+k)==*(p2+k)) \r\n			printf(\"%c\",*(p1+k));\r\n	printf(\"\\n\");\r\n}\r\n', 'CDG', '数组', '数组的定义、引用和初始化', '6', '5');
INSERT INTO `tk_readpg` VALUES ('125', '#include <stdio.h>\r\n#include <string.h>\r\nvoid main()\r\n{ \r\n	char a[30]=\"Hello \";\r\n	char b[10]=\"Students\";\r\n	char c[10]=\"Teachers\";\r\n	strcat(a,c);\r\n	printf(\"%s,%s.\\n\",a,b);\r\n}\r\n', 'Hello Teachers,Students', '数组', '数组的定义、引用和初始化', '6', '5');
INSERT INTO `tk_readpg` VALUES ('126', '#include <stdio.h>\r\nvoid inv(int x[],int n);\r\nvoid main()\r\n{   \r\n	int i, a[10]={3,7,9,11,0,6,7,5,4,2};\r\n	inv(a, 10);\r\n	printf(\"The array has been reverted.\\n\");\r\n	for(i=0;i<10;i++)\r\n		printf(\"%d,\",a[i]);\r\n	printf(\"\\n\");\r\n}\r\nvoid inv(int x[], int n)\r\n{\r\n	int t,i,j,m=(n-1)/2;\r\n	for(i=0;i<=m;i++)\r\n	{\r\n		j=n-1-i;\r\n		t=x[i];\r\n		x[i]=x[j];\r\n		x[j]=t;\r\n	}\r\n}\r\n', 'The array has been reverted.\r\n2,4,5,7,6,0,11,9,7,3,\r\nThe array has been reverted.\r\n2,4,5,7,6,0,11,9,7,3,\r\n', '数组', '数组的定义、引用和初始化', '6', '5');
INSERT INTO `tk_readpg` VALUES ('127', '#include<stdio.h>\r\nvoid main()\r\n{\r\n	float a[3][3]={1,2,3,4,5,6,7,8,9},sum=0;\r\n	int i;\r\n	printf(\"please input rectangle element:\\n\");\r\n	for(i=0;i<3;i++)\r\n		sum=sum+a[i][i];\r\n	printf(\"duijiaoxian he is %6.2f\",sum);\r\n}\r\n', 'please input rectangle element:\r\nduijiaoxian he is  15.00\r\n', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('128', '#include <stdio.h>\r\nint main()\r\n{\r\n    int i=1,n=3,j,k=3;\r\n    int a[5]={1,4,5};\r\n    while(i<=n&&k>a[i]) i++;\r\n    for(j=n-1;j>=i;j--)\r\n        a[j+1] = a[j];\r\n    a[i] = k;\r\n    for(i=0;i<=n;i++)\r\n        printf(“%2d”,a[i]);\r\n    return 0;\r\n}\r\n', '1 3 4 5', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('129', '#include<stdio.h>\r\nvoid main()\r\n{\r\n	int a[10]={0,1,2,3,4,5,6,7,8,9}, b[10],i,sum=0;\r\n	for(i=1;i<10;i++)\r\n    {\r\n        b[i]=a[i-1]+a[i];\r\n        sum=sum+b[i]; \r\n    }\r\n    for(i=1;i<10;i++)\r\n        if(i%3==0)\r\n			sum=sum+b[i]; \r\n	printf(\"sum=%3d\",sum);  \r\n}\r\n', 'sum=114', '数组', '数组的定义、引用和初始化', '6', '5');
INSERT INTO `tk_readpg` VALUES ('130', '#include <stdio.h>\r\nvoid main()          \r\n{\r\n 	int a[5]={2,6,1,3,4},n=5,i,j,t;\r\n	for(i=0,j=1;j<n;j++)\r\n		if(a[i]<a[j])\r\n		{\r\n			a[j]=a[i];\r\n			i++;\r\n		}\r\n	for(i=0;i<n;i++)\r\n		printf(\"%d\",a[i]);\r\n}\r\n', '22121', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('131', '#include <stdio.h>\r\nvoid funa(int x[],int n);\r\nvoid main()\r\n{   \r\n 	int i, a[5]={3,7,9,11,0};\r\n    funa(a, 5);\r\n    for(i=0;i<5;i++)\r\n       printf(“%d,”,a[i]);\r\n    printf(“\\n”);\r\n}\r\nvoid funa(int x[], int n)\r\n{\r\n   int t,i,j,m=(n-1)/2;\r\n   for(i=0;i<=m;i++)\r\n   {\r\n      j=n-1-i;\r\n      t=x[i];\r\n      x[i]=x[j];\r\n      x[j]=t;\r\n   }\r\n}\r\n', '0,11,9,7,3，', '数组', '数组的定义、引用和初始化', '6', '3');
INSERT INTO `tk_readpg` VALUES ('132', '#include <stdio.h>\r\nvoid main()          \r\n{\r\n	int a[5]={24,15,33,64,45},n=5,i,j,t;\r\n	for(i=0;i<n;i++)\r\n		a[i]=a[i]%10;\r\n	for(i=n;i>0;i--)\r\n		printf(\"%d,\",a[i-1]);\r\n}\r\n', '5,4,3,5,4，', '数组', '数组的定义、引用和初始化', '6', '5');
INSERT INTO `tk_readpg` VALUES ('133', '#include <stdio.h>\r\nvoid main()          \r\n{\r\n	int a[5],i,j,t;\r\n	for(i=4;i>=0;i--)\r\n		scanf(\"%d\",&a[i]);\r\n	for(i=0;i<5;i++)\r\n		a[i]=a[i]+10;\r\n	for(i=0;i<5;i++)\r\n		printf(\"%d,\",a[i]);\r\n}\r\n输入：42 31 24 15 16<回车>', '26,25,34,41,52', '数组', '数组的定义、引用和初始化', '6', '5');
INSERT INTO `tk_readpg` VALUES ('134', '#include<stdio.h>\r\nmain()\r\n{  \r\n	char a[][5]={\"Zhong\",\"Gong\", \"ren\"};\r\n	printf(\"%s\\n%s\\n\", a[0],a[1]);\r\n}\r\n', 'ZhongGong\r\nGong\r\n', '数组', '数组的定义、引用和初始化', '6', '5');
INSERT INTO `tk_readpg` VALUES ('135', '#include <stdio.h>\r\nvoid main()          \r\n{\r\n	int a[3][3]={0,1,2,3,4,5,6,7,8},i,j,t;\r\n	for(i=0;i<3;i++)\r\n		for(j=0;j<3;j++)\r\n			a[i][j]+=a[i][0];\r\n		\r\n	for(i=0;i<3;i++)\r\n		printf(\"%d,\",a[i][i]);\r\n}\r\n', '0，10，20', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('136', '#include <stdio.h>\r\nvoid main()          \r\n{\r\n	int a[3][3]={1,2,3,4,5,6,7,8,9},i,j;\r\n	for(i=0;i<3;i++)\r\n		for(j=0;j<3;j++)\r\n			a[i][j]+=a[i][2];\r\n	while(i>0)\r\n	{\r\n		i--;\r\n		printf(\"%d,\",a[i][i]);  \r\n	}\r\n}\r\n', '18,11,4', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('137', '#include<stdio.h>\r\nvoid main()\r\n{  \r\n	int i,j;\r\n	char a[10]={\"ABCDEFGHIJ\"};\r\n	for(i=0;i<10;i++)  \r\n		a[i]=a[i]+3;\r\n	printf(\"%c\\n\", a[6]); \r\n}\r\n', 'J', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('138', '#include<stdio.h> \r\nint main()\r\n{\r\n	int i,a[10]={0,1,2,3,4,5,6,7};\r\n	for(i=1;i<9;i++)\r\n		a[i]=a[i-1]+a[i+1];\r\n	printf(\"%d%d\\n\",a[5],a[8]);\r\n	return 0;\r\n}\r\n', '2027', '数组', '数组的定义、引用和初始化', '6', '5');
INSERT INTO `tk_readpg` VALUES ('139', '#include<stdio.h>\r\nint main()\r\n{\r\n	int i,a[]={1,2,3,4,5,6,7,8,9,10};\r\n	for(i=0;i<5;i++)\r\n		a[i]=i+2;\r\n	for(i=9;i>=0;i--)\r\n		if(a[i]%3==0)\r\n			printf(\"%d\\n\",a[i]);\r\n	return 0;\r\n}\r\n', '9\r\n6\r\n6\r\n3\r\n', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('140', '#include<stdio.h>\r\nint main()\r\n{\r\n	int num=13,len=0,i=0,a[30];\r\n	do\r\n	{\r\n		a[len]=num%2;\r\n		num=num/2;\r\n		len++;\r\n	}while(num);\r\n	for(i=0;i<len;i++)\r\n		printf(\"%d\",a[len-i-1]);\r\n	printf(\"\\n\");\r\n	return 0;\r\n}\r\n', '1101', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('141', '#include <stdio.h>\r\nint main()\r\n{\r\n	int a[5]={6,9,12,16};\r\n	int x,i=3;\r\n	scanf(\"%d\",&x);\r\n	while(i>=0 && x<a[i])\r\n	{\r\n		a[i+1]=a[i];\r\n		i--;\r\n	}\r\n	a[i+1]=x;\r\n	for(i=0;i<5;i++)\r\n		printf(\"%5d\",a[i]);\r\n	printf(\"\\n\");\r\n	return 0;\r\n}\r\n输入：10<回车>\r\n', '6    9   10   12   16', '数组', '数组的定义、引用和初始化', '6', '5');
INSERT INTO `tk_readpg` VALUES ('142', '#include<stdio.h>\r\nint main()\r\n{\r\n	int a[3][3]={{2,3},{4,5,6},{7,8}};\r\n    int i=0,j=0,m;\r\n	m=a[0][0];\r\n	for(i=0;i<3;i++)\r\n		for(j=0;j<3;j++)\r\n			if(a[i][j]<m)\r\n				m=a[i][j];\r\n	printf(\"m=%d\\n\",m);\r\n	return 0;\r\n}\r\n', 'm=0', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('143', '#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n	int i;\r\n	char str[20]=\"abcdef\";\r\n	strcpy(str,\"opqrst\");\r\n	str[5]=\'\\0\';\r\n	for(i=0;i<strlen(str)-1;i++)\r\n		putchar(str[i]);\r\n	printf(\"\\n\");\r\n	return 0;\r\n}\r\n', 'opqr', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('144', '#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n	char a[10]=\"AB\",b[10]=\"LMNP\";\r\n	int i=0;\r\n	while(b[i])\r\n	{\r\n		a[i]=b[i];\r\n		i++;\r\n	}\r\n	a[i]=\'\\0\';\r\n	puts(b);\r\n	return 0;\r\n}\r\n', 'LMNP', '数组', '数组的定义、引用和初始化', '6', '5');
INSERT INTO `tk_readpg` VALUES ('145', '#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n	int i;\r\n	char str1[30]=\"abc\",str2[3][5]={\"defg\",\"hi\\0j\",\"klm\"};\r\n	for(i=1;i<3;i++)\r\n		strcat(str1,str2[i]);\r\n	puts(str1);\r\n	return 0;\r\n}\r\n', 'abchiklm', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('146', '#include<stdio.h>\r\nint main()\r\n{\r\n    int i;\r\n    char a[] = \"Time\", b[] = \"Tom\";\r\n    for(i = 0; a[i] != \'\\0\' && b[i] != \'\\0\'; i++){\r\n		if (a[i] == b[i])\r\n			if (a[i] >= \'a\' && a[i] <= \'z\')  \r\n				printf(\"%c\", a[i] - 32);\r\n			else  \r\n				printf(\"%c\", a[i] + 32);\r\n		else printf(\"*\");\r\n	}\r\n    return 0;\r\n}\r\n', 't*M', '数组', '数组的定义、引用和初始化', '6', '5');
INSERT INTO `tk_readpg` VALUES ('147', '#include <stdio.h>\r\nint  main()\r\n{\r\n	char a[4][10] = {\"1234\", \"abcd\", \"xyz\", \"ijkm\"};\r\n    int i = 3;\r\n    char (*p)[10] = a;\r\n	printf(\"output string: \\n\");\r\n    for (p = a; p < a + 4; p++, i--)\r\n		printf(\"%c\", *(*p + i));\r\n    return 0;\r\n}\r\n', '4cyi', '数组', '数组的定义、引用和初始化', '6', '5');
INSERT INTO `tk_readpg` VALUES ('148', '#include <stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    char str1[30], str2[] = “your book”;\r\n    scanf(“%s”, str1);\r\n    strcpy(str1, str2);\r\n    printf(“\\n %s\\n %d\\n”, str1, strlen(str2));\r\n    return 0;\r\n}\r\n输入：you are a student<回车>\r\n', 'your book 9', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('149', '#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{   char s1[10]=“java”,s2[10]=“basic”,s[10];\r\n    if(strcmp(s1,s2)) { strcpy(s,s1);  puts(s);}\r\n    printf(“%d,%s\\n”,strlen(s2),strcat(s2,s1));\r\n    return 0;\r\n}\r\n', 'java\r\n9,basicjava\r\n', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('150', '#include < stdio.h >\r\n#include < string.h >\r\nint main ()\r\n{\r\n    char *p = “abcdefgh” , c[10] = { “XYZ” } ;\r\n    p += 3 ;\r\n    puts ( strcat ( c , p ) ) ;\r\n    printf ( “%d\\n” , strlen ( c ) ) ;\r\n    return 0;\r\n}\r\n', 'XYZdefgh\r\n8\r\n', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('151', '#include <stdio.h>\r\nint main()\r\n{\r\n    int a[6][6], i, j;\r\n    for(i=1;i<6;i++)\r\n    for(j=1;j<6;j++)\r\n    a[i][j] = (i/j)*(j/i);\r\n    for(i=1;i<6;i++)\r\n	{\r\n		for(j=1;j<6;j++)\r\n			printf(\"%2d\",a[i][j]);\r\n		printf(\"\\n\");\r\n	} \r\n    return 0;\r\n}\r\n', '1 0 0 0 0\r\n0 1 0 0 0\r\n0 0 1 0 0\r\n0 0 0 1 0\r\n0 0 0 0 1\r\n', '数组', '数组的定义、引用和初始化', '6', '5');
INSERT INTO `tk_readpg` VALUES ('152', '#include <stdio.h>\r\nint main()\r\n{\r\n    int i, f[10];\r\n    f[0]= f[1] = 1;\r\n    for(i=2;i<10;i++)\r\n		f[i] = f[i-2] + f[i-1];\r\n    for(i=0;i<10;i++){\r\n		if(i%4 == 0) printf(\"\\n\");\r\n	printf(\"%3d\",f[i]);\r\n }\r\n    return 0;\r\n}\r\n', '1   1   2   3\r\n5   8   13  21\r\n', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('153', '#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    char a[]=\"morming\", t;\r\n    int i, j=0;\r\n    for(i=1;i<7;i++)\r\n  		if(a[j]<a[i]) j = i;\r\n    t = a[j];\r\n    a[j] = a[7];\r\n    a[7] = a[j];\r\n    puts(a);\r\n    return 0;\r\n}\r\n', 'mo', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('154', '#include <stdio.h>\r\n#include <string.h>\r\nvoid main()\r\n{\r\nchar s[12]=“abcdef”;\r\nscanf(“%s”,s);\r\nstrcat(s,”xyz”);\r\nprintf(“%s\\n”,s);\r\n}\r\n', 'hijxyz', '数组', '数组的定义、引用和初始化', '6', '3');
INSERT INTO `tk_readpg` VALUES ('155', '#include <stdio.h>\r\nvoid main()\r\n{\r\nint a[3][3]={{3,4},{5,6},{7,8}};\r\n 	int i,j,t=0;\r\n 	for(i=1;i<3;i++)\r\n  		for(j=0;j<i;j++)\r\n   			t=t+a[i][j];\r\n 	printf(“t=%d\\n”,t);\r\n}\r\n', 't=20', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('156', '#include <stdio.h>\r\nvoid main( )\r\n{   \r\n	int i,t,a[5]={1,2,3,4,5};\r\n	t=a[0];\r\n	for(i=1;i<5;i++)\r\n		a[i-1]=a[i];\r\n	a[4]=t;\r\n	for(i=0;i<5;i++) \r\n		printf(\"%d\",a[i]);\r\n	printf(\"\\n\");\r\n}\r\n', '23451', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('157', '#include <stdio.h>\r\nvoid mystrcpy( char s1[ ] , char s2[ ]);\r\nvoid main( )\r\n{   \r\n	char  a[50]=\"I am a teacher.\";\r\n	char  b[]=\"You are a student.\";\r\n	printf( \" a = %s \\n\" , a );\r\n	mystrcpy( a , b );\r\n	printf( \" a = %s \\n\" , a );\r\n}\r\nvoid mystrcpy( char s1[ ] , char s2[ ])\r\n{    \r\n	int i = 0 ;\r\n	while( s2[i] != \'\\0\' )\r\n	{\r\n		s1[i] = s2[i];\r\n		i++; \r\n	}\r\n	s1[i] = \'\\0\' ;\r\n}\r\n', 'a= I am a teacher.\r\na= You are a student.\r\n', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('158', '#include <stdio.h>\r\nvoid main()\r\n{\r\n	int i,j,k=0,a[3][3]={1,2,3,4,5,6};\r\n	for(i=0;i<3;i++)\r\n		for(j=i;j<3;j++) k=k+a[i][j];\r\n	printf(“¡ã%d”¡À,k);\r\n}\r\n', '17', '数组', '数组的定义、引用和初始化', '6', '5');
INSERT INTO `tk_readpg` VALUES ('159', '#include<stdio.h>\r\nvoid main()\r\n{ \r\n	int i,j=3,a[ ]={1,2,3,4,5,6,7,8,9,10};\r\n	for(i=0;i<5;i++)\r\n 		a[i]=i*(i+1);\r\n	for(i=0;i<4;i++)\r\n 		j+=a[i]*3;\r\n	printf(\"%d\\n\",j);\r\n}\r\n', '63', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('160', '#include <stdio.h>\r\nvoid main()\r\n{\r\n	char c, string[81]= \"How are you?\";\r\n	int i, n=0, k=0;\r\n	for(i=0; c=string[i]; i++)\r\n	{\r\n		if(c==\' \')  k=0;\r\n		else if(k == 0)\r\n		{\r\n			k = 1;\r\n			n ++;\r\n		}\r\n	}\r\n	printf(\"%d\\n\" , n );\r\n}\r\n', '3', '数组', '数组的定义、引用和初始化', '6', '4');
INSERT INTO `tk_readpg` VALUES ('161', '#include<stdio.h>\r\n#include<string.h>\r\nvoid main( )\r\n{\r\nchar s[16]=“12345\\0\\t\\t\\t”;\r\n  	printf(“%d,%d\\n”,strlen(s),sizeof(s));\r\n\r\n}\r\n', '5,16', '数组', '数组的定义、引用和初始化', '6', '3');
INSERT INTO `tk_readpg` VALUES ('162', '#include <stdio.h>\r\nstruct stri_type\r\n{\r\n	char ch1;\r\n	char ch2;\r\n	struct\r\n	{\r\n		int a;\r\n		int b;\r\n	}ins;\r\n};\r\nint main()\r\n{\r\n	struct stri_type ci;\r\n	ci.ch1=\'a\';   ci.ch2=\'A\';\r\n	ci.ins.a=ci.ch1+ci.ch2;\r\n	ci.ins.b=ci.ins.a-ci.ch1;\r\n	printf(\"%d,%c\\n\",ci.ins.a,ci.ins.b);\r\n	return 0;\r\n}\r\n', '162,A', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('163', '#include <stdio.h>\r\nstruct stud_type\r\n{\r\n	char num[11];\r\n	char name[11];\r\n	float score[3];\r\n	float average;\r\n};\r\nint main()\r\n{\r\n	struct stud_type stu={\"200601\",\"wang\",80.0,85.0,70.0};\r\n	stu.average=(stu.score[0]+stu.score[1]+stu.score[2])/3;\r\n	printf(\"average=%5.2f\\n\",stu.average);\r\n	return 0;\r\n}\r\n', 'average=78.33', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('164', '#include <stdio.h>\r\nunion out\r\n{\r\n	int a[2];\r\n	struct\r\n	{\r\n		int b;\r\n		int c;\r\n	}in;\r\n	int d;\r\n};\r\nint main()\r\n{\r\n	union out e;\r\n	int i;\r\n	e.in.b=1;\r\n	e.in.c=2;\r\n	e.d=3;\r\n	for(i=0;i<2;i++)\r\n		printf(\"%5d\",e.a[i]);\r\n	printf(\"\\n\");\r\n	return 0;\r\n}\r\n', '3    2', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('165', '#include <stdio.h>\r\n#define PI 3.14\r\nstruct cir_type\r\n{\r\n	float r;\r\n	double area;\r\n};\r\nint main()\r\n{\r\n	struct cir_type cir={5.0},*p=&cir;\r\n	p->area=PI*p->r*p->r;\r\n	printf(\"area=%.3lf\\n\",p->area);\r\n	return 0;\r\n}\r\n', 'area=78.500', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('166', '#include<stdio.h>\r\nstruct int_char\r\n{\r\n	int i;\r\n	char ch;\r\n};\r\nint main()\r\n{\r\n	struct int_char x={9,\'z\'};\r\n	printf(\"%d\\t%5c\\n\",x.i+20,x.ch-2);\r\n	return 0;\r\n}\r\n', '29        x', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('167', '#include<stdio.h>\r\nint main()\r\n{ \r\n    struct data\r\n	{ \r\n       int m;\r\n       int n;\r\n       union\r\n		{   \r\n			int y;\r\n			int z;\r\n		}da;	\r\n	};\r\n	struct data intdata;\r\n	intdata.m=3;intdata.n=6;\r\n	intdata.da.y=intdata.m+intdata.n;\r\n	intdata.da.z=intdata.m-intdata.n;\r\n	printf(\"%5d%5d\\n\",intdata.da.y,intdata.da.z);\r\n	return 0;\r\n}\r\n', '-3   -3', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('168', '#include<stdio.h>\r\nint main()\r\n{   \r\n	int i;\r\n    float sum_average=0; \r\n    struct student\r\n	{ \r\n       int num;\r\n       char name[10];\r\n       int score[2];\r\n       float average; \r\n	};\r\n	struct student data[2]={{1,\"zhangsan\",60,70},{2,\"Lisi\",89,90}};\r\n	for(i=0;i<2;i++)  \r\n	{\r\n	   data[i].average=(data[i].score[0]+data[i].score[1])/2.0;\r\n	   sum_average=sum_average+data[i].average;\r\n	}  \r\n	sum_average=sum_average/2;\r\n	for(i=0;i<2;i++)  \r\n		if(sum_average>data[i].average)\r\n			printf(\"%5d%10s%5.2f\",data[i].num,data[i].name,data[i].average);\r\n}\r\n', '1  zhangsan65.00 ', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('169', '#include<stdio.h>\r\nstruct int_data \r\n{ int d1,d2;}; \r\nint main() \r\n{ \r\n	struct int_data  data[2]={{2,3},{5,6}};\r\n	int i;\r\n	int sum=10; \r\n	for(i=0;i<2;i++)\r\n    {\r\n		scanf(\"%d%d\",&data[i].d1,&data[i].d2);\r\n		sum=data[i].d1+data[i].d2+sum;\r\n	}\r\n	printf(\"sum=%d \\n\",sum);\r\n	return 0;\r\n}\r\n输入：20 30 40 50<回车>\r\n', 'sum=150', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('170', '#include<stdio.h>\r\nint main( )\r\n{\r\n	union exa\r\n    {\r\n		struct\r\n        {\r\n			int a;\r\n            int b;\r\n        }out;\r\n        int c;\r\n        int d;\r\n	}e;\r\n	e.out.a=10;\r\n	e.out.b=20;\r\n	e.c=2;\r\n	e.d=5;\r\n	printf(\"%d,%d\\n\",e.out.a, e.out.b);\r\n	return 0;\r\n}\r\n', '5,20', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('171', '#include<stdio.h>\r\nstruct st\r\n{\r\n	int a;\r\n	int b;\r\n	union\r\n	{  \r\n		int e;\r\n		int f;\r\n	}c;\r\n};\r\nint main( )\r\n{\r\n	struct st y;	\r\n	y.a=10;\r\n	y.c.e=20;\r\n	y.c.f=y.a;\r\n	y.b=y.c.e;\r\n	\r\n	printf(\"%d,%d\\n\",y.c.e,y.c.f);\r\n	return 0;\r\n}\r\n', '10,10', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('172', '#include<stdio.h>\r\nstruct sta\r\n{\r\n	int a;\r\n	char b;\r\n};\r\nstruct stb\r\n{\r\n	int a;\r\n	char b;\r\n	struct sta c;\r\n};\r\n\r\nint main( )\r\n{\r\n	struct stb y;	\r\n	y.a=10;\r\n	y.b=\'X\';\r\n	y.c.a=y.a*2;\r\n	y.c.b=y.b--;\r\n	printf(\"%d,%c\\n\",y.c.a,y.c.b);\r\n	return 0;\r\n}\r\n', '20，X', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('173', '#include<stdio.h>\r\nunion st\r\n{\r\n	int a[2];\r\n	int b[2];\r\n	int c;\r\n};\r\n\r\nint main( )\r\n{\r\n	union st y;	\r\n	y.a[0]=10;\r\n	y.b[1]=20;	\r\n	y.c=30;\r\n	printf(\"%d,%d\\n\",y.a[0],y.a[1]);\r\n	return 0;\r\n}\r\n', '30,20', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('174', '#include<stdio.h>\r\nstruct two\r\n{   \r\n	int n;\r\n	char ch;\r\n};\r\n\r\nvoid main( )\r\n{\r\nstruct two ex1={5,\'t\'};\r\nprintf(\"%d,%c\\n\",ex1.n+10,ex1.ch-1);\r\n}\r\n', '15,s', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('175', '#include<stdio.h>\r\nstruct two\r\n{\r\n	int n;\r\n	char ch;\r\n};\r\nvoid func(struct two ex2);\r\nvoid main()\r\n{\r\n	struct two ex1={6,\'v\'};\r\n	func(ex1);\r\n	printf(\"%d,%c\\n\",ex1.n,ex1.ch);\r\n	getchar();\r\n}\r\nvoid func(struct two ex2)\r\n{\r\n	ex2.n= ex2.n +20;\r\n	ex2.ch= ex2.ch -1;\r\n}\r\n', '6,v', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('176', '#include <stdio.h>\r\nunion exa{\r\n	struct{\r\n		int a;\r\n		int b;\r\n	}out;\r\n	int c;\r\n	int d;\r\n};\r\nvoid main()\r\n{\r\n	union exa e;\r\n	e.c=1;\r\n	e.d=3;\r\n	e.out.a=e.c;\r\n	e.out.b=e.d;\r\n	printf(\"%d,%d\\n\",e.out.a,e.out.b);\r\n}\r\n', '3,3', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('177', '#include <stdio.h>\r\nstruct stu\r\n{\r\nint a;\r\nint b;\r\nstruct poi\r\n{\r\nint x;\r\nint y;\r\n}ins;\r\n};\r\nvoid main()\r\n{\r\n    struct stu outs;\r\n    outs.a=11;\r\n    outs.b=4;\r\n    outs.ins.x=outs.a+outs.b;\r\n    outs.ins.y=outs.a-outs.b;\r\n    printf(\"%d,%d\", outs.ins.x, outs.ins.y);\r\n}\r\n', '15,7', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('178', '#include<stdio.h>\r\nstruct abc\r\n{\r\n    int a, b, c;\r\n};\r\nint main()\r\n{\r\n    struct abc s[2] = {{1,2,3},{4,5,6}};\r\n    int t;\r\n    t = s[0].a + s[1].c;\r\n    printf(\"t=%d \\n\",t);\r\n    return 0;\r\n}\r\n', 't=7', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('179', '#include <stdio.h>\r\nstruct st\r\n{\r\n    int x, y;\r\n} data[2] = {1, 10, 2, 20};\r\nint main()\r\n{\r\n    struct st *p = data ;\r\n    printf(\"%d\\n\", p->y ) ;\r\n    printf(\"%d\\n\", (++p)->x ) ;\r\n    return 0 ;\r\n}\r\n', '10\r\n2\r\n', '结构体', '结构体的应用场合', '8', '3');
INSERT INTO `tk_readpg` VALUES ('180', 'struct n\r\n{\r\n    int x;\r\n    char c;\r\n};\r\n\r\nvoid func(struct n b)\r\n{\r\n    b.x = 20;\r\n    b.c = \'y\';\r\n}\r\n\r\nint main()\r\n{\r\n    struct n a = {10, \'x\'};\r\n    func(a);\r\n    printf(\"%d,%c\", a.x, a.c);\r\n    return 0;\r\n}\r\n', '10,x', '结构体', '结构体的应用场合', '8', '4');
INSERT INTO `tk_readpg` VALUES ('181', 'int main()\r\n{\r\n    struct EXAMPLE\r\n    {\r\n        struct\r\n        {\r\n            int x;\r\n            int y;\r\n        } in;\r\n        int a;\r\n        int b;\r\n    } e;\r\n\r\n    e.a = 1;\r\n    e.b = 2;\r\n    e.in.x = e.a * e.b;\r\n    e.in.y = e.a + e.b;\r\n    printf(\"%d,%d\", e.in.x, e.in.y);\r\n    return 0;\r\n}\r\n', '2,3', '结构体', '结构体的应用场合', '8', '5');
INSERT INTO `tk_readpg` VALUES ('182', '#include <stdio.h>\r\nint main()\r\n{\r\n	int i=0,a[5]={11,12,13},*q;\r\n	for(q=a;q<a+5;q++,i++)\r\n	{\r\n		*q+=5;\r\n		printf(\"%5d\",a[i]);\r\n	}\r\n	printf(\"\\n\");\r\n	return 0;\r\n}\r\n', '16   17   18    5    5', '指针', '指针概念', '7', '4');
INSERT INTO `tk_readpg` VALUES ('183', 'include<stdio.h>\r\nvoid fun(int *p);\r\nint main()\r\n{\r\n	int a[5]={1,2,3,4,5},*r=a;\r\n	fun(r);\r\n	printf(\"%d\\n\",*r);\r\n	return 0;\r\n}\r\nvoid fun(int *p)\r\n{\r\n	p=p+2;\r\n	printf(\"%d\\n\",*p);\r\n}\r\n', '3\r\n1\r\n', '指针', '指针概念', '7', '4');
INSERT INTO `tk_readpg` VALUES ('184', '#include <stdio.h>\r\nint main()\r\n{\r\n	int a[3][3]={0,1,2,3,4,5,6,7,8};\r\n	int *p,(*q)[3];\r\n	int i=0;\r\n	for(q=a;q<a+3;q++,i++)\r\n	{\r\n		for(p=*q;p<=*q+i;p++)\r\n			printf(\"%5d\",*p);\r\n		printf(\"\\n\");\r\n	}\r\n	return 0;\r\n}\r\n', '0\r\n    3    4\r\n    6    7    8\r\n', '指针', '指针概念', '7', '5');
INSERT INTO `tk_readpg` VALUES ('185', '#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n	char str[20]=\"I am a student.\",*p=str;\r\n	char *q=\"You are a teacher.\";\r\n	p=p+7;\r\n	q=q+10;\r\n	strcpy(p,q);\r\n	puts(str);\r\n	return 0;\r\n}\r\n', 'I am a teacher', '指针', '指针概念', '7', '4');
INSERT INTO `tk_readpg` VALUES ('186', '#include <stdio.h>\r\nvoid swap(int x, int y)\r\n{\r\n	int z; \r\n	z=x; \r\n	x=y; \r\n	y=z;\r\n}\r\nvoid pswap(int *x, int *y)\r\n{\r\n	int z; \r\n	z=*x;\r\n	*x=*y;\r\n	*y=z;\r\n}\r\nvoid main()\r\n{\r\n	int a=3, b=2;\r\n	printf(\"first:a=%d, b=%d \\n\", a, b);\r\n	swap(a,b);\r\n	printf(\"second:a=%d,b=%d\\n\", a,b);\r\n	pswap(&a,&b);\r\n	printf(\"third:a=%d,b=%d\",a,b);\r\n}\r\n', 'first:a=3, b=2\r\nsecond:a=3,b=2\r\nthird:a=2,b=3\r\n', '指针', '指针概念', '7', '5');
INSERT INTO `tk_readpg` VALUES ('187', '#include <stdio.h>\r\nvoid f(int a, int b, int *c, int *d)\r\n{\r\n	a=30; b=40;\r\n	*c=a+b;\r\n	*d=*d-a;\r\n}\r\nvoid main()\r\n{\r\n	int a=10,b=20,c=30,d=40;\r\n	f(a,b,&c,&d);\r\n	printf(\"%d,%d,%d,%d\",a,b,c,d);\r\n}\r\n', '10,20,70,10', '指针', '指针概念', '7', '4');
INSERT INTO `tk_readpg` VALUES ('188', '#include <stdio.h>\r\nvoid ast(int *cp, int *dp)\r\n{\r\n	int x=4,y=3;\r\n	*cp=++x+y;\r\n	*dp=x-y;\r\n}\r\nvoid main()\r\n{	\r\n	int c, d;\r\n	ast(&c,&d);\r\n	printf(\"%d\\n%d\\n\", c, d);\r\n}\r\n', '8\r\n2\r\n', '指针', '指针概念', '7', '5');
INSERT INTO `tk_readpg` VALUES ('189', '#include<stdio.h>\r\nvoid main()\r\n{\r\n	char s[]=\"ABCD\",*p;\r\n	for(p=s+1;p<s+4;p++)\r\n		printf(\"%s\\n\",p);\r\n}\r\n', 'BCD\r\nCD\r\nD\r\n', '指针', '指针概念', '7', '4');
INSERT INTO `tk_readpg` VALUES ('190', '#include<stdio.h>\r\nvoid main()\r\n{\r\n	char *p=\"I am a student.\";\r\n	p=p+3;\r\n	printf(\"%s\",p);\r\n}', 'm a student', '指针', '指针概念', '7', '5');
INSERT INTO `tk_readpg` VALUES ('191', '#include <stdio.h>\r\nvoid main( )\r\n{\r\n	char *p=\"This is a programe.\";\r\n	p=p+10;\r\n	printf(\"%s\",p);   \r\n}\r\n', 'programe.', '指针', '指针概念', '7', '4');
INSERT INTO `tk_readpg` VALUES ('192', '#include <stdio.h>\r\nvoid add(int *p, int n)\r\n{\r\n	int *pend = p + n;\r\n	for( ; p<pend; p++)\r\n		*p += 10;\r\n}\r\nvoid main( )\r\n{\r\n	int a[5]={1,2,3,4,5}, *q = a;\r\n	add(q, 5);\r\n	for(q=a; q < a+5; q++)\r\n		printf(\"%4d\", *q);  \r\n}\r\n', '11  12  13  14  15', '指针', '指针概念', '7', '5');
INSERT INTO `tk_readpg` VALUES ('193', '#include <stdio.h>\r\nint f(int x,int *y);\r\nvoid main()\r\n{\r\n	int a,b,c;\r\n	a=3;\r\n	b=5;\r\n	c=f(a,&b);\r\n	printf(\"%d,%d,%d\\n\",a,b,c);\r\n}  \r\nint f(int x,int *y)\r\n{\r\n	int a=2;\r\n	x=x+a;\r\n	*y=x+a;\r\n	return(a);\r\n}\r\n', '3,7,2', '指针', '指针概念', '7', '4');
INSERT INTO `tk_readpg` VALUES ('194', '#include <stdio.h>\r\nvoid fun (int  x , int  *y );\r\nint  main()\r\n{\r\n	int a = 2 , b = 3 , *c = &b;\r\n    fun(a, c);\r\n    printf(\"a=%d, b=%d, c=%d\\n\", a, b, *c);\r\n    return 0;\r\n}\r\nvoid fun( int  x , int  *y )\r\n{\r\n    int a = 4;\r\n    *y = x + a;\r\n    x = *y;\r\n}\r\n', 'a=2, b=6, c=6', '指针', '指针概念', '7', '4');
INSERT INTO `tk_readpg` VALUES ('195', '#include <stdio.h>\r\nvoid sub(int x, int y, int *z)\r\n{\r\n	*z = y - x;\r\n}\r\nint main()\r\n{\r\n	int a, b, c;\r\n    sub(10, 5, &a);\r\n    sub(7, a, &b);\r\n    sub(a, b, &c);\r\n    printf(\" % 4d, % 4d, % 4d\\n\", a, b, c);\r\n    return 0;\r\n}\r\n', '-5,  -12,   -7', '指针', '指针概念', '7', '4');
INSERT INTO `tk_readpg` VALUES ('196', '#include <stdio.h>\r\nint main()\r\n{\r\n	char a[] = \"language\", *p;\r\n    p = a;\r\n    while (*p != \'u\')\r\n    {\r\n        printf(\" % c\", *p - 32);\r\n        p++;\r\n    }\r\n	return 0;\r\n}\r\n', 'L A N G', '指针', '指针概念', '7', '5');
INSERT INTO `tk_readpg` VALUES ('197', '#include <stdio.h>\r\nint stre(char str[])\r\n{\r\n	int num = 0;\r\n    while(*(str + num) != \'\\0\')\r\n        num++;\r\n    return num;\r\n}\r\nint main()\r\n{\r\n    char str[10], *p = str;\r\n    gets(p);\r\n    printf(\" %d\\n\", stre(p));\r\n    return 0;\r\n}\r\n输入：happy<回车>\r\n', '5', '指针', '循环结构', '7', '4');
INSERT INTO `tk_readpg` VALUES ('198', '#include<stdio.h>\r\nvoid f(int x, int *y)\r\n{\r\n	x=x%10;\r\n	*y=*y/10+x;\r\n}\r\nint main()\r\n{\r\n	int a=88,b=99,*c;\r\n	c=&b;\r\n	f(a,c);\r\n    printf(\"%d,%d\\n\",a,b);\r\n    return 0;\r\n}\r\n', '88,17', '指针', '指针概念', '7', '5');
INSERT INTO `tk_readpg` VALUES ('199', '#include<stdio.h>\r\nvoid main()\r\n{\r\n	char a[][7]={ \"Teacher\",\"Tom\" , \"Good\"};\r\n	char *p=a[0];	\r\n	p=p+3;\r\n	printf(\"%s\\n%s\\n\", a[0],p);\r\n}\r\n', 'TeacherTom\r\ncherTom\r\n', '指针', '指针概念', '7', '4');
INSERT INTO `tk_readpg` VALUES ('200', '#include<stdio.h>\r\nvoid main()\r\n{\r\n	char a[][7]={ \"Teacher\",\"Tom\" , \"Good\"};\r\n	char (*p)[7]=a;	\r\n	printf(\"%s\\n%s\\n\", a[0],++p);\r\n}\r\n', 'TeacherTom\r\nTom\r\n', '指针', '指针概念', '7', '5');
INSERT INTO `tk_readpg` VALUES ('201', '#include <stdio.h>\r\nvoid ast(int x, int y, int *a, int *b)\r\n{\r\n	*a=x+y;\r\n	*b=*a-y;\r\n}\r\nvoid main()\r\n{\r\n	int a, b, c, d;\r\n	a=10; \r\n	b=20;\r\n	ast(a,b,&c,&d);\r\n	printf(\"%d,%d\\n\", c, d);\r\n}\r\n', '30,10', '指针', '指针概念', '7', '4');
